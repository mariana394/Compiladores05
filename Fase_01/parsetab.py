
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS ASSIGN CHAR COLON COMMA CTE_CHAR CTE_FLOAT CTE_INT DATAFRAME DATE DIVIDE DO DUMMI_REGRESSION ELSE END EQUAL EXPLORATION FINANCIAL_STATE FLOAT FOR FROM FUNCTION GORE GTHAN ID IF IMPORT INT LBRACKET LORE LPAREN LSQBRACKET LTHAN MAIN MINUS MODEL_PREDICT MODULE MULTIPLY NOTEQUAL OR PLUS POWER PRINT PROGRAM RBRACKET READ RETURN RPAREN RSQBRACKET SEASON_ANALYSIS SEMICOLON TO TREND_PREDICTION VAR VOID WHILEprogram : PROGRAM ID goto_main program_libraries program_vars program_function program_main end goto_main : SEMICOLONend : END empty : id_saver : ID empty int_const_saver : CTE_INT \n                       | emptyrelease_exp : emptyresources : emptyprogram_libraries : from_library import_library \n                         | emptyfrom_library : FROM ID\n                    | emptyimport_library : IMPORT ID AS ID  program_librariesvar_type : var_c_type\n                | var_s_typeprogram_vars : VAR var_type  \n                    | emptys_type : INT \n              | FLOAT\n              | CHARc_type : DATAFRAME\n              | DATEvar_multiple : var_type\n                    | emptyvar_c_type : c_type id_saver add_c_var var_c_type2 SEMICOLON var_multiplevar_c_type2 : COMMA id_saver add_c_var var_c_type2\n                   | emptyadd_c_var : emptyvar_s_type : s_type id_saver var_s_array add_s_var var_s_type2 SEMICOLON var_multiplevar_s_type2 : COMMA id_saver var_s_array add_s_var var_s_type2\n                   | emptyadd_s_var : emptyvar_s_array : LSQBRACKET var_s_dimesions RSQBRACKET var_s_matrix \n                   | emptyvar_s_matrix : LSQBRACKET var_s_dimesions RSQBRACKET\n                    | emptyvar_s_dimesions : CTE_INT emptyvariable : var_id_saver variable_array clear_dimensionclear_dimension : empty var_id_saver : id_savervariable_array : LSQBRACKET index_arr_mat RSQBRACKET variable_matrix\n                      | emptyvariable_matrix : LSQBRACKET index_arr_mat RSQBRACKET\n                       | emptyindex_arr_mat : expprogram_function : FUNCTION resources f_type id_saver func_creator  LPAREN param RPAREN add_func_glob program_vars inner_body return end_function program_function\n                        | emptyf_type : INT \n              | FLOAT\n              | CHAR\n              | VOIDfunc_creator : emptyadd_func_glob : LBRACKETend_function : RBRACKETparam : s_type id_saver add_params param2\n             | emptyparam2 : COMMA s_type id_saver add_params param2\n              | emptyadd_params : emptyreturn : return_np exp return_quad SEMICOLON\n              | empty_path_returnreturn_np : RETURNreturn_quad : emptyempty_path_return : emptyprogram_main :  main_id LBRACKET program_vars inner_body RBRACKETmain_id : MAIN resources body : LBRACKET inner_body RBRACKETinner_body :  statement inner_body\n                  | emptyassign : variable keep_assign specialf_assign end_assignspecialf_assign : exp\n                       | special_function\n                       | readkeep_assign : ASSIGN emptyend_assign : SEMICOLON emptycondition : IF LPAREN exp RPAREN condition_GOTOF body condition2 SEMICOLON end_conditioncondition2 : ELSE condition_GOTO body\n                 | emptycondition_GOTOF : emptycondition_GOTO : emptyend_condition : emptyprint : PRINT LPAREN print_many RPAREN SEMICOLON end_print_npprint_type : expprint_many : print_type print_many2 print_many2 : COMMA print_many_np print_many\n                   | emptyprint_many_np : emptyend_print_np : emptyread : np_read LPAREN valid_exp_read read_npnp_read : READvalid_exp_read : expread_np : RPARENcycle : for\n             | whilewhile : DO seed body WHILE LPAREN exp RPAREN SEMICOLON gotoVseed : emptygotoV : emptyfor : FOR LPAREN for_control keep_assign exp for_np1 for_end body for_np2for_control : id_saverfor_np1 :  TOfor_end : int_const_saver RPARENfor_np2 : SEMICOLONcall_function : function_saver function_flag call_params check_not_void check_not_void : RPARENcall_void_function : function_saver function_flag call_params verify_params check_voidverify_params : RPARENcheck_void : SEMICOLONfunction_saver : ID emptyfunction_flag : LPARENcall_params : check_param exp_many\n                   | emptycheck_param : expexp_many : COMMA check_param exp_many\n                | emptystatement : assign\n                 | condition\n                 | print\n                 | cycle\n                 | call_void_functionspecial_function : exploration\n                        | financial_state\n                        | dummi_regression\n                        | season_analysis\n                        | trend_prediction\n                        | model_predicttag_sp : LPARENexploration : EXPLORATION tag_sp variable explore_var np_check_sizesp_param : COMMAnp_check_size : RPARENexplore_var : sp_param variable explor_cte\n                   | emptyexplor_cte : sp_param int_const_saver\n                  | emptyfinancial_state : FINANCIAL_STATE tag_sp variable sp_param variable sp_param variable sp_param variable np_check_sizeseason_analysis : SEASON_ANALYSIS tag_sp variable np_check_sizetrend_prediction : TREND_PREDICTION tag_sp variable sp_param int_const_saver sp_param int_const_saver sp_param int_const_saver np_check_sizedummi_regression : DUMMI_REGRESSION tag_sp variable sp_param variable dr_array dr_int np_check_sizedr_array : COMMA LSQBRACKET CTE_CHAR dr_array_mp RSQBRACKET\n                | emptydr_array_mp : COMMA CTE_CHAR dr_array_mp\n                   | emptydr_int : COMMA int_const_saver\n              | emptymodel_predict : MODEL_PREDICT tag_sp variable sp_param variable np_check_sizeexp : t_exp release_exp exp_orexp_or : exp_keep_or  exp\n              | emptyexp_keep_or : ORt_exp : expression release_exp t_exp_andt_exp_and : keep_and t_exp\n                 | emptykeep_and : AND expression : m_exp release_exp expression_compexpression_comp :  expression_comp_2  m_exp release_exp\n                       |  emptyexpression_comp_2 : GTHAN\n                         | EQUAL\n                         | NOTEQUAL\n                         | LTHAN\n                         | GORE\n                         | LORE\n                         m_exp : term release_exp m_exp_srm_exp_sr : m_exp_sr_2 m_exp\n                | emptym_exp_sr_2 : PLUS\n                  | MINUSterm : sub_factor release_exp term_pcterm_pc : term_pc_2 term\n               | emptyterm_pc_2 : MULTIPLY\n                 | DIVIDE\n                 | MODULEsub_factor : factor release_exp sub_factor_pcsub_factor_pc : sub_factor_pc_2 sub_factor\n                     | emptysub_factor_pc_2 : POWER emptyfactor : factor_exp\n              | factor_cte\n              | variable\n              | call_functionfactor_exp : false_button exp release_false_buttonfalse_button : LPARENrelease_false_button : RPARENfactor_cte : CTE_FLOAT\n                  | CTE_INT\n                  | CTE_CHAR'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,39,40,],[0,-1,-3,]),'ID':([2,9,12,14,19,20,21,22,23,24,25,26,27,28,38,41,43,44,45,46,47,55,58,66,68,69,70,71,72,76,77,86,89,95,96,97,98,99,100,102,104,109,110,111,113,131,147,152,168,170,173,176,177,180,182,183,184,185,186,187,188,194,198,203,206,213,215,217,221,223,231,233,234,235,236,237,238,240,242,243,245,247,248,249,251,253,259,260,261,262,263,265,269,271,272,281,283,284,285,289,294,298,299,306,327,331,337,342,344,346,356,357,359,360,361,362,367,],[3,15,-18,29,-17,-15,-16,36,36,-22,-23,-19,-20,-21,54,-4,36,-49,-50,-51,-52,82,36,82,-116,-117,-118,-119,-120,-94,-95,-4,36,82,-4,82,82,82,-110,82,36,-26,-24,-25,-4,-183,82,-75,82,36,-30,-71,-4,82,36,-127,36,36,36,36,36,82,-4,82,82,-76,82,-149,82,-153,82,-157,-158,-159,-160,-161,-162,82,-166,-167,82,-171,-172,-173,82,-4,-4,82,-88,-106,-108,82,82,-4,-54,36,-129,36,36,36,-177,-83,-89,82,36,36,-4,-4,82,-63,-77,-82,-99,-103,-96,-98,36,]),'SEMICOLON':([3,35,36,37,48,49,50,51,53,57,59,60,61,79,82,83,87,88,90,91,101,103,107,112,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,132,140,141,142,143,144,145,146,148,149,150,161,162,172,174,178,179,181,189,190,191,192,196,200,201,205,211,212,214,216,220,222,230,232,239,241,244,246,250,252,254,255,266,267,270,275,276,277,278,279,286,287,290,291,292,293,295,296,297,310,318,319,321,322,325,336,340,358,365,368,373,374,382,385,],[5,-4,-4,-4,-4,-29,-5,-4,-35,86,-28,-4,-33,-4,-4,-41,-4,113,-32,-4,-4,-43,-5,-4,-4,-34,-37,-180,177,-72,-73,-74,-4,-121,-122,-123,-124,-125,-126,-4,-4,-4,-4,-4,-178,-179,-181,-185,-186,-187,-39,-40,-27,-4,-4,-8,-4,-4,-4,-4,-4,259,263,-107,-4,-4,-36,-146,-148,-150,-152,-154,-156,-163,-165,-168,-170,-174,-176,-182,-184,-42,-45,-68,-31,-147,-90,-93,-151,-136,-130,-4,-164,-169,-175,-104,-105,-4,-128,-155,337,-79,-44,342,-145,360,-78,-4,-138,381,-64,-135,-137,]),'FROM':([4,5,54,],[9,-2,9,]),'VAR':([4,5,6,8,13,41,54,64,271,272,],[-4,-2,11,-11,-10,11,-4,-14,11,-54,]),'FUNCTION':([4,5,6,8,10,12,13,19,20,21,54,64,86,109,110,111,113,173,363,364,],[-4,-2,-4,-11,17,-18,-10,-17,-15,-16,-4,-14,-4,-26,-24,-25,-4,-30,17,-55,]),'MAIN':([4,5,6,8,10,12,13,16,18,19,20,21,54,64,86,109,110,111,113,173,363,364,372,],[-4,-2,-4,-11,-4,-18,-10,32,-48,-17,-15,-16,-4,-14,-4,-26,-24,-25,-4,-30,-4,-55,-47,]),'IMPORT':([4,5,7,8,15,54,],[-4,-2,14,-13,-12,-4,]),'DATAFRAME':([11,86,113,],[24,24,24,]),'DATE':([11,86,113,],[25,25,25,]),'INT':([11,17,33,34,86,108,113,308,],[26,-4,44,-9,26,26,26,26,]),'FLOAT':([11,17,33,34,86,108,113,308,],[27,-4,45,-9,27,27,27,27,]),'CHAR':([11,17,33,34,86,108,113,308,],[28,-4,46,-9,28,28,28,28,]),'IF':([12,19,20,21,41,55,66,68,69,70,71,72,76,77,86,109,110,111,113,168,173,176,177,213,259,262,263,271,272,298,299,306,337,342,356,357,359,360,361,362,],[-18,-17,-15,-16,-4,74,74,-116,-117,-118,-119,-120,-94,-95,-4,-26,-24,-25,-4,74,-30,-71,-4,-76,-4,-106,-108,-4,-54,-83,-89,74,-4,-4,-77,-82,-99,-103,-96,-98,]),'PRINT':([12,19,20,21,41,55,66,68,69,70,71,72,76,77,86,109,110,111,113,168,173,176,177,213,259,262,263,271,272,298,299,306,337,342,356,357,359,360,361,362,],[-18,-17,-15,-16,-4,75,75,-116,-117,-118,-119,-120,-94,-95,-4,-26,-24,-25,-4,75,-30,-71,-4,-76,-4,-106,-108,-4,-54,-83,-89,75,-4,-4,-77,-82,-99,-103,-96,-98,]),'FOR':([12,19,20,21,41,55,66,68,69,70,71,72,76,77,86,109,110,111,113,168,173,176,177,213,259,262,263,271,272,298,299,306,337,342,356,357,359,360,361,362,],[-18,-17,-15,-16,-4,80,80,-116,-117,-118,-119,-120,-94,-95,-4,-26,-24,-25,-4,80,-30,-71,-4,-76,-4,-106,-108,-4,-54,-83,-89,80,-4,-4,-77,-82,-99,-103,-96,-98,]),'DO':([12,19,20,21,41,55,66,68,69,70,71,72,76,77,86,109,110,111,113,168,173,176,177,213,259,262,263,271,272,298,299,306,337,342,356,357,359,360,361,362,],[-18,-17,-15,-16,-4,81,81,-116,-117,-118,-119,-120,-94,-95,-4,-26,-24,-25,-4,81,-30,-71,-4,-76,-4,-106,-108,-4,-54,-83,-89,81,-4,-4,-77,-82,-99,-103,-96,-98,]),'RBRACKET':([12,19,20,21,41,55,65,66,67,68,69,70,71,72,76,77,86,94,109,110,111,113,168,173,176,177,208,213,259,262,263,271,272,298,299,306,326,337,342,343,345,347,356,357,359,360,361,362,381,],[-18,-17,-15,-16,-4,-4,93,-4,-70,-116,-117,-118,-119,-120,-94,-95,-4,-69,-26,-24,-25,-4,-4,-30,-71,-4,270,-76,-4,-106,-108,-4,-54,-83,-89,-4,-4,-4,-4,364,-62,-65,-77,-82,-99,-103,-96,-98,-61,]),'RETURN':([12,19,20,21,66,67,68,69,70,71,72,76,77,86,94,109,110,111,113,173,176,177,213,259,262,263,271,272,298,299,306,326,337,342,356,357,359,360,361,362,],[-18,-17,-15,-16,-4,-70,-116,-117,-118,-119,-120,-94,-95,-4,-69,-26,-24,-25,-4,-30,-71,-4,-76,-4,-106,-108,-4,-54,-83,-89,-4,346,-4,-4,-77,-82,-99,-103,-96,-98,]),'VOID':([17,33,34,],[-4,47,-9,]),'AS':([29,],[38,]),'END':([30,93,],[40,-66,]),'LBRACKET':([31,32,34,42,81,105,106,195,209,257,258,320,323,338,339,341,],[41,-4,-9,-67,-4,168,-97,-4,272,168,-80,-4,168,168,-81,-102,]),'COMMA':([35,36,37,48,49,50,51,53,60,61,79,82,83,87,91,101,103,107,112,114,116,117,118,123,132,140,141,142,143,144,145,146,148,149,150,155,156,158,160,161,162,174,178,179,181,189,190,191,192,205,210,211,212,214,216,220,222,224,225,226,228,229,230,232,239,241,244,246,250,252,254,255,264,266,267,273,274,276,279,283,288,290,291,292,293,295,296,311,312,313,314,315,316,318,322,332,334,335,348,350,355,366,370,383,384,],[-4,-4,-4,58,-29,-5,-4,-35,89,-33,-4,-4,-41,-4,-4,-4,-43,-5,58,-4,-34,-37,-180,-4,-4,-4,-4,-4,-4,-178,-179,-181,-185,-186,-187,198,-84,203,-113,-39,-40,-4,-4,-8,-4,-4,-4,-4,-4,-4,-4,89,-36,-146,-148,-150,-152,283,283,283,283,283,-154,-156,-163,-165,-168,-170,-174,-176,-182,-184,203,-42,-45,308,-60,-147,-151,-129,-4,-4,-164,-169,-175,-104,-105,283,283,333,283,-6,-7,-155,-44,352,-140,-4,-4,283,283,308,377,377,-139,]),'LSQBRACKET':([36,37,50,79,82,83,91,107,114,205,333,],[-4,52,-5,102,-4,-41,115,-5,52,265,354,]),'LPAREN':([36,50,56,74,75,78,80,82,84,85,95,96,97,98,99,100,102,107,130,131,133,134,135,136,137,138,139,147,151,152,180,194,198,203,206,207,215,217,221,223,231,233,234,235,236,237,238,240,242,243,245,247,248,249,251,253,260,261,265,269,294,344,346,],[-4,-5,-4,97,98,100,104,-4,108,-53,131,-4,131,131,131,-110,131,-109,180,-183,183,183,183,183,183,183,-91,131,100,-75,131,131,-4,131,131,269,131,-149,131,-153,131,-157,-158,-159,-160,-161,-162,131,-166,-167,131,-171,-172,-173,131,-4,131,-88,131,131,-177,131,-63,]),'ASSIGN':([36,50,73,79,82,83,101,103,107,161,162,165,166,205,266,267,322,],[-4,-5,96,-4,-4,-41,-4,-43,-5,-39,-40,96,-100,-4,-42,-45,-44,]),'RPAREN':([36,50,79,82,83,99,100,101,103,107,108,118,123,132,140,141,142,143,144,145,146,148,149,150,153,154,155,156,157,158,159,160,161,162,169,171,178,179,181,189,190,191,192,193,194,197,199,202,204,205,210,214,216,218,219,220,222,224,227,230,232,239,241,244,246,250,252,254,255,256,264,266,267,273,274,276,279,280,282,283,290,291,292,293,295,296,300,301,303,304,305,307,309,311,313,315,316,317,318,322,324,328,329,330,332,334,348,349,351,352,353,366,369,371,375,376,380,384,],[-4,-5,-4,-4,-41,-4,-110,-4,-43,-5,-4,-180,-4,-4,-4,-4,-4,-4,-178,-179,-181,-185,-186,-187,195,196,-4,-84,201,-4,-112,-113,-39,-40,209,-57,-4,-8,-4,-4,-4,-4,-4,255,-4,-85,-87,-111,-115,-4,-4,-146,-148,278,-92,-150,-152,-4,287,-154,-156,-163,-165,-168,-170,-174,-176,-182,-184,296,-4,-42,-45,-4,-60,-147,-151,287,-132,-129,-4,-164,-169,-175,-104,-105,-86,-114,-4,-101,325,-56,-59,-4,-4,-6,-7,287,-155,-44,341,-4,-131,-134,-4,-140,-4,-133,287,-4,-144,-4,-143,-4,-58,287,287,-139,]),'CTE_INT':([52,95,96,97,98,99,100,102,115,131,147,152,180,194,198,203,206,215,217,221,223,231,233,234,235,236,237,238,240,242,243,245,247,248,249,251,253,260,261,265,269,283,288,294,303,304,328,335,344,346,352,371,],[63,149,-4,149,149,149,-110,149,63,-183,149,-75,149,149,-4,149,149,149,-149,149,-153,149,-157,-158,-159,-160,-161,-162,149,-166,-167,149,-171,-172,-173,149,-4,149,-88,149,149,-129,315,-177,315,-101,315,315,149,-63,315,315,]),'RSQBRACKET':([62,63,79,82,83,92,101,103,107,118,123,132,140,141,142,143,144,145,146,148,149,150,161,162,163,164,175,178,179,181,189,190,191,192,205,214,216,220,222,230,232,239,241,244,246,250,252,254,255,266,267,276,279,290,291,292,293,295,296,302,318,322,370,378,379,383,386,],[91,-4,-4,-4,-41,-38,-4,-43,-5,-180,-4,-4,-4,-4,-4,-4,-178,-179,-181,-185,-186,-187,-39,-40,205,-46,212,-4,-8,-4,-4,-4,-4,-4,-4,-146,-148,-150,-152,-154,-156,-163,-165,-168,-170,-174,-176,-182,-184,-42,-45,-147,-151,-4,-164,-169,-175,-104,-105,322,-155,-44,-4,384,-142,-4,-141,]),'POWER':([79,82,83,101,103,107,118,143,144,145,146,148,149,150,161,162,179,192,205,254,255,266,267,295,296,322,],[-4,-4,-41,-4,-43,-5,-180,-4,-178,-179,-181,-185,-186,-187,-39,-40,-8,253,-4,-182,-184,-42,-45,-104,-105,-44,]),'MULTIPLY':([79,82,83,101,103,107,118,142,143,144,145,146,148,149,150,161,162,179,191,192,205,250,252,254,255,266,267,293,295,296,322,],[-4,-4,-41,-4,-43,-5,-180,-4,-4,-178,-179,-181,-185,-186,-187,-39,-40,-8,247,-4,-4,-174,-176,-182,-184,-42,-45,-175,-104,-105,-44,]),'DIVIDE':([79,82,83,101,103,107,118,142,143,144,145,146,148,149,150,161,162,179,191,192,205,250,252,254,255,266,267,293,295,296,322,],[-4,-4,-41,-4,-43,-5,-180,-4,-4,-178,-179,-181,-185,-186,-187,-39,-40,-8,248,-4,-4,-174,-176,-182,-184,-42,-45,-175,-104,-105,-44,]),'MODULE':([79,82,83,101,103,107,118,142,143,144,145,146,148,149,150,161,162,179,191,192,205,250,252,254,255,266,267,293,295,296,322,],[-4,-4,-41,-4,-43,-5,-180,-4,-4,-178,-179,-181,-185,-186,-187,-39,-40,-8,249,-4,-4,-174,-176,-182,-184,-42,-45,-175,-104,-105,-44,]),'PLUS':([79,82,83,101,103,107,118,141,142,143,144,145,146,148,149,150,161,162,179,190,191,192,205,244,246,250,252,254,255,266,267,292,293,295,296,322,],[-4,-4,-41,-4,-43,-5,-180,-4,-4,-4,-178,-179,-181,-185,-186,-187,-39,-40,-8,242,-4,-4,-4,-168,-170,-174,-176,-182,-184,-42,-45,-169,-175,-104,-105,-44,]),'MINUS':([79,82,83,101,103,107,118,141,142,143,144,145,146,148,149,150,161,162,179,190,191,192,205,244,246,250,252,254,255,266,267,292,293,295,296,322,],[-4,-4,-41,-4,-43,-5,-180,-4,-4,-4,-178,-179,-181,-185,-186,-187,-39,-40,-8,243,-4,-4,-4,-168,-170,-174,-176,-182,-184,-42,-45,-169,-175,-104,-105,-44,]),'GTHAN':([79,82,83,101,103,107,118,140,141,142,143,144,145,146,148,149,150,161,162,179,189,190,191,192,205,239,241,244,246,250,252,254,255,266,267,291,292,293,295,296,322,],[-4,-4,-41,-4,-43,-5,-180,-4,-4,-4,-4,-178,-179,-181,-185,-186,-187,-39,-40,-8,233,-4,-4,-4,-4,-163,-165,-168,-170,-174,-176,-182,-184,-42,-45,-164,-169,-175,-104,-105,-44,]),'EQUAL':([79,82,83,101,103,107,118,140,141,142,143,144,145,146,148,149,150,161,162,179,189,190,191,192,205,239,241,244,246,250,252,254,255,266,267,291,292,293,295,296,322,],[-4,-4,-41,-4,-43,-5,-180,-4,-4,-4,-4,-178,-179,-181,-185,-186,-187,-39,-40,-8,234,-4,-4,-4,-4,-163,-165,-168,-170,-174,-176,-182,-184,-42,-45,-164,-169,-175,-104,-105,-44,]),'NOTEQUAL':([79,82,83,101,103,107,118,140,141,142,143,144,145,146,148,149,150,161,162,179,189,190,191,192,205,239,241,244,246,250,252,254,255,266,267,291,292,293,295,296,322,],[-4,-4,-41,-4,-43,-5,-180,-4,-4,-4,-4,-178,-179,-181,-185,-186,-187,-39,-40,-8,235,-4,-4,-4,-4,-163,-165,-168,-170,-174,-176,-182,-184,-42,-45,-164,-169,-175,-104,-105,-44,]),'LTHAN':([79,82,83,101,103,107,118,140,141,142,143,144,145,146,148,149,150,161,162,179,189,190,191,192,205,239,241,244,246,250,252,254,255,266,267,291,292,293,295,296,322,],[-4,-4,-41,-4,-43,-5,-180,-4,-4,-4,-4,-178,-179,-181,-185,-186,-187,-39,-40,-8,236,-4,-4,-4,-4,-163,-165,-168,-170,-174,-176,-182,-184,-42,-45,-164,-169,-175,-104,-105,-44,]),'GORE':([79,82,83,101,103,107,118,140,141,142,143,144,145,146,148,149,150,161,162,179,189,190,191,192,205,239,241,244,246,250,252,254,255,266,267,291,292,293,295,296,322,],[-4,-4,-41,-4,-43,-5,-180,-4,-4,-4,-4,-178,-179,-181,-185,-186,-187,-39,-40,-8,237,-4,-4,-4,-4,-163,-165,-168,-170,-174,-176,-182,-184,-42,-45,-164,-169,-175,-104,-105,-44,]),'LORE':([79,82,83,101,103,107,118,140,141,142,143,144,145,146,148,149,150,161,162,179,189,190,191,192,205,239,241,244,246,250,252,254,255,266,267,291,292,293,295,296,322,],[-4,-4,-41,-4,-43,-5,-180,-4,-4,-4,-4,-178,-179,-181,-185,-186,-187,-39,-40,-8,238,-4,-4,-4,-4,-163,-165,-168,-170,-174,-176,-182,-184,-42,-45,-164,-169,-175,-104,-105,-44,]),'AND':([79,82,83,101,103,107,118,132,140,141,142,143,144,145,146,148,149,150,161,162,179,181,189,190,191,192,205,230,232,239,241,244,246,250,252,254,255,266,267,290,291,292,293,295,296,318,322,],[-4,-4,-41,-4,-43,-5,-180,-4,-4,-4,-4,-4,-178,-179,-181,-185,-186,-187,-39,-40,-8,223,-4,-4,-4,-4,-4,-154,-156,-163,-165,-168,-170,-174,-176,-182,-184,-42,-45,-4,-164,-169,-175,-104,-105,-155,-44,]),'OR':([79,82,83,101,103,107,118,123,132,140,141,142,143,144,145,146,148,149,150,161,162,178,179,181,189,190,191,192,205,220,222,230,232,239,241,244,246,250,252,254,255,266,267,279,290,291,292,293,295,296,318,322,],[-4,-4,-41,-4,-43,-5,-180,-4,-4,-4,-4,-4,-4,-178,-179,-181,-185,-186,-187,-39,-40,217,-8,-4,-4,-4,-4,-4,-4,-150,-152,-154,-156,-163,-165,-168,-170,-174,-176,-182,-184,-42,-45,-151,-4,-164,-169,-175,-104,-105,-155,-44,]),'TO':([79,82,83,101,103,107,118,123,132,140,141,142,143,144,145,146,148,149,150,161,162,178,179,181,189,190,191,192,205,214,216,220,222,230,232,239,241,244,246,250,252,254,255,266,267,268,276,279,290,291,292,293,295,296,318,322,],[-4,-4,-41,-4,-43,-5,-180,-4,-4,-4,-4,-4,-4,-178,-179,-181,-185,-186,-187,-39,-40,-4,-8,-4,-4,-4,-4,-4,-4,-146,-148,-150,-152,-154,-156,-163,-165,-168,-170,-174,-176,-182,-184,-42,-45,304,-147,-151,-4,-164,-169,-175,-104,-105,-155,-44,]),'EXPLORATION':([95,96,152,],[133,-4,-75,]),'FINANCIAL_STATE':([95,96,152,],[134,-4,-75,]),'DUMMI_REGRESSION':([95,96,152,],[135,-4,-75,]),'SEASON_ANALYSIS':([95,96,152,],[136,-4,-75,]),'TREND_PREDICTION':([95,96,152,],[137,-4,-75,]),'MODEL_PREDICT':([95,96,152,],[138,-4,-75,]),'READ':([95,96,152,],[139,-4,-75,]),'CTE_FLOAT':([95,96,97,98,99,100,102,131,147,152,180,194,198,203,206,215,217,221,223,231,233,234,235,236,237,238,240,242,243,245,247,248,249,251,253,260,261,265,269,294,344,346,],[148,-4,148,148,148,-110,148,-183,148,-75,148,148,-4,148,148,148,-149,148,-153,148,-157,-158,-159,-160,-161,-162,148,-166,-167,148,-171,-172,-173,148,-4,148,-88,148,148,-177,148,-63,]),'CTE_CHAR':([95,96,97,98,99,100,102,131,147,152,180,194,198,203,206,215,217,221,223,231,233,234,235,236,237,238,240,242,243,245,247,248,249,251,253,260,261,265,269,294,344,346,354,377,],[150,-4,150,150,150,-110,150,-183,150,-75,150,150,-4,150,150,150,-149,150,-153,150,-157,-158,-159,-160,-161,-162,150,-166,-167,150,-171,-172,-173,150,-4,150,-88,150,150,-177,150,-63,370,383,]),'WHILE':([167,270,],[207,-68,]),'ELSE':([270,297,],[-68,320,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'goto_main':([3,],[4,]),'program_libraries':([4,54,],[6,64,]),'from_library':([4,54,],[7,7,]),'empty':([4,6,10,17,32,35,36,37,41,48,51,54,55,56,60,63,66,79,81,82,86,87,91,96,99,101,108,112,113,114,123,132,140,141,142,143,155,158,168,174,177,178,181,189,190,191,192,194,195,198,205,210,211,224,253,259,264,271,273,288,290,297,303,306,311,313,320,326,328,332,335,337,342,348,352,363,365,366,370,371,383,],[8,12,18,34,34,49,50,53,12,59,61,8,67,85,90,92,67,103,106,107,111,49,117,152,159,162,171,59,111,53,179,179,179,179,179,179,199,204,67,61,213,216,222,232,241,246,252,159,258,261,267,274,90,282,294,299,204,12,309,316,179,321,316,67,330,334,339,347,316,353,316,357,362,274,316,18,374,309,379,316,379,]),'program_vars':([6,41,271,],[10,55,306,]),'import_library':([7,],[13,]),'program_function':([10,363,],[16,372,]),'var_type':([11,86,113,],[19,110,110,]),'var_c_type':([11,86,113,],[20,20,20,]),'var_s_type':([11,86,113,],[21,21,21,]),'c_type':([11,86,113,],[22,22,22,]),'s_type':([11,86,108,113,308,],[23,23,170,23,327,]),'program_main':([16,],[30,]),'main_id':([16,],[31,]),'resources':([17,32,],[33,42,]),'id_saver':([22,23,43,55,58,66,89,95,97,98,99,102,104,147,168,170,180,182,184,185,186,187,188,194,203,206,215,221,231,240,245,251,260,265,269,281,284,285,289,306,327,331,344,367,],[35,37,56,83,87,83,114,83,83,83,83,83,166,83,83,210,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,348,83,83,83,]),'end':([30,],[39,]),'f_type':([33,],[43,]),'add_c_var':([35,87,],[48,112,]),'var_s_array':([37,114,],[51,174,]),'var_c_type2':([48,112,],[57,172,]),'add_s_var':([51,174,],[60,211,]),'var_s_dimesions':([52,115,],[62,175,]),'inner_body':([55,66,168,306,],[65,94,208,326,]),'statement':([55,66,168,306,],[66,66,66,66,]),'assign':([55,66,168,306,],[68,68,68,68,]),'condition':([55,66,168,306,],[69,69,69,69,]),'print':([55,66,168,306,],[70,70,70,70,]),'cycle':([55,66,168,306,],[71,71,71,71,]),'call_void_function':([55,66,168,306,],[72,72,72,72,]),'variable':([55,66,95,97,98,99,102,147,168,180,182,184,185,186,187,188,194,203,206,215,221,231,240,245,251,260,265,269,281,284,285,289,306,331,344,367,],[73,73,118,118,118,118,118,118,73,118,224,225,226,227,228,229,118,118,118,118,118,118,118,118,118,118,118,118,311,312,313,317,73,350,118,376,]),'for':([55,66,168,306,],[76,76,76,76,]),'while':([55,66,168,306,],[77,77,77,77,]),'function_saver':([55,66,95,97,98,99,102,147,168,180,194,203,206,215,221,231,240,245,251,260,265,269,306,344,],[78,78,151,151,151,151,151,151,78,151,151,151,151,151,151,151,151,151,151,151,151,151,78,151,]),'var_id_saver':([55,66,95,97,98,99,102,147,168,180,182,184,185,186,187,188,194,203,206,215,221,231,240,245,251,260,265,269,281,284,285,289,306,331,344,367,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'func_creator':([56,],[84,]),'var_s_type2':([60,211,],[88,275,]),'keep_assign':([73,165,],[95,206,]),'function_flag':([78,151,],[99,194,]),'variable_array':([79,],[101,]),'seed':([81,],[105,]),'var_multiple':([86,113,],[109,173,]),'var_s_matrix':([91,],[116,]),'specialf_assign':([95,],[119,]),'exp':([95,97,98,99,102,147,180,194,203,206,215,260,265,269,344,],[120,153,156,160,164,193,219,160,160,268,276,156,164,305,365,]),'special_function':([95,],[121,]),'read':([95,],[122,]),'t_exp':([95,97,98,99,102,147,180,194,203,206,215,221,260,265,269,344,],[123,123,123,123,123,123,123,123,123,123,123,279,123,123,123,123,]),'exploration':([95,],[124,]),'financial_state':([95,],[125,]),'dummi_regression':([95,],[126,]),'season_analysis':([95,],[127,]),'trend_prediction':([95,],[128,]),'model_predict':([95,],[129,]),'np_read':([95,],[130,]),'expression':([95,97,98,99,102,147,180,194,203,206,215,221,260,265,269,344,],[132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,]),'m_exp':([95,97,98,99,102,147,180,194,203,206,215,221,231,240,260,265,269,344,],[140,140,140,140,140,140,140,140,140,140,140,140,290,291,140,140,140,140,]),'term':([95,97,98,99,102,147,180,194,203,206,215,221,231,240,245,260,265,269,344,],[141,141,141,141,141,141,141,141,141,141,141,141,141,141,292,141,141,141,141,]),'sub_factor':([95,97,98,99,102,147,180,194,203,206,215,221,231,240,245,251,260,265,269,344,],[142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,293,142,142,142,142,]),'factor':([95,97,98,99,102,147,180,194,203,206,215,221,231,240,245,251,260,265,269,344,],[143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,]),'factor_exp':([95,97,98,99,102,147,180,194,203,206,215,221,231,240,245,251,260,265,269,344,],[144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,]),'factor_cte':([95,97,98,99,102,147,180,194,203,206,215,221,231,240,245,251,260,265,269,344,],[145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,]),'call_function':([95,97,98,99,102,147,180,194,203,206,215,221,231,240,245,251,260,265,269,344,],[146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,]),'false_button':([95,97,98,99,102,147,180,194,203,206,215,221,231,240,245,251,260,265,269,344,],[147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,]),'print_many':([98,260,],[154,300,]),'print_type':([98,260,],[155,155,]),'call_params':([99,194,],[157,256,]),'check_param':([99,194,203,],[158,158,264,]),'clear_dimension':([101,],[161,]),'index_arr_mat':([102,265,],[163,302,]),'for_control':([104,],[165,]),'body':([105,257,323,338,],[167,297,340,358,]),'param':([108,],[169,]),'end_assign':([119,],[176,]),'release_exp':([123,132,140,141,142,143,290,],[178,181,189,190,191,192,318,]),'tag_sp':([133,134,135,136,137,138,],[182,184,185,186,187,188,]),'print_many2':([155,],[197,]),'verify_params':([157,],[200,]),'exp_many':([158,264,],[202,301,]),'exp_or':([178,],[214,]),'exp_keep_or':([178,],[215,]),'valid_exp_read':([180,],[218,]),'t_exp_and':([181,],[220,]),'keep_and':([181,],[221,]),'expression_comp':([189,],[230,]),'expression_comp_2':([189,],[231,]),'m_exp_sr':([190,],[239,]),'m_exp_sr_2':([190,],[240,]),'term_pc':([191,],[244,]),'term_pc_2':([191,],[245,]),'sub_factor_pc':([192,],[250,]),'sub_factor_pc_2':([192,],[251,]),'release_false_button':([193,],[254,]),'condition_GOTOF':([195,],[257,]),'print_many_np':([198,],[260,]),'check_void':([200,],[262,]),'variable_matrix':([205,],[266,]),'add_func_glob':([209,],[271,]),'add_params':([210,348,],[273,366,]),'read_np':([218,],[277,]),'explore_var':([224,],[280,]),'sp_param':([224,225,226,228,229,311,312,314,350,355,],[281,284,285,288,289,328,331,335,367,371,]),'np_check_size':([227,280,317,351,376,380,],[286,310,336,368,382,385,]),'check_not_void':([256,],[295,]),'end_print_np':([259,],[298,]),'for_np1':([268,],[303,]),'param2':([273,366,],[307,375,]),'int_const_saver':([288,303,328,335,352,371,],[314,324,349,355,369,380,]),'condition2':([297,],[319,]),'for_end':([303,],[323,]),'explor_cte':([311,],[329,]),'dr_array':([313,],[332,]),'condition_GOTO':([320,],[338,]),'return':([326,],[343,]),'return_np':([326,],[344,]),'empty_path_return':([326,],[345,]),'dr_int':([332,],[351,]),'end_condition':([337,],[356,]),'for_np2':([340,],[359,]),'gotoV':([342,],[361,]),'end_function':([343,],[363,]),'return_quad':([365,],[373,]),'dr_array_mp':([370,383,],[378,386,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID goto_main program_libraries program_vars program_function program_main end','program',8,'p_program','parser.py',47),
  ('goto_main -> SEMICOLON','goto_main',1,'p_goto_main','parser.py',51),
  ('end -> END','end',1,'p_end','parser.py',56),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',93),
  ('id_saver -> ID empty','id_saver',2,'p_id_saver','parser.py',100),
  ('int_const_saver -> CTE_INT','int_const_saver',1,'p_int_const_saver','parser.py',109),
  ('int_const_saver -> empty','int_const_saver',1,'p_int_const_saver','parser.py',110),
  ('release_exp -> empty','release_exp',1,'p_release_exp','parser.py',122),
  ('resources -> empty','resources',1,'p_resources','parser.py',128),
  ('program_libraries -> from_library import_library','program_libraries',2,'p_program_libraries','parser.py',148),
  ('program_libraries -> empty','program_libraries',1,'p_program_libraries','parser.py',149),
  ('from_library -> FROM ID','from_library',2,'p_from_library','parser.py',152),
  ('from_library -> empty','from_library',1,'p_from_library','parser.py',153),
  ('import_library -> IMPORT ID AS ID program_libraries','import_library',5,'p_import_library','parser.py',156),
  ('var_type -> var_c_type','var_type',1,'p_var_type','parser.py',161),
  ('var_type -> var_s_type','var_type',1,'p_var_type','parser.py',162),
  ('program_vars -> VAR var_type','program_vars',2,'p_program_vars','parser.py',165),
  ('program_vars -> empty','program_vars',1,'p_program_vars','parser.py',166),
  ('s_type -> INT','s_type',1,'p_s_type','parser.py',176),
  ('s_type -> FLOAT','s_type',1,'p_s_type','parser.py',177),
  ('s_type -> CHAR','s_type',1,'p_s_type','parser.py',178),
  ('c_type -> DATAFRAME','c_type',1,'p_c_type','parser.py',185),
  ('c_type -> DATE','c_type',1,'p_c_type','parser.py',186),
  ('var_multiple -> var_type','var_multiple',1,'p_var_multiple','parser.py',193),
  ('var_multiple -> empty','var_multiple',1,'p_var_multiple','parser.py',194),
  ('var_c_type -> c_type id_saver add_c_var var_c_type2 SEMICOLON var_multiple','var_c_type',6,'p_var_c_type','parser.py',197),
  ('var_c_type2 -> COMMA id_saver add_c_var var_c_type2','var_c_type2',4,'p_var_c_type2','parser.py',200),
  ('var_c_type2 -> empty','var_c_type2',1,'p_var_c_type2','parser.py',201),
  ('add_c_var -> empty','add_c_var',1,'p_add_c_var','parser.py',204),
  ('var_s_type -> s_type id_saver var_s_array add_s_var var_s_type2 SEMICOLON var_multiple','var_s_type',7,'p_var_s_type','parser.py',210),
  ('var_s_type2 -> COMMA id_saver var_s_array add_s_var var_s_type2','var_s_type2',5,'p_var_s_type2','parser.py',213),
  ('var_s_type2 -> empty','var_s_type2',1,'p_var_s_type2','parser.py',214),
  ('add_s_var -> empty','add_s_var',1,'p_add_s_var','parser.py',219),
  ('var_s_array -> LSQBRACKET var_s_dimesions RSQBRACKET var_s_matrix','var_s_array',4,'p_var_s_array','parser.py',228),
  ('var_s_array -> empty','var_s_array',1,'p_var_s_array','parser.py',229),
  ('var_s_matrix -> LSQBRACKET var_s_dimesions RSQBRACKET','var_s_matrix',3,'p_var_s_matrix','parser.py',234),
  ('var_s_matrix -> empty','var_s_matrix',1,'p_var_s_matrix','parser.py',235),
  ('var_s_dimesions -> CTE_INT empty','var_s_dimesions',2,'p_var_s_dimesions','parser.py',239),
  ('variable -> var_id_saver variable_array clear_dimension','variable',3,'p_variable','parser.py',256),
  ('clear_dimension -> empty','clear_dimension',1,'p_clear_dimension','parser.py',259),
  ('var_id_saver -> id_saver','var_id_saver',1,'p_var_id_saver','parser.py',264),
  ('variable_array -> LSQBRACKET index_arr_mat RSQBRACKET variable_matrix','variable_array',4,'p_variable_array','parser.py',282),
  ('variable_array -> empty','variable_array',1,'p_variable_array','parser.py',283),
  ('variable_matrix -> LSQBRACKET index_arr_mat RSQBRACKET','variable_matrix',3,'p_variable_matrix','parser.py',290),
  ('variable_matrix -> empty','variable_matrix',1,'p_variable_matrix','parser.py',291),
  ('index_arr_mat -> exp','index_arr_mat',1,'p_index_arr_mat','parser.py',295),
  ('program_function -> FUNCTION resources f_type id_saver func_creator LPAREN param RPAREN add_func_glob program_vars inner_body return end_function program_function','program_function',14,'p_program_function','parser.py',307),
  ('program_function -> empty','program_function',1,'p_program_function','parser.py',308),
  ('f_type -> INT','f_type',1,'p_f_type','parser.py',313),
  ('f_type -> FLOAT','f_type',1,'p_f_type','parser.py',314),
  ('f_type -> CHAR','f_type',1,'p_f_type','parser.py',315),
  ('f_type -> VOID','f_type',1,'p_f_type','parser.py',316),
  ('func_creator -> empty','func_creator',1,'p_func_creator','parser.py',328),
  ('add_func_glob -> LBRACKET','add_func_glob',1,'p_add_func_glob','parser.py',338),
  ('end_function -> RBRACKET','end_function',1,'p_end_function','parser.py',347),
  ('param -> s_type id_saver add_params param2','param',4,'p_param','parser.py',355),
  ('param -> empty','param',1,'p_param','parser.py',356),
  ('param2 -> COMMA s_type id_saver add_params param2','param2',5,'p_param2','parser.py',360),
  ('param2 -> empty','param2',1,'p_param2','parser.py',361),
  ('add_params -> empty','add_params',1,'p_add_params','parser.py',365),
  ('return -> return_np exp return_quad SEMICOLON','return',4,'p_return','parser.py',373),
  ('return -> empty_path_return','return',1,'p_return','parser.py',374),
  ('return_np -> RETURN','return_np',1,'p_return_np','parser.py',377),
  ('return_quad -> empty','return_quad',1,'p_return_quad','parser.py',386),
  ('empty_path_return -> empty','empty_path_return',1,'p_empty_path_return','parser.py',395),
  ('program_main -> main_id LBRACKET program_vars inner_body RBRACKET','program_main',5,'p_program_main','parser.py',406),
  ('main_id -> MAIN resources','main_id',2,'p_main_id','parser.py',409),
  ('body -> LBRACKET inner_body RBRACKET','body',3,'p_body','parser.py',419),
  ('inner_body -> statement inner_body','inner_body',2,'p_inner_body','parser.py',423),
  ('inner_body -> empty','inner_body',1,'p_inner_body','parser.py',424),
  ('assign -> variable keep_assign specialf_assign end_assign','assign',4,'p_assign','parser.py',429),
  ('specialf_assign -> exp','specialf_assign',1,'p_specialf_assign','parser.py',433),
  ('specialf_assign -> special_function','specialf_assign',1,'p_specialf_assign','parser.py',434),
  ('specialf_assign -> read','specialf_assign',1,'p_specialf_assign','parser.py',435),
  ('keep_assign -> ASSIGN empty','keep_assign',2,'p_keep_assign','parser.py',439),
  ('end_assign -> SEMICOLON empty','end_assign',2,'p_end_assign','parser.py',455),
  ('condition -> IF LPAREN exp RPAREN condition_GOTOF body condition2 SEMICOLON end_condition','condition',9,'p_condition','parser.py',463),
  ('condition2 -> ELSE condition_GOTO body','condition2',3,'p_condition2','parser.py',466),
  ('condition2 -> empty','condition2',1,'p_condition2','parser.py',467),
  ('condition_GOTOF -> empty','condition_GOTOF',1,'p_condition_GOTOF','parser.py',471),
  ('condition_GOTO -> empty','condition_GOTO',1,'p_condition_GOTO','parser.py',478),
  ('end_condition -> empty','end_condition',1,'p_end_condition','parser.py',483),
  ('print -> PRINT LPAREN print_many RPAREN SEMICOLON end_print_np','print',6,'p_print','parser.py',492),
  ('print_type -> exp','print_type',1,'p_print_type','parser.py',495),
  ('print_many -> print_type print_many2','print_many',2,'p_print_many','parser.py',498),
  ('print_many2 -> COMMA print_many_np print_many','print_many2',3,'p_print_many2','parser.py',501),
  ('print_many2 -> empty','print_many2',1,'p_print_many2','parser.py',502),
  ('print_many_np -> empty','print_many_np',1,'p_print_many_np','parser.py',505),
  ('end_print_np -> empty','end_print_np',1,'p_end_print_np','parser.py',509),
  ('read -> np_read LPAREN valid_exp_read read_np','read',4,'p_read','parser.py',515),
  ('np_read -> READ','np_read',1,'p_np_read','parser.py',519),
  ('valid_exp_read -> exp','valid_exp_read',1,'p_valid_exp_read','parser.py',523),
  ('read_np -> RPAREN','read_np',1,'p_read_np','parser.py',532),
  ('cycle -> for','cycle',1,'p_cycle','parser.py',539),
  ('cycle -> while','cycle',1,'p_cycle','parser.py',540),
  ('while -> DO seed body WHILE LPAREN exp RPAREN SEMICOLON gotoV','while',9,'p_while','parser.py',544),
  ('seed -> empty','seed',1,'p_seed','parser.py',548),
  ('gotoV -> empty','gotoV',1,'p_gotoV','parser.py',553),
  ('for -> FOR LPAREN for_control keep_assign exp for_np1 for_end body for_np2','for',9,'p_for','parser.py',559),
  ('for_control -> id_saver','for_control',1,'p_for_control','parser.py',562),
  ('for_np1 -> TO','for_np1',1,'p_for_np1','parser.py',571),
  ('for_end -> int_const_saver RPAREN','for_end',2,'p_for_end','parser.py',576),
  ('for_np2 -> SEMICOLON','for_np2',1,'p_for_np2','parser.py',589),
  ('call_function -> function_saver function_flag call_params check_not_void','call_function',4,'p_call_function','parser.py',635),
  ('check_not_void -> RPAREN','check_not_void',1,'p_check_not_void','parser.py',640),
  ('call_void_function -> function_saver function_flag call_params verify_params check_void','call_void_function',5,'p_call_void_function','parser.py',661),
  ('verify_params -> RPAREN','verify_params',1,'p_verify_params','parser.py',664),
  ('check_void -> SEMICOLON','check_void',1,'p_check_void','parser.py',673),
  ('function_saver -> ID empty','function_saver',2,'p_function_saver','parser.py',687),
  ('function_flag -> LPAREN','function_flag',1,'p_function_flag','parser.py',699),
  ('call_params -> check_param exp_many','call_params',2,'p_call_params','parser.py',717),
  ('call_params -> empty','call_params',1,'p_call_params','parser.py',718),
  ('check_param -> exp','check_param',1,'p_check_param','parser.py',723),
  ('exp_many -> COMMA check_param exp_many','exp_many',3,'p_exp_many','parser.py',737),
  ('exp_many -> empty','exp_many',1,'p_exp_many','parser.py',738),
  ('statement -> assign','statement',1,'p_statement','parser.py',742),
  ('statement -> condition','statement',1,'p_statement','parser.py',743),
  ('statement -> print','statement',1,'p_statement','parser.py',744),
  ('statement -> cycle','statement',1,'p_statement','parser.py',745),
  ('statement -> call_void_function','statement',1,'p_statement','parser.py',746),
  ('special_function -> exploration','special_function',1,'p_special_function','parser.py',750),
  ('special_function -> financial_state','special_function',1,'p_special_function','parser.py',751),
  ('special_function -> dummi_regression','special_function',1,'p_special_function','parser.py',752),
  ('special_function -> season_analysis','special_function',1,'p_special_function','parser.py',753),
  ('special_function -> trend_prediction','special_function',1,'p_special_function','parser.py',754),
  ('special_function -> model_predict','special_function',1,'p_special_function','parser.py',755),
  ('tag_sp -> LPAREN','tag_sp',1,'p_tag_sp','parser.py',760),
  ('exploration -> EXPLORATION tag_sp variable explore_var np_check_size','exploration',5,'p_exploration','parser.py',773),
  ('sp_param -> COMMA','sp_param',1,'p_sp_param','parser.py',776),
  ('np_check_size -> RPAREN','np_check_size',1,'p_np_check_size','parser.py',793),
  ('explore_var -> sp_param variable explor_cte','explore_var',3,'p_explore_var','parser.py',818),
  ('explore_var -> empty','explore_var',1,'p_explore_var','parser.py',819),
  ('explor_cte -> sp_param int_const_saver','explor_cte',2,'p_explor_cte','parser.py',823),
  ('explor_cte -> empty','explor_cte',1,'p_explor_cte','parser.py',824),
  ('financial_state -> FINANCIAL_STATE tag_sp variable sp_param variable sp_param variable sp_param variable np_check_size','financial_state',10,'p_financial_state','parser.py',829),
  ('season_analysis -> SEASON_ANALYSIS tag_sp variable np_check_size','season_analysis',4,'p_season_analysis','parser.py',833),
  ('trend_prediction -> TREND_PREDICTION tag_sp variable sp_param int_const_saver sp_param int_const_saver sp_param int_const_saver np_check_size','trend_prediction',10,'p_trend_prediction','parser.py',839),
  ('dummi_regression -> DUMMI_REGRESSION tag_sp variable sp_param variable dr_array dr_int np_check_size','dummi_regression',8,'p_dummi_regression','parser.py',843),
  ('dr_array -> COMMA LSQBRACKET CTE_CHAR dr_array_mp RSQBRACKET','dr_array',5,'p_dr_array','parser.py',846),
  ('dr_array -> empty','dr_array',1,'p_dr_array','parser.py',847),
  ('dr_array_mp -> COMMA CTE_CHAR dr_array_mp','dr_array_mp',3,'p_dr_array_mp','parser.py',850),
  ('dr_array_mp -> empty','dr_array_mp',1,'p_dr_array_mp','parser.py',851),
  ('dr_int -> COMMA int_const_saver','dr_int',2,'p_dr_int','parser.py',854),
  ('dr_int -> empty','dr_int',1,'p_dr_int','parser.py',855),
  ('model_predict -> MODEL_PREDICT tag_sp variable sp_param variable np_check_size','model_predict',6,'p_model_predict','parser.py',859),
  ('exp -> t_exp release_exp exp_or','exp',3,'p_exp','parser.py',864),
  ('exp_or -> exp_keep_or exp','exp_or',2,'p_exp_or','parser.py',868),
  ('exp_or -> empty','exp_or',1,'p_exp_or','parser.py',869),
  ('exp_keep_or -> OR','exp_keep_or',1,'p_exp_keep_or','parser.py',872),
  ('t_exp -> expression release_exp t_exp_and','t_exp',3,'p_t_exp','parser.py',881),
  ('t_exp_and -> keep_and t_exp','t_exp_and',2,'p_t_exp_and','parser.py',886),
  ('t_exp_and -> empty','t_exp_and',1,'p_t_exp_and','parser.py',887),
  ('keep_and -> AND','keep_and',1,'p_keep_and','parser.py',890),
  ('expression -> m_exp release_exp expression_comp','expression',3,'p_expression','parser.py',899),
  ('expression_comp -> expression_comp_2 m_exp release_exp','expression_comp',3,'p_expression_comp','parser.py',905),
  ('expression_comp -> empty','expression_comp',1,'p_expression_comp','parser.py',906),
  ('expression_comp_2 -> GTHAN','expression_comp_2',1,'p_expression_comp_2','parser.py',911),
  ('expression_comp_2 -> EQUAL','expression_comp_2',1,'p_expression_comp_2','parser.py',912),
  ('expression_comp_2 -> NOTEQUAL','expression_comp_2',1,'p_expression_comp_2','parser.py',913),
  ('expression_comp_2 -> LTHAN','expression_comp_2',1,'p_expression_comp_2','parser.py',914),
  ('expression_comp_2 -> GORE','expression_comp_2',1,'p_expression_comp_2','parser.py',915),
  ('expression_comp_2 -> LORE','expression_comp_2',1,'p_expression_comp_2','parser.py',916),
  ('m_exp -> term release_exp m_exp_sr','m_exp',3,'p_m_exp','parser.py',926),
  ('m_exp_sr -> m_exp_sr_2 m_exp','m_exp_sr',2,'p_m_exp_sr','parser.py',933),
  ('m_exp_sr -> empty','m_exp_sr',1,'p_m_exp_sr','parser.py',934),
  ('m_exp_sr_2 -> PLUS','m_exp_sr_2',1,'p_m_exp_sr_2','parser.py',937),
  ('m_exp_sr_2 -> MINUS','m_exp_sr_2',1,'p_m_exp_sr_2','parser.py',938),
  ('term -> sub_factor release_exp term_pc','term',3,'p_term','parser.py',946),
  ('term_pc -> term_pc_2 term','term_pc',2,'p_term_pc','parser.py',952),
  ('term_pc -> empty','term_pc',1,'p_term_pc','parser.py',953),
  ('term_pc_2 -> MULTIPLY','term_pc_2',1,'p_term_pc_2','parser.py',956),
  ('term_pc_2 -> DIVIDE','term_pc_2',1,'p_term_pc_2','parser.py',957),
  ('term_pc_2 -> MODULE','term_pc_2',1,'p_term_pc_2','parser.py',958),
  ('sub_factor -> factor release_exp sub_factor_pc','sub_factor',3,'p_sub_factor','parser.py',964),
  ('sub_factor_pc -> sub_factor_pc_2 sub_factor','sub_factor_pc',2,'p_sub_factor_pc','parser.py',970),
  ('sub_factor_pc -> empty','sub_factor_pc',1,'p_sub_factor_pc','parser.py',971),
  ('sub_factor_pc_2 -> POWER empty','sub_factor_pc_2',2,'p_sub_factor_pc_2','parser.py',974),
  ('factor -> factor_exp','factor',1,'p_factor','parser.py',982),
  ('factor -> factor_cte','factor',1,'p_factor','parser.py',983),
  ('factor -> variable','factor',1,'p_factor','parser.py',984),
  ('factor -> call_function','factor',1,'p_factor','parser.py',985),
  ('factor_exp -> false_button exp release_false_button','factor_exp',3,'p_factor_exp','parser.py',992),
  ('false_button -> LPAREN','false_button',1,'p_false_button','parser.py',997),
  ('release_false_button -> RPAREN','release_false_button',1,'p_release_false_button','parser.py',1003),
  ('factor_cte -> CTE_FLOAT','factor_cte',1,'p_factor_cte','parser.py',1010),
  ('factor_cte -> CTE_INT','factor_cte',1,'p_factor_cte','parser.py',1011),
  ('factor_cte -> CTE_CHAR','factor_cte',1,'p_factor_cte','parser.py',1012),
]
