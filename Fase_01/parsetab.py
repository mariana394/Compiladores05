
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS ASSIGN CHAR COLON COMMA CTE_CHAR CTE_FLOAT CTE_INT DATAFRAME DATE DIVIDE DO DUMMI_REGRESSION ELSE END EQUAL EXPLORATION FINANCIAL_STATE FLOAT FOR FROM FUNCTION GORE GTHAN ID IF IMPORT INT LBRACKET LORE LPAREN LSQBRACKET LTHAN MAIN MINUS MODEL_PREDICT MODULE MULTIPLY NOTEQUAL OR PLUS POWER PRINT PROGRAM RBRACKET READ RETURN RPAREN RSQBRACKET SEASON_ANALYSIS SEMICOLON TO TREND_PREDICTION VAR VOID WHILEprogram : PROGRAM ID goto_main program_libraries program_vars program_function program_main end goto_main : SEMICOLONend : END empty : id_saver : ID empty int_const_saver : CTE_INT \n                       | emptyrelease_exp : emptyresources : emptyprogram_libraries : from_library import_library \n                         | emptyfrom_library : FROM ID\n                    | emptyimport_library : IMPORT ID AS ID  program_librariesvar_type : var_c_type\n                | var_s_typeprogram_vars : VAR var_type  \n                    | emptys_type : INT \n              | FLOAT\n              | CHARc_type : DATAFRAME\n              | DATEvar_multiple : var_type\n                    | emptyvar_c_type : c_type id_saver add_c_var var_c_type2 SEMICOLON var_multiplevar_c_type2 : COMMA id_saver add_c_var var_c_type2\n                   | emptyadd_c_var : emptyvar_s_type : s_type id_saver var_s_array add_s_var var_s_type2 SEMICOLON var_multiplevar_s_type2 : COMMA id_saver var_s_array add_s_var var_s_type2\n                   | emptyadd_s_var : emptyvar_s_array : LSQBRACKET var_s_dimesions RSQBRACKET var_s_matrix \n                   | emptyvar_s_matrix : LSQBRACKET var_s_dimesions RSQBRACKET\n                    | emptyvar_s_dimesions : CTE_INT emptyvariable : id_saver variable_arrayvariable_array : LSQBRACKET exp RSQBRACKET variable_matrix\n                      | emptyvariable_matrix : LSQBRACKET exp RSQBRACKET\n                       | emptyprogram_function : FUNCTION resources f_type id_saver func_creator  LPAREN param RPAREN add_func_glob program_vars inner_body return end_function program_function\n                        | emptyf_type : INT \n              | FLOAT\n              | CHAR\n              | VOIDfunc_creator : emptyadd_func_glob : LBRACKETend_function : RBRACKETparam : s_type id_saver add_params param2\n             | emptyparam2 : COMMA s_type id_saver add_params param2\n              | emptyadd_params : emptyreturn : return_np exp return_quad SEMICOLON\n              | empty_path_returnreturn_np : RETURNreturn_quad : emptyempty_path_return : emptyprogram_main :  main_id LBRACKET program_vars inner_body RBRACKETmain_id : MAIN resources body : LBRACKET inner_body RBRACKETinner_body :  statement inner_body\n                  | emptyassign : variable keep_assign specialf_assign end_assignspecialf_assign : exp\n                       | special_function\n                       | readkeep_assign : ASSIGN emptyend_assign : SEMICOLON emptycondition : IF LPAREN exp RPAREN condition_GOTOF body condition2 SEMICOLON end_conditioncondition2 : ELSE condition_GOTO body\n                 | emptycondition_GOTOF : emptycondition_GOTO : emptyend_condition : emptyprint : PRINT LPAREN print_many RPAREN SEMICOLON end_print_npprint_type : expprint_many : print_type print_many2 print_many2 : COMMA print_many_np print_many\n                   | emptyprint_many_np : emptyend_print_np : emptyread : np_read LPAREN valid_exp_read read_npnp_read : READvalid_exp_read : expread_np : RPARENcycle : for\n             | whilewhile : DO seed body WHILE LPAREN exp RPAREN SEMICOLON gotoVseed : emptygotoV : emptyfor : FOR LPAREN for_control keep_assign exp for_np1 for_end body for_np2for_control : id_saverfor_np1 :  TOfor_end : int_const_saver RPARENfor_np2 : SEMICOLONcall_function : function_saver function_flag call_params check_not_void check_not_void : RPARENcall_void_function : function_saver function_flag call_params verify_params check_voidverify_params : RPARENcheck_void : SEMICOLONfunction_saver : ID emptyfunction_flag : LPARENcall_params : check_param exp_many\n                   | emptycheck_param : expexp_many : COMMA check_param exp_many\n                | emptystatement : assign\n                 | condition\n                 | print\n                 | cycle\n                 | call_void_functionspecial_function : exploration\n                        | financial_state\n                        | dummi_regression\n                        | season_analysis\n                        | trend_prediction\n                        | model_predicttag_sp : LPARENexploration : EXPLORATION tag_sp variable explore_var np_check_sizesp_param : COMMAnp_check_size : RPARENexplore_var : sp_param variable explor_cte\n                   | emptyexplor_cte : sp_param int_const_saver\n                  | emptyfinancial_state : FINANCIAL_STATE tag_sp variable sp_param variable sp_param variable sp_param variable np_check_sizeseason_analysis : SEASON_ANALYSIS tag_sp variable np_check_sizetrend_prediction : TREND_PREDICTION tag_sp variable sp_param int_const_saver sp_param int_const_saver sp_param int_const_saver np_check_sizedummi_regression : DUMMI_REGRESSION tag_sp variable sp_param variable dr_array dr_int np_check_sizedr_array : COMMA LSQBRACKET CTE_CHAR dr_array_mp RSQBRACKET\n                | emptydr_array_mp : COMMA CTE_CHAR dr_array_mp\n                   | emptydr_int : COMMA int_const_saver\n              | emptymodel_predict : MODEL_PREDICT tag_sp variable sp_param variable np_check_sizeexp : t_exp release_exp exp_orexp_or : exp_keep_or  exp\n              | emptyexp_keep_or : ORt_exp : expression release_exp t_exp_andt_exp_and : keep_and t_exp\n                 | emptykeep_and : AND expression : m_exp release_exp expression_compexpression_comp :  expression_comp_2  m_exp release_exp\n                       |  emptyexpression_comp_2 : GTHAN\n                         | EQUAL\n                         | NOTEQUAL\n                         | LTHAN\n                         | GORE\n                         | LORE\n                         m_exp : term release_exp m_exp_srm_exp_sr : m_exp_sr_2 m_exp\n                | emptym_exp_sr_2 : PLUS\n                  | MINUSterm : sub_factor release_exp term_pcterm_pc : term_pc_2 term\n               | emptyterm_pc_2 : MULTIPLY\n                 | DIVIDE\n                 | MODULEsub_factor : factor release_exp sub_factor_pcsub_factor_pc : sub_factor_pc_2 sub_factor\n                     | emptysub_factor_pc_2 : POWER emptyfactor : factor_exp\n              | factor_cte\n              | variable\n              | call_functionfactor_exp : false_button exp release_false_buttonfalse_button : LPARENrelease_false_button : RPARENfactor_cte : CTE_FLOAT\n                  | CTE_INT\n                  | CTE_CHAR'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,39,40,],[0,-1,-3,]),'ID':([2,9,12,14,19,20,21,22,23,24,25,26,27,28,38,41,43,44,45,46,47,55,58,66,68,69,70,71,72,76,77,85,88,94,95,96,97,98,99,101,103,108,109,110,112,130,146,152,165,167,170,173,174,177,179,180,181,182,183,184,185,191,196,201,204,211,213,215,219,221,229,231,232,233,234,235,236,238,240,241,243,245,246,247,249,251,257,258,259,260,261,263,267,269,270,279,281,282,283,287,292,296,297,304,325,329,335,340,342,344,354,355,357,358,359,360,365,],[3,15,-18,29,-17,-15,-16,36,36,-22,-23,-19,-20,-21,54,-4,36,-46,-47,-48,-49,82,36,82,-113,-114,-115,-116,-117,-91,-92,-4,36,151,-4,151,151,151,-107,151,36,-26,-24,-25,-4,-180,151,-72,82,36,-30,-68,-4,151,36,-124,36,36,36,36,36,151,-4,151,151,-73,151,-146,151,-150,151,-154,-155,-156,-157,-158,-159,151,-163,-164,151,-168,-169,-170,151,-4,-4,151,-85,-103,-105,151,151,-4,-51,36,-126,36,36,36,-174,-80,-86,82,36,36,-4,-4,151,-60,-74,-79,-96,-100,-93,-95,36,]),'SEMICOLON':([3,35,36,37,48,49,50,51,53,57,59,60,61,79,86,87,89,90,100,102,111,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,131,139,140,141,142,143,144,145,147,148,149,151,169,171,175,176,178,186,187,188,189,192,194,198,199,203,209,210,212,214,218,220,228,230,237,239,242,244,248,250,252,253,264,265,268,273,274,275,276,277,284,285,288,289,290,291,293,294,295,308,316,317,319,320,323,334,338,356,363,366,371,372,380,383,],[5,-4,-4,-4,-4,-29,-5,-4,-35,85,-28,-4,-33,-4,-4,112,-32,-4,-39,-41,-4,-4,-34,-37,-177,174,-69,-70,-71,-4,-118,-119,-120,-121,-122,-123,-4,-4,-4,-4,-4,-175,-176,-178,-182,-183,-184,-4,-27,-4,-4,-8,-4,-4,-4,-4,-4,-5,257,261,-104,-4,-4,-36,-143,-145,-147,-149,-151,-153,-160,-162,-165,-167,-171,-173,-179,-181,-40,-43,-65,-31,-144,-87,-90,-148,-133,-127,-4,-161,-166,-172,-101,-102,-4,-125,-152,335,-76,-42,340,-142,358,-75,-4,-135,379,-61,-132,-134,]),'FROM':([4,5,54,],[9,-2,9,]),'VAR':([4,5,6,8,13,41,54,64,269,270,],[-4,-2,11,-11,-10,11,-4,-14,11,-51,]),'FUNCTION':([4,5,6,8,10,12,13,19,20,21,54,64,85,108,109,110,112,170,361,362,],[-4,-2,-4,-11,17,-18,-10,-17,-15,-16,-4,-14,-4,-26,-24,-25,-4,-30,17,-52,]),'MAIN':([4,5,6,8,10,12,13,16,18,19,20,21,54,64,85,108,109,110,112,170,361,362,370,],[-4,-2,-4,-11,-4,-18,-10,32,-45,-17,-15,-16,-4,-14,-4,-26,-24,-25,-4,-30,-4,-52,-44,]),'IMPORT':([4,5,7,8,15,54,],[-4,-2,14,-13,-12,-4,]),'DATAFRAME':([11,85,112,],[24,24,24,]),'DATE':([11,85,112,],[25,25,25,]),'INT':([11,17,33,34,85,107,112,306,],[26,-4,44,-9,26,26,26,26,]),'FLOAT':([11,17,33,34,85,107,112,306,],[27,-4,45,-9,27,27,27,27,]),'CHAR':([11,17,33,34,85,107,112,306,],[28,-4,46,-9,28,28,28,28,]),'IF':([12,19,20,21,41,55,66,68,69,70,71,72,76,77,85,108,109,110,112,165,170,173,174,211,257,260,261,269,270,296,297,304,335,340,354,355,357,358,359,360,],[-18,-17,-15,-16,-4,74,74,-113,-114,-115,-116,-117,-91,-92,-4,-26,-24,-25,-4,74,-30,-68,-4,-73,-4,-103,-105,-4,-51,-80,-86,74,-4,-4,-74,-79,-96,-100,-93,-95,]),'PRINT':([12,19,20,21,41,55,66,68,69,70,71,72,76,77,85,108,109,110,112,165,170,173,174,211,257,260,261,269,270,296,297,304,335,340,354,355,357,358,359,360,],[-18,-17,-15,-16,-4,75,75,-113,-114,-115,-116,-117,-91,-92,-4,-26,-24,-25,-4,75,-30,-68,-4,-73,-4,-103,-105,-4,-51,-80,-86,75,-4,-4,-74,-79,-96,-100,-93,-95,]),'FOR':([12,19,20,21,41,55,66,68,69,70,71,72,76,77,85,108,109,110,112,165,170,173,174,211,257,260,261,269,270,296,297,304,335,340,354,355,357,358,359,360,],[-18,-17,-15,-16,-4,80,80,-113,-114,-115,-116,-117,-91,-92,-4,-26,-24,-25,-4,80,-30,-68,-4,-73,-4,-103,-105,-4,-51,-80,-86,80,-4,-4,-74,-79,-96,-100,-93,-95,]),'DO':([12,19,20,21,41,55,66,68,69,70,71,72,76,77,85,108,109,110,112,165,170,173,174,211,257,260,261,269,270,296,297,304,335,340,354,355,357,358,359,360,],[-18,-17,-15,-16,-4,81,81,-113,-114,-115,-116,-117,-91,-92,-4,-26,-24,-25,-4,81,-30,-68,-4,-73,-4,-103,-105,-4,-51,-80,-86,81,-4,-4,-74,-79,-96,-100,-93,-95,]),'RBRACKET':([12,19,20,21,41,55,65,66,67,68,69,70,71,72,76,77,85,93,108,109,110,112,165,170,173,174,206,211,257,260,261,269,270,296,297,304,324,335,340,341,343,345,354,355,357,358,359,360,379,],[-18,-17,-15,-16,-4,-4,92,-4,-67,-113,-114,-115,-116,-117,-91,-92,-4,-66,-26,-24,-25,-4,-4,-30,-68,-4,268,-73,-4,-103,-105,-4,-51,-80,-86,-4,-4,-4,-4,362,-59,-62,-74,-79,-96,-100,-93,-95,-58,]),'RETURN':([12,19,20,21,66,67,68,69,70,71,72,76,77,85,93,108,109,110,112,170,173,174,211,257,260,261,269,270,296,297,304,324,335,340,354,355,357,358,359,360,],[-18,-17,-15,-16,-4,-67,-113,-114,-115,-116,-117,-91,-92,-4,-66,-26,-24,-25,-4,-30,-68,-4,-73,-4,-103,-105,-4,-51,-80,-86,-4,344,-4,-4,-74,-79,-96,-100,-93,-95,]),'VOID':([17,33,34,],[-4,47,-9,]),'AS':([29,],[38,]),'END':([30,92,],[40,-63,]),'LBRACKET':([31,32,34,42,81,104,105,193,207,255,256,318,321,336,337,339,],[41,-4,-9,-64,-4,165,-94,-4,270,165,-77,-4,165,165,-78,-99,]),'COMMA':([35,36,37,48,49,50,51,53,60,61,79,86,90,100,102,111,113,115,116,117,122,131,139,140,141,142,143,144,145,147,148,149,151,155,156,158,160,171,175,176,178,186,187,188,189,192,203,208,209,210,212,214,218,220,222,223,224,226,227,228,230,237,239,242,244,248,250,252,253,262,264,265,271,272,274,277,281,286,288,289,290,291,293,294,309,310,311,312,313,314,316,320,330,332,333,346,348,353,364,368,381,382,],[-4,-4,-4,58,-29,-5,-4,-35,88,-33,-4,-4,-4,-39,-41,58,-4,-34,-37,-177,-4,-4,-4,-4,-4,-4,-175,-176,-178,-182,-183,-184,-4,196,-81,201,-110,-4,-4,-8,-4,-4,-4,-4,-4,-5,-4,-4,88,-36,-143,-145,-147,-149,281,281,281,281,281,-151,-153,-160,-162,-165,-167,-171,-173,-179,-181,201,-40,-43,306,-57,-144,-148,-126,-4,-4,-161,-166,-172,-101,-102,281,281,331,281,-6,-7,-152,-42,350,-137,-4,-4,281,281,306,375,375,-136,]),'LSQBRACKET':([36,37,50,79,82,90,106,113,151,192,203,331,],[-4,52,-5,101,-4,114,-5,52,-4,-5,263,352,]),'LPAREN':([36,50,56,74,75,78,80,82,83,84,94,95,96,97,98,99,101,106,129,130,132,133,134,135,136,137,138,146,150,151,152,177,191,192,196,201,204,205,213,215,219,221,229,231,232,233,234,235,236,238,240,241,243,245,246,247,249,251,258,259,263,267,292,342,344,],[-4,-5,-4,96,97,99,103,-4,107,-50,130,-4,130,130,130,-107,130,-106,177,-180,180,180,180,180,180,180,-88,130,99,-4,-72,130,130,-106,-4,130,130,267,130,-146,130,-150,130,-154,-155,-156,-157,-158,-159,130,-163,-164,130,-168,-169,-170,130,-4,130,-85,130,130,-174,130,-60,]),'ASSIGN':([36,50,73,79,82,100,102,106,162,163,203,264,265,320,],[-4,-5,95,-4,-4,-39,-41,-5,95,-97,-4,-40,-43,-42,]),'RPAREN':([36,50,79,98,99,100,102,107,117,122,131,139,140,141,142,143,144,145,147,148,149,151,153,154,155,156,157,158,159,160,166,168,175,176,178,186,187,188,189,190,191,192,195,197,200,202,203,208,212,214,216,217,218,220,222,225,228,230,237,239,242,244,248,250,252,253,254,262,264,265,271,272,274,277,278,280,281,288,289,290,291,293,294,298,299,301,302,303,305,307,309,311,313,314,315,316,320,322,326,327,328,330,332,346,347,349,350,351,364,367,369,373,374,378,382,],[-4,-5,-4,-4,-107,-39,-41,-4,-177,-4,-4,-4,-4,-4,-4,-175,-176,-178,-182,-183,-184,-4,193,194,-4,-81,199,-4,-109,-110,207,-54,-4,-8,-4,-4,-4,-4,-4,253,-4,-5,-82,-84,-108,-112,-4,-4,-143,-145,276,-89,-147,-149,-4,285,-151,-153,-160,-162,-165,-167,-171,-173,-179,-181,294,-4,-40,-43,-4,-57,-144,-148,285,-129,-126,-4,-161,-166,-172,-101,-102,-83,-111,-4,-98,323,-53,-56,-4,-4,-6,-7,285,-152,-42,339,-4,-128,-131,-4,-137,-4,-130,285,-4,-141,-4,-140,-4,-55,285,285,-136,]),'CTE_INT':([52,94,95,96,97,98,99,101,114,130,146,152,177,191,196,201,204,213,215,219,221,229,231,232,233,234,235,236,238,240,241,243,245,246,247,249,251,258,259,263,267,281,286,292,301,302,326,333,342,344,350,369,],[63,148,-4,148,148,148,-107,148,63,-180,148,-72,148,148,-4,148,148,148,-146,148,-150,148,-154,-155,-156,-157,-158,-159,148,-163,-164,148,-168,-169,-170,148,-4,148,-85,148,148,-126,313,-174,313,-98,313,313,148,-60,313,313,]),'RSQBRACKET':([62,63,79,91,100,102,117,122,131,139,140,141,142,143,144,145,147,148,149,151,161,172,175,176,178,186,187,188,189,192,203,212,214,218,220,228,230,237,239,242,244,248,250,252,253,264,265,274,277,288,289,290,291,293,294,300,316,320,368,376,377,381,384,],[90,-4,-4,-38,-39,-41,-177,-4,-4,-4,-4,-4,-4,-175,-176,-178,-182,-183,-184,-4,203,210,-4,-8,-4,-4,-4,-4,-4,-5,-4,-143,-145,-147,-149,-151,-153,-160,-162,-165,-167,-171,-173,-179,-181,-40,-43,-144,-148,-4,-161,-166,-172,-101,-102,320,-152,-42,-4,382,-139,-4,-138,]),'POWER':([79,100,102,117,142,143,144,145,147,148,149,151,176,189,192,203,252,253,264,265,293,294,320,],[-4,-39,-41,-177,-4,-175,-176,-178,-182,-183,-184,-4,-8,251,-5,-4,-179,-181,-40,-43,-101,-102,-42,]),'MULTIPLY':([79,100,102,117,141,142,143,144,145,147,148,149,151,176,188,189,192,203,248,250,252,253,264,265,291,293,294,320,],[-4,-39,-41,-177,-4,-4,-175,-176,-178,-182,-183,-184,-4,-8,245,-4,-5,-4,-171,-173,-179,-181,-40,-43,-172,-101,-102,-42,]),'DIVIDE':([79,100,102,117,141,142,143,144,145,147,148,149,151,176,188,189,192,203,248,250,252,253,264,265,291,293,294,320,],[-4,-39,-41,-177,-4,-4,-175,-176,-178,-182,-183,-184,-4,-8,246,-4,-5,-4,-171,-173,-179,-181,-40,-43,-172,-101,-102,-42,]),'MODULE':([79,100,102,117,141,142,143,144,145,147,148,149,151,176,188,189,192,203,248,250,252,253,264,265,291,293,294,320,],[-4,-39,-41,-177,-4,-4,-175,-176,-178,-182,-183,-184,-4,-8,247,-4,-5,-4,-171,-173,-179,-181,-40,-43,-172,-101,-102,-42,]),'PLUS':([79,100,102,117,140,141,142,143,144,145,147,148,149,151,176,187,188,189,192,203,242,244,248,250,252,253,264,265,290,291,293,294,320,],[-4,-39,-41,-177,-4,-4,-4,-175,-176,-178,-182,-183,-184,-4,-8,240,-4,-4,-5,-4,-165,-167,-171,-173,-179,-181,-40,-43,-166,-172,-101,-102,-42,]),'MINUS':([79,100,102,117,140,141,142,143,144,145,147,148,149,151,176,187,188,189,192,203,242,244,248,250,252,253,264,265,290,291,293,294,320,],[-4,-39,-41,-177,-4,-4,-4,-175,-176,-178,-182,-183,-184,-4,-8,241,-4,-4,-5,-4,-165,-167,-171,-173,-179,-181,-40,-43,-166,-172,-101,-102,-42,]),'GTHAN':([79,100,102,117,139,140,141,142,143,144,145,147,148,149,151,176,186,187,188,189,192,203,237,239,242,244,248,250,252,253,264,265,289,290,291,293,294,320,],[-4,-39,-41,-177,-4,-4,-4,-4,-175,-176,-178,-182,-183,-184,-4,-8,231,-4,-4,-4,-5,-4,-160,-162,-165,-167,-171,-173,-179,-181,-40,-43,-161,-166,-172,-101,-102,-42,]),'EQUAL':([79,100,102,117,139,140,141,142,143,144,145,147,148,149,151,176,186,187,188,189,192,203,237,239,242,244,248,250,252,253,264,265,289,290,291,293,294,320,],[-4,-39,-41,-177,-4,-4,-4,-4,-175,-176,-178,-182,-183,-184,-4,-8,232,-4,-4,-4,-5,-4,-160,-162,-165,-167,-171,-173,-179,-181,-40,-43,-161,-166,-172,-101,-102,-42,]),'NOTEQUAL':([79,100,102,117,139,140,141,142,143,144,145,147,148,149,151,176,186,187,188,189,192,203,237,239,242,244,248,250,252,253,264,265,289,290,291,293,294,320,],[-4,-39,-41,-177,-4,-4,-4,-4,-175,-176,-178,-182,-183,-184,-4,-8,233,-4,-4,-4,-5,-4,-160,-162,-165,-167,-171,-173,-179,-181,-40,-43,-161,-166,-172,-101,-102,-42,]),'LTHAN':([79,100,102,117,139,140,141,142,143,144,145,147,148,149,151,176,186,187,188,189,192,203,237,239,242,244,248,250,252,253,264,265,289,290,291,293,294,320,],[-4,-39,-41,-177,-4,-4,-4,-4,-175,-176,-178,-182,-183,-184,-4,-8,234,-4,-4,-4,-5,-4,-160,-162,-165,-167,-171,-173,-179,-181,-40,-43,-161,-166,-172,-101,-102,-42,]),'GORE':([79,100,102,117,139,140,141,142,143,144,145,147,148,149,151,176,186,187,188,189,192,203,237,239,242,244,248,250,252,253,264,265,289,290,291,293,294,320,],[-4,-39,-41,-177,-4,-4,-4,-4,-175,-176,-178,-182,-183,-184,-4,-8,235,-4,-4,-4,-5,-4,-160,-162,-165,-167,-171,-173,-179,-181,-40,-43,-161,-166,-172,-101,-102,-42,]),'LORE':([79,100,102,117,139,140,141,142,143,144,145,147,148,149,151,176,186,187,188,189,192,203,237,239,242,244,248,250,252,253,264,265,289,290,291,293,294,320,],[-4,-39,-41,-177,-4,-4,-4,-4,-175,-176,-178,-182,-183,-184,-4,-8,236,-4,-4,-4,-5,-4,-160,-162,-165,-167,-171,-173,-179,-181,-40,-43,-161,-166,-172,-101,-102,-42,]),'AND':([79,100,102,117,131,139,140,141,142,143,144,145,147,148,149,151,176,178,186,187,188,189,192,203,228,230,237,239,242,244,248,250,252,253,264,265,288,289,290,291,293,294,316,320,],[-4,-39,-41,-177,-4,-4,-4,-4,-4,-175,-176,-178,-182,-183,-184,-4,-8,221,-4,-4,-4,-4,-5,-4,-151,-153,-160,-162,-165,-167,-171,-173,-179,-181,-40,-43,-4,-161,-166,-172,-101,-102,-152,-42,]),'OR':([79,100,102,117,122,131,139,140,141,142,143,144,145,147,148,149,151,175,176,178,186,187,188,189,192,203,218,220,228,230,237,239,242,244,248,250,252,253,264,265,277,288,289,290,291,293,294,316,320,],[-4,-39,-41,-177,-4,-4,-4,-4,-4,-4,-175,-176,-178,-182,-183,-184,-4,215,-8,-4,-4,-4,-4,-4,-5,-4,-147,-149,-151,-153,-160,-162,-165,-167,-171,-173,-179,-181,-40,-43,-148,-4,-161,-166,-172,-101,-102,-152,-42,]),'TO':([79,100,102,117,122,131,139,140,141,142,143,144,145,147,148,149,151,175,176,178,186,187,188,189,192,203,212,214,218,220,228,230,237,239,242,244,248,250,252,253,264,265,266,274,277,288,289,290,291,293,294,316,320,],[-4,-39,-41,-177,-4,-4,-4,-4,-4,-4,-175,-176,-178,-182,-183,-184,-4,-4,-8,-4,-4,-4,-4,-4,-5,-4,-143,-145,-147,-149,-151,-153,-160,-162,-165,-167,-171,-173,-179,-181,-40,-43,302,-144,-148,-4,-161,-166,-172,-101,-102,-152,-42,]),'EXPLORATION':([94,95,152,],[132,-4,-72,]),'FINANCIAL_STATE':([94,95,152,],[133,-4,-72,]),'DUMMI_REGRESSION':([94,95,152,],[134,-4,-72,]),'SEASON_ANALYSIS':([94,95,152,],[135,-4,-72,]),'TREND_PREDICTION':([94,95,152,],[136,-4,-72,]),'MODEL_PREDICT':([94,95,152,],[137,-4,-72,]),'READ':([94,95,152,],[138,-4,-72,]),'CTE_FLOAT':([94,95,96,97,98,99,101,130,146,152,177,191,196,201,204,213,215,219,221,229,231,232,233,234,235,236,238,240,241,243,245,246,247,249,251,258,259,263,267,292,342,344,],[147,-4,147,147,147,-107,147,-180,147,-72,147,147,-4,147,147,147,-146,147,-150,147,-154,-155,-156,-157,-158,-159,147,-163,-164,147,-168,-169,-170,147,-4,147,-85,147,147,-174,147,-60,]),'CTE_CHAR':([94,95,96,97,98,99,101,130,146,152,177,191,196,201,204,213,215,219,221,229,231,232,233,234,235,236,238,240,241,243,245,246,247,249,251,258,259,263,267,292,342,344,352,375,],[149,-4,149,149,149,-107,149,-180,149,-72,149,149,-4,149,149,149,-146,149,-150,149,-154,-155,-156,-157,-158,-159,149,-163,-164,149,-168,-169,-170,149,-4,149,-85,149,149,-174,149,-60,368,381,]),'WHILE':([164,268,],[205,-65,]),'ELSE':([268,295,],[-65,318,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'goto_main':([3,],[4,]),'program_libraries':([4,54,],[6,64,]),'from_library':([4,54,],[7,7,]),'empty':([4,6,10,17,32,35,36,37,41,48,51,54,55,56,60,63,66,79,81,82,85,86,90,95,98,107,111,112,113,122,131,139,140,141,142,151,155,158,165,171,174,175,178,186,187,188,189,191,193,196,203,208,209,222,251,257,262,269,271,286,288,295,301,304,309,311,318,324,326,330,333,335,340,346,350,361,363,364,368,369,381,],[8,12,18,34,34,49,50,53,12,59,61,8,67,84,89,91,67,102,105,106,110,49,116,152,159,168,59,110,53,176,176,176,176,176,176,192,197,202,67,61,211,214,220,230,239,244,250,159,256,259,265,272,89,280,292,297,202,12,307,314,176,319,314,67,328,332,337,345,314,351,314,355,360,272,314,18,372,307,377,314,377,]),'program_vars':([6,41,269,],[10,55,304,]),'import_library':([7,],[13,]),'program_function':([10,361,],[16,370,]),'var_type':([11,85,112,],[19,109,109,]),'var_c_type':([11,85,112,],[20,20,20,]),'var_s_type':([11,85,112,],[21,21,21,]),'c_type':([11,85,112,],[22,22,22,]),'s_type':([11,85,107,112,306,],[23,23,167,23,325,]),'program_main':([16,],[30,]),'main_id':([16,],[31,]),'resources':([17,32,],[33,42,]),'id_saver':([22,23,43,55,58,66,88,94,96,97,98,101,103,146,165,167,177,179,181,182,183,184,185,191,201,204,213,219,229,238,243,249,258,263,267,279,282,283,287,304,325,329,342,365,],[35,37,56,79,86,79,113,79,79,79,79,79,163,79,79,208,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,346,79,79,79,]),'end':([30,],[39,]),'f_type':([33,],[43,]),'add_c_var':([35,86,],[48,111,]),'var_s_array':([37,113,],[51,171,]),'var_c_type2':([48,111,],[57,169,]),'add_s_var':([51,171,],[60,209,]),'var_s_dimesions':([52,114,],[62,172,]),'inner_body':([55,66,165,304,],[65,93,206,324,]),'statement':([55,66,165,304,],[66,66,66,66,]),'assign':([55,66,165,304,],[68,68,68,68,]),'condition':([55,66,165,304,],[69,69,69,69,]),'print':([55,66,165,304,],[70,70,70,70,]),'cycle':([55,66,165,304,],[71,71,71,71,]),'call_void_function':([55,66,165,304,],[72,72,72,72,]),'variable':([55,66,94,96,97,98,101,146,165,177,179,181,182,183,184,185,191,201,204,213,219,229,238,243,249,258,263,267,279,282,283,287,304,329,342,365,],[73,73,117,117,117,117,117,117,73,117,222,223,224,225,226,227,117,117,117,117,117,117,117,117,117,117,117,117,309,310,311,315,73,348,117,374,]),'for':([55,66,165,304,],[76,76,76,76,]),'while':([55,66,165,304,],[77,77,77,77,]),'function_saver':([55,66,94,96,97,98,101,146,165,177,191,201,204,213,219,229,238,243,249,258,263,267,304,342,],[78,78,150,150,150,150,150,150,78,150,150,150,150,150,150,150,150,150,150,150,150,150,78,150,]),'func_creator':([56,],[83,]),'var_s_type2':([60,209,],[87,273,]),'keep_assign':([73,162,],[94,204,]),'function_flag':([78,150,],[98,191,]),'variable_array':([79,],[100,]),'seed':([81,],[104,]),'var_multiple':([85,112,],[108,170,]),'var_s_matrix':([90,],[115,]),'specialf_assign':([94,],[118,]),'exp':([94,96,97,98,101,146,177,191,201,204,213,258,263,267,342,],[119,153,156,160,161,190,217,160,160,266,274,156,300,303,363,]),'special_function':([94,],[120,]),'read':([94,],[121,]),'t_exp':([94,96,97,98,101,146,177,191,201,204,213,219,258,263,267,342,],[122,122,122,122,122,122,122,122,122,122,122,277,122,122,122,122,]),'exploration':([94,],[123,]),'financial_state':([94,],[124,]),'dummi_regression':([94,],[125,]),'season_analysis':([94,],[126,]),'trend_prediction':([94,],[127,]),'model_predict':([94,],[128,]),'np_read':([94,],[129,]),'expression':([94,96,97,98,101,146,177,191,201,204,213,219,258,263,267,342,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'m_exp':([94,96,97,98,101,146,177,191,201,204,213,219,229,238,258,263,267,342,],[139,139,139,139,139,139,139,139,139,139,139,139,288,289,139,139,139,139,]),'term':([94,96,97,98,101,146,177,191,201,204,213,219,229,238,243,258,263,267,342,],[140,140,140,140,140,140,140,140,140,140,140,140,140,140,290,140,140,140,140,]),'sub_factor':([94,96,97,98,101,146,177,191,201,204,213,219,229,238,243,249,258,263,267,342,],[141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,291,141,141,141,141,]),'factor':([94,96,97,98,101,146,177,191,201,204,213,219,229,238,243,249,258,263,267,342,],[142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,]),'factor_exp':([94,96,97,98,101,146,177,191,201,204,213,219,229,238,243,249,258,263,267,342,],[143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,]),'factor_cte':([94,96,97,98,101,146,177,191,201,204,213,219,229,238,243,249,258,263,267,342,],[144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,]),'call_function':([94,96,97,98,101,146,177,191,201,204,213,219,229,238,243,249,258,263,267,342,],[145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,]),'false_button':([94,96,97,98,101,146,177,191,201,204,213,219,229,238,243,249,258,263,267,342,],[146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,]),'print_many':([97,258,],[154,298,]),'print_type':([97,258,],[155,155,]),'call_params':([98,191,],[157,254,]),'check_param':([98,191,201,],[158,158,262,]),'for_control':([103,],[162,]),'body':([104,255,321,336,],[164,295,338,356,]),'param':([107,],[166,]),'end_assign':([118,],[173,]),'release_exp':([122,131,139,140,141,142,288,],[175,178,186,187,188,189,316,]),'tag_sp':([132,133,134,135,136,137,],[179,181,182,183,184,185,]),'print_many2':([155,],[195,]),'verify_params':([157,],[198,]),'exp_many':([158,262,],[200,299,]),'exp_or':([175,],[212,]),'exp_keep_or':([175,],[213,]),'valid_exp_read':([177,],[216,]),'t_exp_and':([178,],[218,]),'keep_and':([178,],[219,]),'expression_comp':([186,],[228,]),'expression_comp_2':([186,],[229,]),'m_exp_sr':([187,],[237,]),'m_exp_sr_2':([187,],[238,]),'term_pc':([188,],[242,]),'term_pc_2':([188,],[243,]),'sub_factor_pc':([189,],[248,]),'sub_factor_pc_2':([189,],[249,]),'release_false_button':([190,],[252,]),'condition_GOTOF':([193,],[255,]),'print_many_np':([196,],[258,]),'check_void':([198,],[260,]),'variable_matrix':([203,],[264,]),'add_func_glob':([207,],[269,]),'add_params':([208,346,],[271,364,]),'read_np':([216,],[275,]),'explore_var':([222,],[278,]),'sp_param':([222,223,224,226,227,309,310,312,348,353,],[279,282,283,286,287,326,329,333,365,369,]),'np_check_size':([225,278,315,349,374,378,],[284,308,334,366,380,383,]),'check_not_void':([254,],[293,]),'end_print_np':([257,],[296,]),'for_np1':([266,],[301,]),'param2':([271,364,],[305,373,]),'int_const_saver':([286,301,326,333,350,369,],[312,322,347,353,367,378,]),'condition2':([295,],[317,]),'for_end':([301,],[321,]),'explor_cte':([309,],[327,]),'dr_array':([311,],[330,]),'condition_GOTO':([318,],[336,]),'return':([324,],[341,]),'return_np':([324,],[342,]),'empty_path_return':([324,],[343,]),'dr_int':([330,],[349,]),'end_condition':([335,],[354,]),'for_np2':([338,],[357,]),'gotoV':([340,],[359,]),'end_function':([341,],[361,]),'return_quad':([363,],[371,]),'dr_array_mp':([368,381,],[376,384,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID goto_main program_libraries program_vars program_function program_main end','program',8,'p_program','parser.py',38),
  ('goto_main -> SEMICOLON','goto_main',1,'p_goto_main','parser.py',42),
  ('end -> END','end',1,'p_end','parser.py',46),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',58),
  ('id_saver -> ID empty','id_saver',2,'p_id_saver','parser.py',65),
  ('int_const_saver -> CTE_INT','int_const_saver',1,'p_int_const_saver','parser.py',73),
  ('int_const_saver -> empty','int_const_saver',1,'p_int_const_saver','parser.py',74),
  ('release_exp -> empty','release_exp',1,'p_release_exp','parser.py',85),
  ('resources -> empty','resources',1,'p_resources','parser.py',91),
  ('program_libraries -> from_library import_library','program_libraries',2,'p_program_libraries','parser.py',108),
  ('program_libraries -> empty','program_libraries',1,'p_program_libraries','parser.py',109),
  ('from_library -> FROM ID','from_library',2,'p_from_library','parser.py',112),
  ('from_library -> empty','from_library',1,'p_from_library','parser.py',113),
  ('import_library -> IMPORT ID AS ID program_libraries','import_library',5,'p_import_library','parser.py',116),
  ('var_type -> var_c_type','var_type',1,'p_var_type','parser.py',121),
  ('var_type -> var_s_type','var_type',1,'p_var_type','parser.py',122),
  ('program_vars -> VAR var_type','program_vars',2,'p_program_vars','parser.py',125),
  ('program_vars -> empty','program_vars',1,'p_program_vars','parser.py',126),
  ('s_type -> INT','s_type',1,'p_s_type','parser.py',136),
  ('s_type -> FLOAT','s_type',1,'p_s_type','parser.py',137),
  ('s_type -> CHAR','s_type',1,'p_s_type','parser.py',138),
  ('c_type -> DATAFRAME','c_type',1,'p_c_type','parser.py',145),
  ('c_type -> DATE','c_type',1,'p_c_type','parser.py',146),
  ('var_multiple -> var_type','var_multiple',1,'p_var_multiple','parser.py',153),
  ('var_multiple -> empty','var_multiple',1,'p_var_multiple','parser.py',154),
  ('var_c_type -> c_type id_saver add_c_var var_c_type2 SEMICOLON var_multiple','var_c_type',6,'p_var_c_type','parser.py',157),
  ('var_c_type2 -> COMMA id_saver add_c_var var_c_type2','var_c_type2',4,'p_var_c_type2','parser.py',160),
  ('var_c_type2 -> empty','var_c_type2',1,'p_var_c_type2','parser.py',161),
  ('add_c_var -> empty','add_c_var',1,'p_add_c_var','parser.py',164),
  ('var_s_type -> s_type id_saver var_s_array add_s_var var_s_type2 SEMICOLON var_multiple','var_s_type',7,'p_var_s_type','parser.py',170),
  ('var_s_type2 -> COMMA id_saver var_s_array add_s_var var_s_type2','var_s_type2',5,'p_var_s_type2','parser.py',173),
  ('var_s_type2 -> empty','var_s_type2',1,'p_var_s_type2','parser.py',174),
  ('add_s_var -> empty','add_s_var',1,'p_add_s_var','parser.py',178),
  ('var_s_array -> LSQBRACKET var_s_dimesions RSQBRACKET var_s_matrix','var_s_array',4,'p_var_s_array','parser.py',186),
  ('var_s_array -> empty','var_s_array',1,'p_var_s_array','parser.py',187),
  ('var_s_matrix -> LSQBRACKET var_s_dimesions RSQBRACKET','var_s_matrix',3,'p_var_s_matrix','parser.py',190),
  ('var_s_matrix -> empty','var_s_matrix',1,'p_var_s_matrix','parser.py',191),
  ('var_s_dimesions -> CTE_INT empty','var_s_dimesions',2,'p_var_s_dimesions','parser.py',195),
  ('variable -> id_saver variable_array','variable',2,'p_variable','parser.py',212),
  ('variable_array -> LSQBRACKET exp RSQBRACKET variable_matrix','variable_array',4,'p_variable_array','parser.py',228),
  ('variable_array -> empty','variable_array',1,'p_variable_array','parser.py',229),
  ('variable_matrix -> LSQBRACKET exp RSQBRACKET','variable_matrix',3,'p_variable_matrix','parser.py',235),
  ('variable_matrix -> empty','variable_matrix',1,'p_variable_matrix','parser.py',236),
  ('program_function -> FUNCTION resources f_type id_saver func_creator LPAREN param RPAREN add_func_glob program_vars inner_body return end_function program_function','program_function',14,'p_program_function','parser.py',242),
  ('program_function -> empty','program_function',1,'p_program_function','parser.py',243),
  ('f_type -> INT','f_type',1,'p_f_type','parser.py',248),
  ('f_type -> FLOAT','f_type',1,'p_f_type','parser.py',249),
  ('f_type -> CHAR','f_type',1,'p_f_type','parser.py',250),
  ('f_type -> VOID','f_type',1,'p_f_type','parser.py',251),
  ('func_creator -> empty','func_creator',1,'p_func_creator','parser.py',263),
  ('add_func_glob -> LBRACKET','add_func_glob',1,'p_add_func_glob','parser.py',271),
  ('end_function -> RBRACKET','end_function',1,'p_end_function','parser.py',284),
  ('param -> s_type id_saver add_params param2','param',4,'p_param','parser.py',290),
  ('param -> empty','param',1,'p_param','parser.py',291),
  ('param2 -> COMMA s_type id_saver add_params param2','param2',5,'p_param2','parser.py',294),
  ('param2 -> empty','param2',1,'p_param2','parser.py',295),
  ('add_params -> empty','add_params',1,'p_add_params','parser.py',299),
  ('return -> return_np exp return_quad SEMICOLON','return',4,'p_return','parser.py',306),
  ('return -> empty_path_return','return',1,'p_return','parser.py',307),
  ('return_np -> RETURN','return_np',1,'p_return_np','parser.py',310),
  ('return_quad -> empty','return_quad',1,'p_return_quad','parser.py',319),
  ('empty_path_return -> empty','empty_path_return',1,'p_empty_path_return','parser.py',326),
  ('program_main -> main_id LBRACKET program_vars inner_body RBRACKET','program_main',5,'p_program_main','parser.py',337),
  ('main_id -> MAIN resources','main_id',2,'p_main_id','parser.py',340),
  ('body -> LBRACKET inner_body RBRACKET','body',3,'p_body','parser.py',350),
  ('inner_body -> statement inner_body','inner_body',2,'p_inner_body','parser.py',354),
  ('inner_body -> empty','inner_body',1,'p_inner_body','parser.py',355),
  ('assign -> variable keep_assign specialf_assign end_assign','assign',4,'p_assign','parser.py',360),
  ('specialf_assign -> exp','specialf_assign',1,'p_specialf_assign','parser.py',366),
  ('specialf_assign -> special_function','specialf_assign',1,'p_specialf_assign','parser.py',367),
  ('specialf_assign -> read','specialf_assign',1,'p_specialf_assign','parser.py',368),
  ('keep_assign -> ASSIGN empty','keep_assign',2,'p_keep_assign','parser.py',372),
  ('end_assign -> SEMICOLON empty','end_assign',2,'p_end_assign','parser.py',388),
  ('condition -> IF LPAREN exp RPAREN condition_GOTOF body condition2 SEMICOLON end_condition','condition',9,'p_condition','parser.py',396),
  ('condition2 -> ELSE condition_GOTO body','condition2',3,'p_condition2','parser.py',399),
  ('condition2 -> empty','condition2',1,'p_condition2','parser.py',400),
  ('condition_GOTOF -> empty','condition_GOTOF',1,'p_condition_GOTOF','parser.py',404),
  ('condition_GOTO -> empty','condition_GOTO',1,'p_condition_GOTO','parser.py',411),
  ('end_condition -> empty','end_condition',1,'p_end_condition','parser.py',416),
  ('print -> PRINT LPAREN print_many RPAREN SEMICOLON end_print_np','print',6,'p_print','parser.py',425),
  ('print_type -> exp','print_type',1,'p_print_type','parser.py',428),
  ('print_many -> print_type print_many2','print_many',2,'p_print_many','parser.py',431),
  ('print_many2 -> COMMA print_many_np print_many','print_many2',3,'p_print_many2','parser.py',434),
  ('print_many2 -> empty','print_many2',1,'p_print_many2','parser.py',435),
  ('print_many_np -> empty','print_many_np',1,'p_print_many_np','parser.py',438),
  ('end_print_np -> empty','end_print_np',1,'p_end_print_np','parser.py',442),
  ('read -> np_read LPAREN valid_exp_read read_np','read',4,'p_read','parser.py',448),
  ('np_read -> READ','np_read',1,'p_np_read','parser.py',452),
  ('valid_exp_read -> exp','valid_exp_read',1,'p_valid_exp_read','parser.py',456),
  ('read_np -> RPAREN','read_np',1,'p_read_np','parser.py',467),
  ('cycle -> for','cycle',1,'p_cycle','parser.py',474),
  ('cycle -> while','cycle',1,'p_cycle','parser.py',475),
  ('while -> DO seed body WHILE LPAREN exp RPAREN SEMICOLON gotoV','while',9,'p_while','parser.py',479),
  ('seed -> empty','seed',1,'p_seed','parser.py',483),
  ('gotoV -> empty','gotoV',1,'p_gotoV','parser.py',488),
  ('for -> FOR LPAREN for_control keep_assign exp for_np1 for_end body for_np2','for',9,'p_for','parser.py',494),
  ('for_control -> id_saver','for_control',1,'p_for_control','parser.py',497),
  ('for_np1 -> TO','for_np1',1,'p_for_np1','parser.py',506),
  ('for_end -> int_const_saver RPAREN','for_end',2,'p_for_end','parser.py',511),
  ('for_np2 -> SEMICOLON','for_np2',1,'p_for_np2','parser.py',524),
  ('call_function -> function_saver function_flag call_params check_not_void','call_function',4,'p_call_function','parser.py',570),
  ('check_not_void -> RPAREN','check_not_void',1,'p_check_not_void','parser.py',575),
  ('call_void_function -> function_saver function_flag call_params verify_params check_void','call_void_function',5,'p_call_void_function','parser.py',596),
  ('verify_params -> RPAREN','verify_params',1,'p_verify_params','parser.py',599),
  ('check_void -> SEMICOLON','check_void',1,'p_check_void','parser.py',608),
  ('function_saver -> ID empty','function_saver',2,'p_function_saver','parser.py',622),
  ('function_flag -> LPAREN','function_flag',1,'p_function_flag','parser.py',634),
  ('call_params -> check_param exp_many','call_params',2,'p_call_params','parser.py',649),
  ('call_params -> empty','call_params',1,'p_call_params','parser.py',650),
  ('check_param -> exp','check_param',1,'p_check_param','parser.py',655),
  ('exp_many -> COMMA check_param exp_many','exp_many',3,'p_exp_many','parser.py',669),
  ('exp_many -> empty','exp_many',1,'p_exp_many','parser.py',670),
  ('statement -> assign','statement',1,'p_statement','parser.py',674),
  ('statement -> condition','statement',1,'p_statement','parser.py',675),
  ('statement -> print','statement',1,'p_statement','parser.py',676),
  ('statement -> cycle','statement',1,'p_statement','parser.py',677),
  ('statement -> call_void_function','statement',1,'p_statement','parser.py',678),
  ('special_function -> exploration','special_function',1,'p_special_function','parser.py',682),
  ('special_function -> financial_state','special_function',1,'p_special_function','parser.py',683),
  ('special_function -> dummi_regression','special_function',1,'p_special_function','parser.py',684),
  ('special_function -> season_analysis','special_function',1,'p_special_function','parser.py',685),
  ('special_function -> trend_prediction','special_function',1,'p_special_function','parser.py',686),
  ('special_function -> model_predict','special_function',1,'p_special_function','parser.py',687),
  ('tag_sp -> LPAREN','tag_sp',1,'p_tag_sp','parser.py',692),
  ('exploration -> EXPLORATION tag_sp variable explore_var np_check_size','exploration',5,'p_exploration','parser.py',705),
  ('sp_param -> COMMA','sp_param',1,'p_sp_param','parser.py',708),
  ('np_check_size -> RPAREN','np_check_size',1,'p_np_check_size','parser.py',725),
  ('explore_var -> sp_param variable explor_cte','explore_var',3,'p_explore_var','parser.py',750),
  ('explore_var -> empty','explore_var',1,'p_explore_var','parser.py',751),
  ('explor_cte -> sp_param int_const_saver','explor_cte',2,'p_explor_cte','parser.py',755),
  ('explor_cte -> empty','explor_cte',1,'p_explor_cte','parser.py',756),
  ('financial_state -> FINANCIAL_STATE tag_sp variable sp_param variable sp_param variable sp_param variable np_check_size','financial_state',10,'p_financial_state','parser.py',761),
  ('season_analysis -> SEASON_ANALYSIS tag_sp variable np_check_size','season_analysis',4,'p_season_analysis','parser.py',765),
  ('trend_prediction -> TREND_PREDICTION tag_sp variable sp_param int_const_saver sp_param int_const_saver sp_param int_const_saver np_check_size','trend_prediction',10,'p_trend_prediction','parser.py',771),
  ('dummi_regression -> DUMMI_REGRESSION tag_sp variable sp_param variable dr_array dr_int np_check_size','dummi_regression',8,'p_dummi_regression','parser.py',775),
  ('dr_array -> COMMA LSQBRACKET CTE_CHAR dr_array_mp RSQBRACKET','dr_array',5,'p_dr_array','parser.py',778),
  ('dr_array -> empty','dr_array',1,'p_dr_array','parser.py',779),
  ('dr_array_mp -> COMMA CTE_CHAR dr_array_mp','dr_array_mp',3,'p_dr_array_mp','parser.py',782),
  ('dr_array_mp -> empty','dr_array_mp',1,'p_dr_array_mp','parser.py',783),
  ('dr_int -> COMMA int_const_saver','dr_int',2,'p_dr_int','parser.py',786),
  ('dr_int -> empty','dr_int',1,'p_dr_int','parser.py',787),
  ('model_predict -> MODEL_PREDICT tag_sp variable sp_param variable np_check_size','model_predict',6,'p_model_predict','parser.py',791),
  ('exp -> t_exp release_exp exp_or','exp',3,'p_exp','parser.py',796),
  ('exp_or -> exp_keep_or exp','exp_or',2,'p_exp_or','parser.py',800),
  ('exp_or -> empty','exp_or',1,'p_exp_or','parser.py',801),
  ('exp_keep_or -> OR','exp_keep_or',1,'p_exp_keep_or','parser.py',804),
  ('t_exp -> expression release_exp t_exp_and','t_exp',3,'p_t_exp','parser.py',813),
  ('t_exp_and -> keep_and t_exp','t_exp_and',2,'p_t_exp_and','parser.py',818),
  ('t_exp_and -> empty','t_exp_and',1,'p_t_exp_and','parser.py',819),
  ('keep_and -> AND','keep_and',1,'p_keep_and','parser.py',822),
  ('expression -> m_exp release_exp expression_comp','expression',3,'p_expression','parser.py',831),
  ('expression_comp -> expression_comp_2 m_exp release_exp','expression_comp',3,'p_expression_comp','parser.py',837),
  ('expression_comp -> empty','expression_comp',1,'p_expression_comp','parser.py',838),
  ('expression_comp_2 -> GTHAN','expression_comp_2',1,'p_expression_comp_2','parser.py',843),
  ('expression_comp_2 -> EQUAL','expression_comp_2',1,'p_expression_comp_2','parser.py',844),
  ('expression_comp_2 -> NOTEQUAL','expression_comp_2',1,'p_expression_comp_2','parser.py',845),
  ('expression_comp_2 -> LTHAN','expression_comp_2',1,'p_expression_comp_2','parser.py',846),
  ('expression_comp_2 -> GORE','expression_comp_2',1,'p_expression_comp_2','parser.py',847),
  ('expression_comp_2 -> LORE','expression_comp_2',1,'p_expression_comp_2','parser.py',848),
  ('m_exp -> term release_exp m_exp_sr','m_exp',3,'p_m_exp','parser.py',858),
  ('m_exp_sr -> m_exp_sr_2 m_exp','m_exp_sr',2,'p_m_exp_sr','parser.py',865),
  ('m_exp_sr -> empty','m_exp_sr',1,'p_m_exp_sr','parser.py',866),
  ('m_exp_sr_2 -> PLUS','m_exp_sr_2',1,'p_m_exp_sr_2','parser.py',869),
  ('m_exp_sr_2 -> MINUS','m_exp_sr_2',1,'p_m_exp_sr_2','parser.py',870),
  ('term -> sub_factor release_exp term_pc','term',3,'p_term','parser.py',878),
  ('term_pc -> term_pc_2 term','term_pc',2,'p_term_pc','parser.py',884),
  ('term_pc -> empty','term_pc',1,'p_term_pc','parser.py',885),
  ('term_pc_2 -> MULTIPLY','term_pc_2',1,'p_term_pc_2','parser.py',888),
  ('term_pc_2 -> DIVIDE','term_pc_2',1,'p_term_pc_2','parser.py',889),
  ('term_pc_2 -> MODULE','term_pc_2',1,'p_term_pc_2','parser.py',890),
  ('sub_factor -> factor release_exp sub_factor_pc','sub_factor',3,'p_sub_factor','parser.py',896),
  ('sub_factor_pc -> sub_factor_pc_2 sub_factor','sub_factor_pc',2,'p_sub_factor_pc','parser.py',902),
  ('sub_factor_pc -> empty','sub_factor_pc',1,'p_sub_factor_pc','parser.py',903),
  ('sub_factor_pc_2 -> POWER empty','sub_factor_pc_2',2,'p_sub_factor_pc_2','parser.py',906),
  ('factor -> factor_exp','factor',1,'p_factor','parser.py',914),
  ('factor -> factor_cte','factor',1,'p_factor','parser.py',915),
  ('factor -> variable','factor',1,'p_factor','parser.py',916),
  ('factor -> call_function','factor',1,'p_factor','parser.py',917),
  ('factor_exp -> false_button exp release_false_button','factor_exp',3,'p_factor_exp','parser.py',924),
  ('false_button -> LPAREN','false_button',1,'p_false_button','parser.py',929),
  ('release_false_button -> RPAREN','release_false_button',1,'p_release_false_button','parser.py',935),
  ('factor_cte -> CTE_FLOAT','factor_cte',1,'p_factor_cte','parser.py',942),
  ('factor_cte -> CTE_INT','factor_cte',1,'p_factor_cte','parser.py',943),
  ('factor_cte -> CTE_CHAR','factor_cte',1,'p_factor_cte','parser.py',944),
]
