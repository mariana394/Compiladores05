
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS ASSIGN CHAR COLON COMMA CTE_CHAR CTE_FLOAT CTE_INT DATAFRAME DATE DIVIDE DO DUMMI_REGRESSION ELSE END EQUAL EXPLORATION FINANCIAL_STATE FLOAT FOR FROM FUNCTION GORE GTHAN ID IF IMPORT INT LBRACKET LORE LPAREN LSQBRACKET LTHAN MAIN MINUS MODEL_PREDICT MODULE MULTIPLY NOTEQUAL OR PLUS POWER PRINT PROGRAM RBRACKET READ RETURN RPAREN RSQBRACKET SEASON_ANALYSIS SEMICOLON TO TREND_PREDICTION VAR VOID WHILEprogram : PROGRAM ID goto_main program_libraries program_vars program_function program_main end goto_main : SEMICOLONend : END empty : id_saver : ID empty int_const_saver : CTE_INT \n                       | emptyrelease_exp : emptyresources : emptyprogram_libraries : from_library import_library \n                         | emptyfrom_library : FROM ID\n                    | emptyimport_library : IMPORT ID AS ID  program_librariesvar_type : var_c_type\n                | var_s_typeprogram_vars : VAR var_type  \n                    | emptys_type : INT \n              | FLOAT\n              | CHARc_type : DATAFRAME\n              | DATEvar_multiple : var_type\n                    | emptyvar_c_type : c_type id_saver add_c_var var_c_type2 SEMICOLON var_multiplevar_c_type2 : COMMA id_saver add_c_var var_c_type2\n                   | emptyadd_c_var : emptyvar_s_type : s_type id_saver var_s_array add_s_var var_s_type2 SEMICOLON var_multiplevar_s_type2 : COMMA id_saver var_s_array add_s_var var_s_type2\n                   | emptyadd_s_var : emptyvar_s_array : LSQBRACKET var_s_dimesions RSQBRACKET var_s_matrix \n                   | emptyvar_s_matrix : LSQBRACKET var_s_dimesions RSQBRACKET\n                    | emptyvar_s_dimesions : CTE_INT emptyvariable : id_saver variable_arrayvariable_array : LSQBRACKET exp RSQBRACKET variable_matrix\n                      | emptyvariable_matrix : LSQBRACKET exp RSQBRACKET\n                       | emptyprogram_function : FUNCTION resources f_type id_saver func_creator  LPAREN param RPAREN add_func_glob program_vars inner_body return end_function program_function\n                        | emptyf_type : INT \n              | FLOAT\n              | CHAR\n              | VOIDfunc_creator : emptyadd_func_glob : LBRACKETend_function : RBRACKETparam : s_type id_saver add_params param2\n             | emptyparam2 : COMMA s_type id_saver add_params param2\n              | emptyadd_params : emptyreturn : return_np exp return_quad SEMICOLON\n              | empty_path_returnreturn_np : RETURNreturn_quad : emptyempty_path_return : emptyprogram_main :  main_id LBRACKET program_vars inner_body RBRACKETmain_id : MAIN resources body : LBRACKET inner_body RBRACKETinner_body :  statement inner_body\n                  | emptyassign : variable keep_assign specialf_assign end_assignspecialf_assign : exp\n                       | special_function\n                       | readkeep_assign : ASSIGN emptyend_assign : SEMICOLON emptycondition : IF LPAREN exp RPAREN condition_GOTOF body condition2 SEMICOLON end_conditioncondition2 : ELSE condition_GOTO body\n                 | emptycondition_GOTOF : emptycondition_GOTO : emptyend_condition : emptyprint : PRINT LPAREN print_many RPAREN SEMICOLON end_print_npprint_type : expprint_many : print_type print_many2 print_many2 : COMMA print_many_np print_many\n                   | emptyprint_many_np : emptyend_print_np : emptyread : np_read LPAREN valid_exp_read read_npnp_read : READvalid_exp_read : expread_np : RPARENcycle : for\n             | whilewhile : DO seed body WHILE LPAREN exp RPAREN SEMICOLON gotoVseed : emptygotoV : emptyfor : FOR LPAREN for_control keep_assign exp for_np1 for_end body for_np2for_control : id_saverfor_np1 :  TOfor_end : int_const_saver RPARENfor_np2 : SEMICOLONcall_function : function_saver function_flag call_params check_not_void check_not_void : RPARENcall_void_function : function_saver function_flag call_params verify_params check_voidverify_params : RPARENcheck_void : SEMICOLONfunction_saver : ID emptyfunction_flag : LPARENcall_params : check_param exp_many\n                   | emptycheck_param : expexp_many : COMMA check_param exp_many\n                | emptystatement : assign\n                 | condition\n                 | print\n                 | cycle\n                 | call_void_functionspecial_function : exploration\n                        | financial_state\n                        | dummi_regression\n                        | season_analysis\n                        | trend_prediction\n                        | model_predictexploration : EXPLORATION LPAREN variable explore_var explor_cte RPARENexplore_var : COMMA variable\n                   | emptyexplor_cte : COMMA int_const_saver\n                  | emptyfinancial_state : FINANCIAL_STATE LPAREN variable COMMA variable COMMA variable COMMA variable RPARENseason_analysis : SEASON_ANALYSIS LPAREN variable RPARENtrend_prediction : TREND_PREDICTION LPAREN variable COMMA int_const_saver COMMA int_const_saver COMMA int_const_saver RPARENdummi_regression : DUMMI_REGRESSION LPAREN variable COMMA variable dr_array dr_int RPARENdr_array : COMMA LSQBRACKET CTE_CHAR dr_array_mp RSQBRACKET\n                | emptydr_array_mp : COMMA CTE_CHAR dr_array_mp\n                   | emptydr_int : COMMA int_const_saver\n              | emptymodel_predict : MODEL_PREDICT LPAREN variable COMMA variable COMMA RPARENexp : t_exp release_exp exp_orexp_or : exp_keep_or  exp\n              | emptyexp_keep_or : ORt_exp : expression release_exp t_exp_andt_exp_and : keep_and t_exp\n                 | emptykeep_and : AND expression : m_exp release_exp expression_compexpression_comp :  expression_comp_2  m_exp release_exp\n                       |  emptyexpression_comp_2 : GTHAN\n                         | EQUAL\n                         | NOTEQUAL\n                         | LTHAN\n                         | GORE\n                         | LORE\n                         m_exp : term release_exp m_exp_srm_exp_sr : m_exp_sr_2 m_exp\n                | emptym_exp_sr_2 : PLUS\n                  | MINUSterm : sub_factor release_exp term_pcterm_pc : term_pc_2 term\n               | emptyterm_pc_2 : MULTIPLY\n                 | DIVIDE\n                 | MODULEsub_factor : factor release_exp sub_factor_pcsub_factor_pc : sub_factor_pc_2 sub_factor\n                     | emptysub_factor_pc_2 : POWER emptyfactor : factor_exp\n              | factor_cte\n              | variable\n              | call_functionfactor_exp : false_button exp release_false_buttonfalse_button : LPARENrelease_false_button : RPARENfactor_cte : CTE_FLOAT\n                  | CTE_INT\n                  | CTE_CHAR'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,39,40,],[0,-1,-3,]),'ID':([2,9,12,14,19,20,21,22,23,24,25,26,27,28,38,41,43,44,45,46,47,55,58,66,68,69,70,71,72,76,77,85,88,94,95,96,97,98,99,101,103,108,109,110,112,130,146,152,165,167,170,173,174,177,179,180,181,182,183,184,190,195,200,203,210,212,214,218,220,228,230,231,232,233,234,235,237,239,240,242,244,245,246,248,250,256,257,258,259,260,262,266,268,269,278,280,281,284,289,293,294,301,324,327,333,338,340,342,352,353,355,356,357,358,363,],[3,15,-18,29,-17,-15,-16,36,36,-22,-23,-19,-20,-21,54,-4,36,-46,-47,-48,-49,82,36,82,-113,-114,-115,-116,-117,-91,-92,-4,36,151,-4,151,151,151,-107,151,36,-26,-24,-25,-4,-177,151,-72,82,36,-30,-68,-4,151,36,36,36,36,36,36,151,-4,151,151,-73,151,-143,151,-147,151,-151,-152,-153,-154,-155,-156,151,-160,-161,151,-165,-166,-167,151,-4,-4,151,-85,-103,-105,151,151,-4,-51,36,36,36,36,-171,-80,-86,82,36,36,-4,-4,151,-60,-74,-79,-96,-100,-93,-95,36,]),'SEMICOLON':([3,35,36,37,48,49,50,51,53,57,59,60,61,79,86,87,89,90,100,102,111,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,131,139,140,141,142,143,144,145,147,148,149,151,169,171,175,176,178,185,186,187,188,191,193,197,198,202,208,209,211,213,217,219,227,229,236,238,241,243,247,249,251,252,263,264,267,272,273,274,275,276,282,285,286,287,288,290,291,292,315,316,318,319,322,325,336,351,354,361,366,369,370,378,381,],[5,-4,-4,-4,-4,-29,-5,-4,-35,85,-28,-4,-33,-4,-4,112,-32,-4,-39,-41,-4,-4,-34,-37,-174,174,-69,-70,-71,-4,-118,-119,-120,-121,-122,-123,-4,-4,-4,-4,-4,-172,-173,-175,-179,-180,-181,-4,-27,-4,-4,-8,-4,-4,-4,-4,-4,-5,256,260,-104,-4,-4,-36,-140,-142,-144,-146,-148,-150,-157,-159,-162,-164,-168,-170,-176,-178,-40,-43,-65,-31,-141,-87,-90,-145,-130,-4,-158,-163,-169,-101,-102,-4,-149,333,-76,-42,338,-124,356,-139,-75,-4,-132,377,-61,-129,-131,]),'FROM':([4,5,54,],[9,-2,9,]),'VAR':([4,5,6,8,13,41,54,64,268,269,],[-4,-2,11,-11,-10,11,-4,-14,11,-51,]),'FUNCTION':([4,5,6,8,10,12,13,19,20,21,54,64,85,108,109,110,112,170,359,360,],[-4,-2,-4,-11,17,-18,-10,-17,-15,-16,-4,-14,-4,-26,-24,-25,-4,-30,17,-52,]),'MAIN':([4,5,6,8,10,12,13,16,18,19,20,21,54,64,85,108,109,110,112,170,359,360,368,],[-4,-2,-4,-11,-4,-18,-10,32,-45,-17,-15,-16,-4,-14,-4,-26,-24,-25,-4,-30,-4,-52,-44,]),'IMPORT':([4,5,7,8,15,54,],[-4,-2,14,-13,-12,-4,]),'DATAFRAME':([11,85,112,],[24,24,24,]),'DATE':([11,85,112,],[25,25,25,]),'INT':([11,17,33,34,85,107,112,303,],[26,-4,44,-9,26,26,26,26,]),'FLOAT':([11,17,33,34,85,107,112,303,],[27,-4,45,-9,27,27,27,27,]),'CHAR':([11,17,33,34,85,107,112,303,],[28,-4,46,-9,28,28,28,28,]),'IF':([12,19,20,21,41,55,66,68,69,70,71,72,76,77,85,108,109,110,112,165,170,173,174,210,256,259,260,268,269,293,294,301,333,338,352,353,355,356,357,358,],[-18,-17,-15,-16,-4,74,74,-113,-114,-115,-116,-117,-91,-92,-4,-26,-24,-25,-4,74,-30,-68,-4,-73,-4,-103,-105,-4,-51,-80,-86,74,-4,-4,-74,-79,-96,-100,-93,-95,]),'PRINT':([12,19,20,21,41,55,66,68,69,70,71,72,76,77,85,108,109,110,112,165,170,173,174,210,256,259,260,268,269,293,294,301,333,338,352,353,355,356,357,358,],[-18,-17,-15,-16,-4,75,75,-113,-114,-115,-116,-117,-91,-92,-4,-26,-24,-25,-4,75,-30,-68,-4,-73,-4,-103,-105,-4,-51,-80,-86,75,-4,-4,-74,-79,-96,-100,-93,-95,]),'FOR':([12,19,20,21,41,55,66,68,69,70,71,72,76,77,85,108,109,110,112,165,170,173,174,210,256,259,260,268,269,293,294,301,333,338,352,353,355,356,357,358,],[-18,-17,-15,-16,-4,80,80,-113,-114,-115,-116,-117,-91,-92,-4,-26,-24,-25,-4,80,-30,-68,-4,-73,-4,-103,-105,-4,-51,-80,-86,80,-4,-4,-74,-79,-96,-100,-93,-95,]),'DO':([12,19,20,21,41,55,66,68,69,70,71,72,76,77,85,108,109,110,112,165,170,173,174,210,256,259,260,268,269,293,294,301,333,338,352,353,355,356,357,358,],[-18,-17,-15,-16,-4,81,81,-113,-114,-115,-116,-117,-91,-92,-4,-26,-24,-25,-4,81,-30,-68,-4,-73,-4,-103,-105,-4,-51,-80,-86,81,-4,-4,-74,-79,-96,-100,-93,-95,]),'RBRACKET':([12,19,20,21,41,55,65,66,67,68,69,70,71,72,76,77,85,93,108,109,110,112,165,170,173,174,205,210,256,259,260,268,269,293,294,301,323,333,338,339,341,343,352,353,355,356,357,358,377,],[-18,-17,-15,-16,-4,-4,92,-4,-67,-113,-114,-115,-116,-117,-91,-92,-4,-66,-26,-24,-25,-4,-4,-30,-68,-4,267,-73,-4,-103,-105,-4,-51,-80,-86,-4,-4,-4,-4,360,-59,-62,-74,-79,-96,-100,-93,-95,-58,]),'RETURN':([12,19,20,21,66,67,68,69,70,71,72,76,77,85,93,108,109,110,112,170,173,174,210,256,259,260,268,269,293,294,301,323,333,338,352,353,355,356,357,358,],[-18,-17,-15,-16,-4,-67,-113,-114,-115,-116,-117,-91,-92,-4,-66,-26,-24,-25,-4,-30,-68,-4,-73,-4,-103,-105,-4,-51,-80,-86,-4,342,-4,-4,-74,-79,-96,-100,-93,-95,]),'VOID':([17,33,34,],[-4,47,-9,]),'AS':([29,],[38,]),'END':([30,92,],[40,-63,]),'LBRACKET':([31,32,34,42,81,104,105,192,206,254,255,317,320,334,335,337,],[41,-4,-9,-64,-4,165,-94,-4,269,165,-77,-4,165,165,-78,-99,]),'COMMA':([35,36,37,48,49,50,51,53,60,61,79,86,90,100,102,111,113,115,116,117,122,131,139,140,141,142,143,144,145,147,148,149,151,155,156,158,160,171,175,176,178,185,186,187,188,191,202,207,208,209,211,213,217,219,221,222,223,225,226,227,229,236,238,241,243,247,249,251,252,261,263,264,270,271,273,276,277,279,283,285,286,287,288,290,291,308,309,310,311,312,313,314,315,319,329,330,331,344,345,350,362,364,379,380,],[-4,-4,-4,58,-29,-5,-4,-35,88,-33,-4,-4,-4,-39,-41,58,-4,-34,-37,-174,-4,-4,-4,-4,-4,-4,-172,-173,-175,-179,-180,-181,-4,195,-81,200,-110,-4,-4,-8,-4,-4,-4,-4,-4,-5,-4,-4,88,-36,-140,-142,-144,-146,278,280,281,283,284,-148,-150,-157,-159,-162,-164,-168,-170,-176,-178,200,-40,-43,303,-57,-141,-145,306,-126,-4,-4,-158,-163,-169,-101,-102,-125,327,328,331,-6,-7,332,-149,-42,347,-134,-4,-4,363,367,303,373,373,-133,]),'LSQBRACKET':([36,37,50,79,82,90,106,113,151,191,202,328,],[-4,52,-5,101,-4,114,-5,52,-4,-5,262,346,]),'LPAREN':([36,50,56,74,75,78,80,82,83,84,94,95,96,97,98,99,101,106,129,130,132,133,134,135,136,137,138,146,150,151,152,177,190,191,195,200,203,204,212,214,218,220,228,230,231,232,233,234,235,237,239,240,242,244,245,246,248,250,257,258,262,266,289,340,342,],[-4,-5,-4,96,97,99,103,-4,107,-50,130,-4,130,130,130,-107,130,-106,177,-177,179,180,181,182,183,184,-88,130,99,-4,-72,130,130,-106,-4,130,130,266,130,-143,130,-147,130,-151,-152,-153,-154,-155,-156,130,-160,-161,130,-165,-166,-167,130,-4,130,-85,130,130,-171,130,-60,]),'ASSIGN':([36,50,73,79,82,100,102,106,162,163,202,263,264,319,],[-4,-5,95,-4,-4,-39,-41,-5,95,-97,-4,-40,-43,-42,]),'RPAREN':([36,50,79,98,99,100,102,107,117,122,131,139,140,141,142,143,144,145,147,148,149,151,153,154,155,156,157,158,159,160,166,168,175,176,178,185,186,187,188,189,190,191,194,196,199,201,202,207,211,213,215,216,217,219,221,224,227,229,236,238,241,243,247,249,251,252,253,261,263,264,270,271,273,276,277,279,285,286,287,288,290,291,295,296,298,299,300,302,304,305,306,307,308,310,312,313,315,319,321,326,329,330,332,344,347,348,349,362,365,367,371,372,376,380,],[-4,-5,-4,-4,-107,-39,-41,-4,-174,-4,-4,-4,-4,-4,-4,-172,-173,-175,-179,-180,-181,-4,192,193,-4,-81,198,-4,-109,-110,206,-54,-4,-8,-4,-4,-4,-4,-4,252,-4,-5,-82,-84,-108,-112,-4,-4,-140,-142,275,-89,-144,-146,-4,282,-148,-150,-157,-159,-162,-164,-168,-170,-176,-178,291,-4,-40,-43,-4,-57,-141,-145,-4,-126,-4,-158,-163,-169,-101,-102,-83,-111,-4,-98,322,-53,-56,325,-4,-128,-125,-4,-6,-7,-149,-42,337,-127,-4,-134,351,-4,-4,366,-138,-4,-137,-4,-55,378,381,-133,]),'CTE_INT':([52,94,95,96,97,98,99,101,114,130,146,152,177,190,195,200,203,212,214,218,220,228,230,231,232,233,234,235,237,239,240,242,244,245,246,248,250,257,258,262,266,283,289,298,299,306,331,340,342,347,367,],[63,148,-4,148,148,148,-107,148,63,-177,148,-72,148,148,-4,148,148,148,-143,148,-147,148,-151,-152,-153,-154,-155,-156,148,-160,-161,148,-165,-166,-167,148,-4,148,-85,148,148,312,-171,312,-98,312,312,148,-60,312,312,]),'RSQBRACKET':([62,63,79,91,100,102,117,122,131,139,140,141,142,143,144,145,147,148,149,151,161,172,175,176,178,185,186,187,188,191,202,211,213,217,219,227,229,236,238,241,243,247,249,251,252,263,264,273,276,285,286,287,288,290,291,297,315,319,364,374,375,379,382,],[90,-4,-4,-38,-39,-41,-174,-4,-4,-4,-4,-4,-4,-172,-173,-175,-179,-180,-181,-4,202,209,-4,-8,-4,-4,-4,-4,-4,-5,-4,-140,-142,-144,-146,-148,-150,-157,-159,-162,-164,-168,-170,-176,-178,-40,-43,-141,-145,-4,-158,-163,-169,-101,-102,319,-149,-42,-4,380,-136,-4,-135,]),'POWER':([79,100,102,117,142,143,144,145,147,148,149,151,176,188,191,202,251,252,263,264,290,291,319,],[-4,-39,-41,-174,-4,-172,-173,-175,-179,-180,-181,-4,-8,250,-5,-4,-176,-178,-40,-43,-101,-102,-42,]),'MULTIPLY':([79,100,102,117,141,142,143,144,145,147,148,149,151,176,187,188,191,202,247,249,251,252,263,264,288,290,291,319,],[-4,-39,-41,-174,-4,-4,-172,-173,-175,-179,-180,-181,-4,-8,244,-4,-5,-4,-168,-170,-176,-178,-40,-43,-169,-101,-102,-42,]),'DIVIDE':([79,100,102,117,141,142,143,144,145,147,148,149,151,176,187,188,191,202,247,249,251,252,263,264,288,290,291,319,],[-4,-39,-41,-174,-4,-4,-172,-173,-175,-179,-180,-181,-4,-8,245,-4,-5,-4,-168,-170,-176,-178,-40,-43,-169,-101,-102,-42,]),'MODULE':([79,100,102,117,141,142,143,144,145,147,148,149,151,176,187,188,191,202,247,249,251,252,263,264,288,290,291,319,],[-4,-39,-41,-174,-4,-4,-172,-173,-175,-179,-180,-181,-4,-8,246,-4,-5,-4,-168,-170,-176,-178,-40,-43,-169,-101,-102,-42,]),'PLUS':([79,100,102,117,140,141,142,143,144,145,147,148,149,151,176,186,187,188,191,202,241,243,247,249,251,252,263,264,287,288,290,291,319,],[-4,-39,-41,-174,-4,-4,-4,-172,-173,-175,-179,-180,-181,-4,-8,239,-4,-4,-5,-4,-162,-164,-168,-170,-176,-178,-40,-43,-163,-169,-101,-102,-42,]),'MINUS':([79,100,102,117,140,141,142,143,144,145,147,148,149,151,176,186,187,188,191,202,241,243,247,249,251,252,263,264,287,288,290,291,319,],[-4,-39,-41,-174,-4,-4,-4,-172,-173,-175,-179,-180,-181,-4,-8,240,-4,-4,-5,-4,-162,-164,-168,-170,-176,-178,-40,-43,-163,-169,-101,-102,-42,]),'GTHAN':([79,100,102,117,139,140,141,142,143,144,145,147,148,149,151,176,185,186,187,188,191,202,236,238,241,243,247,249,251,252,263,264,286,287,288,290,291,319,],[-4,-39,-41,-174,-4,-4,-4,-4,-172,-173,-175,-179,-180,-181,-4,-8,230,-4,-4,-4,-5,-4,-157,-159,-162,-164,-168,-170,-176,-178,-40,-43,-158,-163,-169,-101,-102,-42,]),'EQUAL':([79,100,102,117,139,140,141,142,143,144,145,147,148,149,151,176,185,186,187,188,191,202,236,238,241,243,247,249,251,252,263,264,286,287,288,290,291,319,],[-4,-39,-41,-174,-4,-4,-4,-4,-172,-173,-175,-179,-180,-181,-4,-8,231,-4,-4,-4,-5,-4,-157,-159,-162,-164,-168,-170,-176,-178,-40,-43,-158,-163,-169,-101,-102,-42,]),'NOTEQUAL':([79,100,102,117,139,140,141,142,143,144,145,147,148,149,151,176,185,186,187,188,191,202,236,238,241,243,247,249,251,252,263,264,286,287,288,290,291,319,],[-4,-39,-41,-174,-4,-4,-4,-4,-172,-173,-175,-179,-180,-181,-4,-8,232,-4,-4,-4,-5,-4,-157,-159,-162,-164,-168,-170,-176,-178,-40,-43,-158,-163,-169,-101,-102,-42,]),'LTHAN':([79,100,102,117,139,140,141,142,143,144,145,147,148,149,151,176,185,186,187,188,191,202,236,238,241,243,247,249,251,252,263,264,286,287,288,290,291,319,],[-4,-39,-41,-174,-4,-4,-4,-4,-172,-173,-175,-179,-180,-181,-4,-8,233,-4,-4,-4,-5,-4,-157,-159,-162,-164,-168,-170,-176,-178,-40,-43,-158,-163,-169,-101,-102,-42,]),'GORE':([79,100,102,117,139,140,141,142,143,144,145,147,148,149,151,176,185,186,187,188,191,202,236,238,241,243,247,249,251,252,263,264,286,287,288,290,291,319,],[-4,-39,-41,-174,-4,-4,-4,-4,-172,-173,-175,-179,-180,-181,-4,-8,234,-4,-4,-4,-5,-4,-157,-159,-162,-164,-168,-170,-176,-178,-40,-43,-158,-163,-169,-101,-102,-42,]),'LORE':([79,100,102,117,139,140,141,142,143,144,145,147,148,149,151,176,185,186,187,188,191,202,236,238,241,243,247,249,251,252,263,264,286,287,288,290,291,319,],[-4,-39,-41,-174,-4,-4,-4,-4,-172,-173,-175,-179,-180,-181,-4,-8,235,-4,-4,-4,-5,-4,-157,-159,-162,-164,-168,-170,-176,-178,-40,-43,-158,-163,-169,-101,-102,-42,]),'AND':([79,100,102,117,131,139,140,141,142,143,144,145,147,148,149,151,176,178,185,186,187,188,191,202,227,229,236,238,241,243,247,249,251,252,263,264,285,286,287,288,290,291,315,319,],[-4,-39,-41,-174,-4,-4,-4,-4,-4,-172,-173,-175,-179,-180,-181,-4,-8,220,-4,-4,-4,-4,-5,-4,-148,-150,-157,-159,-162,-164,-168,-170,-176,-178,-40,-43,-4,-158,-163,-169,-101,-102,-149,-42,]),'OR':([79,100,102,117,122,131,139,140,141,142,143,144,145,147,148,149,151,175,176,178,185,186,187,188,191,202,217,219,227,229,236,238,241,243,247,249,251,252,263,264,276,285,286,287,288,290,291,315,319,],[-4,-39,-41,-174,-4,-4,-4,-4,-4,-4,-172,-173,-175,-179,-180,-181,-4,214,-8,-4,-4,-4,-4,-4,-5,-4,-144,-146,-148,-150,-157,-159,-162,-164,-168,-170,-176,-178,-40,-43,-145,-4,-158,-163,-169,-101,-102,-149,-42,]),'TO':([79,100,102,117,122,131,139,140,141,142,143,144,145,147,148,149,151,175,176,178,185,186,187,188,191,202,211,213,217,219,227,229,236,238,241,243,247,249,251,252,263,264,265,273,276,285,286,287,288,290,291,315,319,],[-4,-39,-41,-174,-4,-4,-4,-4,-4,-4,-172,-173,-175,-179,-180,-181,-4,-4,-8,-4,-4,-4,-4,-4,-5,-4,-140,-142,-144,-146,-148,-150,-157,-159,-162,-164,-168,-170,-176,-178,-40,-43,299,-141,-145,-4,-158,-163,-169,-101,-102,-149,-42,]),'EXPLORATION':([94,95,152,],[132,-4,-72,]),'FINANCIAL_STATE':([94,95,152,],[133,-4,-72,]),'DUMMI_REGRESSION':([94,95,152,],[134,-4,-72,]),'SEASON_ANALYSIS':([94,95,152,],[135,-4,-72,]),'TREND_PREDICTION':([94,95,152,],[136,-4,-72,]),'MODEL_PREDICT':([94,95,152,],[137,-4,-72,]),'READ':([94,95,152,],[138,-4,-72,]),'CTE_FLOAT':([94,95,96,97,98,99,101,130,146,152,177,190,195,200,203,212,214,218,220,228,230,231,232,233,234,235,237,239,240,242,244,245,246,248,250,257,258,262,266,289,340,342,],[147,-4,147,147,147,-107,147,-177,147,-72,147,147,-4,147,147,147,-143,147,-147,147,-151,-152,-153,-154,-155,-156,147,-160,-161,147,-165,-166,-167,147,-4,147,-85,147,147,-171,147,-60,]),'CTE_CHAR':([94,95,96,97,98,99,101,130,146,152,177,190,195,200,203,212,214,218,220,228,230,231,232,233,234,235,237,239,240,242,244,245,246,248,250,257,258,262,266,289,340,342,346,373,],[149,-4,149,149,149,-107,149,-177,149,-72,149,149,-4,149,149,149,-143,149,-147,149,-151,-152,-153,-154,-155,-156,149,-160,-161,149,-165,-166,-167,149,-4,149,-85,149,149,-171,149,-60,364,379,]),'WHILE':([164,267,],[204,-65,]),'ELSE':([267,292,],[-65,317,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'goto_main':([3,],[4,]),'program_libraries':([4,54,],[6,64,]),'from_library':([4,54,],[7,7,]),'empty':([4,6,10,17,32,35,36,37,41,48,51,54,55,56,60,63,66,79,81,82,85,86,90,95,98,107,111,112,113,122,131,139,140,141,142,151,155,158,165,171,174,175,178,185,186,187,188,190,192,195,202,207,208,221,250,256,261,268,270,277,283,285,292,298,301,306,310,317,323,329,331,333,338,344,347,359,361,362,364,367,379,],[8,12,18,34,34,49,50,53,12,59,61,8,67,84,89,91,67,102,105,106,110,49,116,152,159,168,59,110,53,176,176,176,176,176,176,191,196,201,67,61,210,213,219,229,238,243,249,159,255,258,264,271,89,279,289,294,201,12,304,307,313,176,318,313,67,313,330,335,343,349,313,353,358,271,313,18,370,304,375,313,375,]),'program_vars':([6,41,268,],[10,55,301,]),'import_library':([7,],[13,]),'program_function':([10,359,],[16,368,]),'var_type':([11,85,112,],[19,109,109,]),'var_c_type':([11,85,112,],[20,20,20,]),'var_s_type':([11,85,112,],[21,21,21,]),'c_type':([11,85,112,],[22,22,22,]),'s_type':([11,85,107,112,303,],[23,23,167,23,324,]),'program_main':([16,],[30,]),'main_id':([16,],[31,]),'resources':([17,32,],[33,42,]),'id_saver':([22,23,43,55,58,66,88,94,96,97,98,101,103,146,165,167,177,179,180,181,182,183,184,190,200,203,212,218,228,237,242,248,257,262,266,278,280,281,284,301,324,327,340,363,],[35,37,56,79,86,79,113,79,79,79,79,79,163,79,79,207,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,344,79,79,79,]),'end':([30,],[39,]),'f_type':([33,],[43,]),'add_c_var':([35,86,],[48,111,]),'var_s_array':([37,113,],[51,171,]),'var_c_type2':([48,111,],[57,169,]),'add_s_var':([51,171,],[60,208,]),'var_s_dimesions':([52,114,],[62,172,]),'inner_body':([55,66,165,301,],[65,93,205,323,]),'statement':([55,66,165,301,],[66,66,66,66,]),'assign':([55,66,165,301,],[68,68,68,68,]),'condition':([55,66,165,301,],[69,69,69,69,]),'print':([55,66,165,301,],[70,70,70,70,]),'cycle':([55,66,165,301,],[71,71,71,71,]),'call_void_function':([55,66,165,301,],[72,72,72,72,]),'variable':([55,66,94,96,97,98,101,146,165,177,179,180,181,182,183,184,190,200,203,212,218,228,237,242,248,257,262,266,278,280,281,284,301,327,340,363,],[73,73,117,117,117,117,117,117,73,117,221,222,223,224,225,226,117,117,117,117,117,117,117,117,117,117,117,117,308,309,310,314,73,345,117,372,]),'for':([55,66,165,301,],[76,76,76,76,]),'while':([55,66,165,301,],[77,77,77,77,]),'function_saver':([55,66,94,96,97,98,101,146,165,177,190,200,203,212,218,228,237,242,248,257,262,266,301,340,],[78,78,150,150,150,150,150,150,78,150,150,150,150,150,150,150,150,150,150,150,150,150,78,150,]),'func_creator':([56,],[83,]),'var_s_type2':([60,208,],[87,272,]),'keep_assign':([73,162,],[94,203,]),'function_flag':([78,150,],[98,190,]),'variable_array':([79,],[100,]),'seed':([81,],[104,]),'var_multiple':([85,112,],[108,170,]),'var_s_matrix':([90,],[115,]),'specialf_assign':([94,],[118,]),'exp':([94,96,97,98,101,146,177,190,200,203,212,257,262,266,340,],[119,153,156,160,161,189,216,160,160,265,273,156,297,300,361,]),'special_function':([94,],[120,]),'read':([94,],[121,]),'t_exp':([94,96,97,98,101,146,177,190,200,203,212,218,257,262,266,340,],[122,122,122,122,122,122,122,122,122,122,122,276,122,122,122,122,]),'exploration':([94,],[123,]),'financial_state':([94,],[124,]),'dummi_regression':([94,],[125,]),'season_analysis':([94,],[126,]),'trend_prediction':([94,],[127,]),'model_predict':([94,],[128,]),'np_read':([94,],[129,]),'expression':([94,96,97,98,101,146,177,190,200,203,212,218,257,262,266,340,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'m_exp':([94,96,97,98,101,146,177,190,200,203,212,218,228,237,257,262,266,340,],[139,139,139,139,139,139,139,139,139,139,139,139,285,286,139,139,139,139,]),'term':([94,96,97,98,101,146,177,190,200,203,212,218,228,237,242,257,262,266,340,],[140,140,140,140,140,140,140,140,140,140,140,140,140,140,287,140,140,140,140,]),'sub_factor':([94,96,97,98,101,146,177,190,200,203,212,218,228,237,242,248,257,262,266,340,],[141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,288,141,141,141,141,]),'factor':([94,96,97,98,101,146,177,190,200,203,212,218,228,237,242,248,257,262,266,340,],[142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,]),'factor_exp':([94,96,97,98,101,146,177,190,200,203,212,218,228,237,242,248,257,262,266,340,],[143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,]),'factor_cte':([94,96,97,98,101,146,177,190,200,203,212,218,228,237,242,248,257,262,266,340,],[144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,]),'call_function':([94,96,97,98,101,146,177,190,200,203,212,218,228,237,242,248,257,262,266,340,],[145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,]),'false_button':([94,96,97,98,101,146,177,190,200,203,212,218,228,237,242,248,257,262,266,340,],[146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,]),'print_many':([97,257,],[154,295,]),'print_type':([97,257,],[155,155,]),'call_params':([98,190,],[157,253,]),'check_param':([98,190,200,],[158,158,261,]),'for_control':([103,],[162,]),'body':([104,254,320,334,],[164,292,336,354,]),'param':([107,],[166,]),'end_assign':([118,],[173,]),'release_exp':([122,131,139,140,141,142,285,],[175,178,185,186,187,188,315,]),'print_many2':([155,],[194,]),'verify_params':([157,],[197,]),'exp_many':([158,261,],[199,296,]),'exp_or':([175,],[211,]),'exp_keep_or':([175,],[212,]),'valid_exp_read':([177,],[215,]),'t_exp_and':([178,],[217,]),'keep_and':([178,],[218,]),'expression_comp':([185,],[227,]),'expression_comp_2':([185,],[228,]),'m_exp_sr':([186,],[236,]),'m_exp_sr_2':([186,],[237,]),'term_pc':([187,],[241,]),'term_pc_2':([187,],[242,]),'sub_factor_pc':([188,],[247,]),'sub_factor_pc_2':([188,],[248,]),'release_false_button':([189,],[251,]),'condition_GOTOF':([192,],[254,]),'print_many_np':([195,],[257,]),'check_void':([197,],[259,]),'variable_matrix':([202,],[263,]),'add_func_glob':([206,],[268,]),'add_params':([207,344,],[270,362,]),'read_np':([215,],[274,]),'explore_var':([221,],[277,]),'check_not_void':([253,],[290,]),'end_print_np':([256,],[293,]),'for_np1':([265,],[298,]),'param2':([270,362,],[302,371,]),'explor_cte':([277,],[305,]),'int_const_saver':([283,298,306,331,347,367,],[311,321,326,350,365,376,]),'condition2':([292,],[316,]),'for_end':([298,],[320,]),'dr_array':([310,],[329,]),'condition_GOTO':([317,],[334,]),'return':([323,],[339,]),'return_np':([323,],[340,]),'empty_path_return':([323,],[341,]),'dr_int':([329,],[348,]),'end_condition':([333,],[352,]),'for_np2':([336,],[355,]),'gotoV':([338,],[357,]),'end_function':([339,],[359,]),'return_quad':([361,],[369,]),'dr_array_mp':([364,379,],[374,382,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID goto_main program_libraries program_vars program_function program_main end','program',8,'p_program','parser.py',36),
  ('goto_main -> SEMICOLON','goto_main',1,'p_goto_main','parser.py',40),
  ('end -> END','end',1,'p_end','parser.py',44),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',56),
  ('id_saver -> ID empty','id_saver',2,'p_id_saver','parser.py',63),
  ('int_const_saver -> CTE_INT','int_const_saver',1,'p_int_const_saver','parser.py',71),
  ('int_const_saver -> empty','int_const_saver',1,'p_int_const_saver','parser.py',72),
  ('release_exp -> empty','release_exp',1,'p_release_exp','parser.py',80),
  ('resources -> empty','resources',1,'p_resources','parser.py',86),
  ('program_libraries -> from_library import_library','program_libraries',2,'p_program_libraries','parser.py',103),
  ('program_libraries -> empty','program_libraries',1,'p_program_libraries','parser.py',104),
  ('from_library -> FROM ID','from_library',2,'p_from_library','parser.py',107),
  ('from_library -> empty','from_library',1,'p_from_library','parser.py',108),
  ('import_library -> IMPORT ID AS ID program_libraries','import_library',5,'p_import_library','parser.py',111),
  ('var_type -> var_c_type','var_type',1,'p_var_type','parser.py',116),
  ('var_type -> var_s_type','var_type',1,'p_var_type','parser.py',117),
  ('program_vars -> VAR var_type','program_vars',2,'p_program_vars','parser.py',120),
  ('program_vars -> empty','program_vars',1,'p_program_vars','parser.py',121),
  ('s_type -> INT','s_type',1,'p_s_type','parser.py',131),
  ('s_type -> FLOAT','s_type',1,'p_s_type','parser.py',132),
  ('s_type -> CHAR','s_type',1,'p_s_type','parser.py',133),
  ('c_type -> DATAFRAME','c_type',1,'p_c_type','parser.py',140),
  ('c_type -> DATE','c_type',1,'p_c_type','parser.py',141),
  ('var_multiple -> var_type','var_multiple',1,'p_var_multiple','parser.py',148),
  ('var_multiple -> empty','var_multiple',1,'p_var_multiple','parser.py',149),
  ('var_c_type -> c_type id_saver add_c_var var_c_type2 SEMICOLON var_multiple','var_c_type',6,'p_var_c_type','parser.py',152),
  ('var_c_type2 -> COMMA id_saver add_c_var var_c_type2','var_c_type2',4,'p_var_c_type2','parser.py',155),
  ('var_c_type2 -> empty','var_c_type2',1,'p_var_c_type2','parser.py',156),
  ('add_c_var -> empty','add_c_var',1,'p_add_c_var','parser.py',159),
  ('var_s_type -> s_type id_saver var_s_array add_s_var var_s_type2 SEMICOLON var_multiple','var_s_type',7,'p_var_s_type','parser.py',165),
  ('var_s_type2 -> COMMA id_saver var_s_array add_s_var var_s_type2','var_s_type2',5,'p_var_s_type2','parser.py',168),
  ('var_s_type2 -> empty','var_s_type2',1,'p_var_s_type2','parser.py',169),
  ('add_s_var -> empty','add_s_var',1,'p_add_s_var','parser.py',173),
  ('var_s_array -> LSQBRACKET var_s_dimesions RSQBRACKET var_s_matrix','var_s_array',4,'p_var_s_array','parser.py',181),
  ('var_s_array -> empty','var_s_array',1,'p_var_s_array','parser.py',182),
  ('var_s_matrix -> LSQBRACKET var_s_dimesions RSQBRACKET','var_s_matrix',3,'p_var_s_matrix','parser.py',185),
  ('var_s_matrix -> empty','var_s_matrix',1,'p_var_s_matrix','parser.py',186),
  ('var_s_dimesions -> CTE_INT empty','var_s_dimesions',2,'p_var_s_dimesions','parser.py',190),
  ('variable -> id_saver variable_array','variable',2,'p_variable','parser.py',207),
  ('variable_array -> LSQBRACKET exp RSQBRACKET variable_matrix','variable_array',4,'p_variable_array','parser.py',223),
  ('variable_array -> empty','variable_array',1,'p_variable_array','parser.py',224),
  ('variable_matrix -> LSQBRACKET exp RSQBRACKET','variable_matrix',3,'p_variable_matrix','parser.py',230),
  ('variable_matrix -> empty','variable_matrix',1,'p_variable_matrix','parser.py',231),
  ('program_function -> FUNCTION resources f_type id_saver func_creator LPAREN param RPAREN add_func_glob program_vars inner_body return end_function program_function','program_function',14,'p_program_function','parser.py',237),
  ('program_function -> empty','program_function',1,'p_program_function','parser.py',238),
  ('f_type -> INT','f_type',1,'p_f_type','parser.py',243),
  ('f_type -> FLOAT','f_type',1,'p_f_type','parser.py',244),
  ('f_type -> CHAR','f_type',1,'p_f_type','parser.py',245),
  ('f_type -> VOID','f_type',1,'p_f_type','parser.py',246),
  ('func_creator -> empty','func_creator',1,'p_func_creator','parser.py',258),
  ('add_func_glob -> LBRACKET','add_func_glob',1,'p_add_func_glob','parser.py',266),
  ('end_function -> RBRACKET','end_function',1,'p_end_function','parser.py',279),
  ('param -> s_type id_saver add_params param2','param',4,'p_param','parser.py',285),
  ('param -> empty','param',1,'p_param','parser.py',286),
  ('param2 -> COMMA s_type id_saver add_params param2','param2',5,'p_param2','parser.py',289),
  ('param2 -> empty','param2',1,'p_param2','parser.py',290),
  ('add_params -> empty','add_params',1,'p_add_params','parser.py',294),
  ('return -> return_np exp return_quad SEMICOLON','return',4,'p_return','parser.py',301),
  ('return -> empty_path_return','return',1,'p_return','parser.py',302),
  ('return_np -> RETURN','return_np',1,'p_return_np','parser.py',305),
  ('return_quad -> empty','return_quad',1,'p_return_quad','parser.py',314),
  ('empty_path_return -> empty','empty_path_return',1,'p_empty_path_return','parser.py',321),
  ('program_main -> main_id LBRACKET program_vars inner_body RBRACKET','program_main',5,'p_program_main','parser.py',332),
  ('main_id -> MAIN resources','main_id',2,'p_main_id','parser.py',335),
  ('body -> LBRACKET inner_body RBRACKET','body',3,'p_body','parser.py',345),
  ('inner_body -> statement inner_body','inner_body',2,'p_inner_body','parser.py',349),
  ('inner_body -> empty','inner_body',1,'p_inner_body','parser.py',350),
  ('assign -> variable keep_assign specialf_assign end_assign','assign',4,'p_assign','parser.py',355),
  ('specialf_assign -> exp','specialf_assign',1,'p_specialf_assign','parser.py',361),
  ('specialf_assign -> special_function','specialf_assign',1,'p_specialf_assign','parser.py',362),
  ('specialf_assign -> read','specialf_assign',1,'p_specialf_assign','parser.py',363),
  ('keep_assign -> ASSIGN empty','keep_assign',2,'p_keep_assign','parser.py',367),
  ('end_assign -> SEMICOLON empty','end_assign',2,'p_end_assign','parser.py',383),
  ('condition -> IF LPAREN exp RPAREN condition_GOTOF body condition2 SEMICOLON end_condition','condition',9,'p_condition','parser.py',391),
  ('condition2 -> ELSE condition_GOTO body','condition2',3,'p_condition2','parser.py',394),
  ('condition2 -> empty','condition2',1,'p_condition2','parser.py',395),
  ('condition_GOTOF -> empty','condition_GOTOF',1,'p_condition_GOTOF','parser.py',399),
  ('condition_GOTO -> empty','condition_GOTO',1,'p_condition_GOTO','parser.py',406),
  ('end_condition -> empty','end_condition',1,'p_end_condition','parser.py',411),
  ('print -> PRINT LPAREN print_many RPAREN SEMICOLON end_print_np','print',6,'p_print','parser.py',420),
  ('print_type -> exp','print_type',1,'p_print_type','parser.py',423),
  ('print_many -> print_type print_many2','print_many',2,'p_print_many','parser.py',426),
  ('print_many2 -> COMMA print_many_np print_many','print_many2',3,'p_print_many2','parser.py',429),
  ('print_many2 -> empty','print_many2',1,'p_print_many2','parser.py',430),
  ('print_many_np -> empty','print_many_np',1,'p_print_many_np','parser.py',433),
  ('end_print_np -> empty','end_print_np',1,'p_end_print_np','parser.py',437),
  ('read -> np_read LPAREN valid_exp_read read_np','read',4,'p_read','parser.py',443),
  ('np_read -> READ','np_read',1,'p_np_read','parser.py',447),
  ('valid_exp_read -> exp','valid_exp_read',1,'p_valid_exp_read','parser.py',451),
  ('read_np -> RPAREN','read_np',1,'p_read_np','parser.py',462),
  ('cycle -> for','cycle',1,'p_cycle','parser.py',468),
  ('cycle -> while','cycle',1,'p_cycle','parser.py',469),
  ('while -> DO seed body WHILE LPAREN exp RPAREN SEMICOLON gotoV','while',9,'p_while','parser.py',473),
  ('seed -> empty','seed',1,'p_seed','parser.py',477),
  ('gotoV -> empty','gotoV',1,'p_gotoV','parser.py',482),
  ('for -> FOR LPAREN for_control keep_assign exp for_np1 for_end body for_np2','for',9,'p_for','parser.py',488),
  ('for_control -> id_saver','for_control',1,'p_for_control','parser.py',491),
  ('for_np1 -> TO','for_np1',1,'p_for_np1','parser.py',500),
  ('for_end -> int_const_saver RPAREN','for_end',2,'p_for_end','parser.py',505),
  ('for_np2 -> SEMICOLON','for_np2',1,'p_for_np2','parser.py',522),
  ('call_function -> function_saver function_flag call_params check_not_void','call_function',4,'p_call_function','parser.py',568),
  ('check_not_void -> RPAREN','check_not_void',1,'p_check_not_void','parser.py',573),
  ('call_void_function -> function_saver function_flag call_params verify_params check_void','call_void_function',5,'p_call_void_function','parser.py',594),
  ('verify_params -> RPAREN','verify_params',1,'p_verify_params','parser.py',597),
  ('check_void -> SEMICOLON','check_void',1,'p_check_void','parser.py',606),
  ('function_saver -> ID empty','function_saver',2,'p_function_saver','parser.py',620),
  ('function_flag -> LPAREN','function_flag',1,'p_function_flag','parser.py',632),
  ('call_params -> check_param exp_many','call_params',2,'p_call_params','parser.py',647),
  ('call_params -> empty','call_params',1,'p_call_params','parser.py',648),
  ('check_param -> exp','check_param',1,'p_check_param','parser.py',653),
  ('exp_many -> COMMA check_param exp_many','exp_many',3,'p_exp_many','parser.py',667),
  ('exp_many -> empty','exp_many',1,'p_exp_many','parser.py',668),
  ('statement -> assign','statement',1,'p_statement','parser.py',672),
  ('statement -> condition','statement',1,'p_statement','parser.py',673),
  ('statement -> print','statement',1,'p_statement','parser.py',674),
  ('statement -> cycle','statement',1,'p_statement','parser.py',675),
  ('statement -> call_void_function','statement',1,'p_statement','parser.py',676),
  ('special_function -> exploration','special_function',1,'p_special_function','parser.py',680),
  ('special_function -> financial_state','special_function',1,'p_special_function','parser.py',681),
  ('special_function -> dummi_regression','special_function',1,'p_special_function','parser.py',682),
  ('special_function -> season_analysis','special_function',1,'p_special_function','parser.py',683),
  ('special_function -> trend_prediction','special_function',1,'p_special_function','parser.py',684),
  ('special_function -> model_predict','special_function',1,'p_special_function','parser.py',685),
  ('exploration -> EXPLORATION LPAREN variable explore_var explor_cte RPAREN','exploration',6,'p_exploration','parser.py',691),
  ('explore_var -> COMMA variable','explore_var',2,'p_explore_var','parser.py',694),
  ('explore_var -> empty','explore_var',1,'p_explore_var','parser.py',695),
  ('explor_cte -> COMMA int_const_saver','explor_cte',2,'p_explor_cte','parser.py',698),
  ('explor_cte -> empty','explor_cte',1,'p_explor_cte','parser.py',699),
  ('financial_state -> FINANCIAL_STATE LPAREN variable COMMA variable COMMA variable COMMA variable RPAREN','financial_state',10,'p_financial_state','parser.py',703),
  ('season_analysis -> SEASON_ANALYSIS LPAREN variable RPAREN','season_analysis',4,'p_season_analysis','parser.py',707),
  ('trend_prediction -> TREND_PREDICTION LPAREN variable COMMA int_const_saver COMMA int_const_saver COMMA int_const_saver RPAREN','trend_prediction',10,'p_trend_prediction','parser.py',713),
  ('dummi_regression -> DUMMI_REGRESSION LPAREN variable COMMA variable dr_array dr_int RPAREN','dummi_regression',8,'p_dummi_regression','parser.py',717),
  ('dr_array -> COMMA LSQBRACKET CTE_CHAR dr_array_mp RSQBRACKET','dr_array',5,'p_dr_array','parser.py',720),
  ('dr_array -> empty','dr_array',1,'p_dr_array','parser.py',721),
  ('dr_array_mp -> COMMA CTE_CHAR dr_array_mp','dr_array_mp',3,'p_dr_array_mp','parser.py',724),
  ('dr_array_mp -> empty','dr_array_mp',1,'p_dr_array_mp','parser.py',725),
  ('dr_int -> COMMA int_const_saver','dr_int',2,'p_dr_int','parser.py',728),
  ('dr_int -> empty','dr_int',1,'p_dr_int','parser.py',729),
  ('model_predict -> MODEL_PREDICT LPAREN variable COMMA variable COMMA RPAREN','model_predict',7,'p_model_predict','parser.py',733),
  ('exp -> t_exp release_exp exp_or','exp',3,'p_exp','parser.py',738),
  ('exp_or -> exp_keep_or exp','exp_or',2,'p_exp_or','parser.py',742),
  ('exp_or -> empty','exp_or',1,'p_exp_or','parser.py',743),
  ('exp_keep_or -> OR','exp_keep_or',1,'p_exp_keep_or','parser.py',746),
  ('t_exp -> expression release_exp t_exp_and','t_exp',3,'p_t_exp','parser.py',755),
  ('t_exp_and -> keep_and t_exp','t_exp_and',2,'p_t_exp_and','parser.py',760),
  ('t_exp_and -> empty','t_exp_and',1,'p_t_exp_and','parser.py',761),
  ('keep_and -> AND','keep_and',1,'p_keep_and','parser.py',764),
  ('expression -> m_exp release_exp expression_comp','expression',3,'p_expression','parser.py',773),
  ('expression_comp -> expression_comp_2 m_exp release_exp','expression_comp',3,'p_expression_comp','parser.py',779),
  ('expression_comp -> empty','expression_comp',1,'p_expression_comp','parser.py',780),
  ('expression_comp_2 -> GTHAN','expression_comp_2',1,'p_expression_comp_2','parser.py',785),
  ('expression_comp_2 -> EQUAL','expression_comp_2',1,'p_expression_comp_2','parser.py',786),
  ('expression_comp_2 -> NOTEQUAL','expression_comp_2',1,'p_expression_comp_2','parser.py',787),
  ('expression_comp_2 -> LTHAN','expression_comp_2',1,'p_expression_comp_2','parser.py',788),
  ('expression_comp_2 -> GORE','expression_comp_2',1,'p_expression_comp_2','parser.py',789),
  ('expression_comp_2 -> LORE','expression_comp_2',1,'p_expression_comp_2','parser.py',790),
  ('m_exp -> term release_exp m_exp_sr','m_exp',3,'p_m_exp','parser.py',800),
  ('m_exp_sr -> m_exp_sr_2 m_exp','m_exp_sr',2,'p_m_exp_sr','parser.py',807),
  ('m_exp_sr -> empty','m_exp_sr',1,'p_m_exp_sr','parser.py',808),
  ('m_exp_sr_2 -> PLUS','m_exp_sr_2',1,'p_m_exp_sr_2','parser.py',811),
  ('m_exp_sr_2 -> MINUS','m_exp_sr_2',1,'p_m_exp_sr_2','parser.py',812),
  ('term -> sub_factor release_exp term_pc','term',3,'p_term','parser.py',820),
  ('term_pc -> term_pc_2 term','term_pc',2,'p_term_pc','parser.py',826),
  ('term_pc -> empty','term_pc',1,'p_term_pc','parser.py',827),
  ('term_pc_2 -> MULTIPLY','term_pc_2',1,'p_term_pc_2','parser.py',830),
  ('term_pc_2 -> DIVIDE','term_pc_2',1,'p_term_pc_2','parser.py',831),
  ('term_pc_2 -> MODULE','term_pc_2',1,'p_term_pc_2','parser.py',832),
  ('sub_factor -> factor release_exp sub_factor_pc','sub_factor',3,'p_sub_factor','parser.py',838),
  ('sub_factor_pc -> sub_factor_pc_2 sub_factor','sub_factor_pc',2,'p_sub_factor_pc','parser.py',844),
  ('sub_factor_pc -> empty','sub_factor_pc',1,'p_sub_factor_pc','parser.py',845),
  ('sub_factor_pc_2 -> POWER empty','sub_factor_pc_2',2,'p_sub_factor_pc_2','parser.py',848),
  ('factor -> factor_exp','factor',1,'p_factor','parser.py',856),
  ('factor -> factor_cte','factor',1,'p_factor','parser.py',857),
  ('factor -> variable','factor',1,'p_factor','parser.py',858),
  ('factor -> call_function','factor',1,'p_factor','parser.py',859),
  ('factor_exp -> false_button exp release_false_button','factor_exp',3,'p_factor_exp','parser.py',866),
  ('false_button -> LPAREN','false_button',1,'p_false_button','parser.py',871),
  ('release_false_button -> RPAREN','release_false_button',1,'p_release_false_button','parser.py',877),
  ('factor_cte -> CTE_FLOAT','factor_cte',1,'p_factor_cte','parser.py',884),
  ('factor_cte -> CTE_INT','factor_cte',1,'p_factor_cte','parser.py',885),
  ('factor_cte -> CTE_CHAR','factor_cte',1,'p_factor_cte','parser.py',886),
]
