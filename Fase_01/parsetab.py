
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS ASSIGN CHAR COLON COMMA CTE_CHAR CTE_FLOAT CTE_INT DATAFRAME DATE DIVIDE DO DUMMI_REGRESSION ELSE END EQUAL EXPLORATION FINANCIAL_STATE FLOAT FOR FROM FUNCTION GTHAN ID IF IMPORT INT LBRACKET LPAREN LSQBRACKET LTHAN MAIN MINUS MODEL_PREDICT MODULE MULTIPLY NOTEQUAL OR PLUS POWER PRINT PROGRAM RBRACKET READ RETURN RPAREN RSQBRACKET SEASON_ANALYSIS SEMICOLON TO TREND_PREDICTION VAR VOID WHILEprogram : PROGRAM ID SEMICOLON program_libraries program_vars program_function program_main endend : END emptyempty : id_saver : ID empty int_const_saver : CTE_INT emptyprogram_libraries : from_library import_library \n                         | emptyfrom_library : FROM ID\n                    | emptyimport_library : IMPORT ID AS ID  program_librariesvar_type : var_c_type\n                | var_s_typeprogram_vars : VAR var_type  \n                    | emptys_type : INT \n              | FLOAT\n              | CHARc_type : DATAFRAME\n              | DATEvar_multiple : var_type\n                    | emptyvar_c_type : c_type id_saver add_c_var var_c_type2 SEMICOLON var_multiplevar_c_type2 : COMMA id_saver add_c_var var_c_type2\n                   | emptyadd_c_var : emptyvar_s_type : s_type id_saver var_s_array add_s_var var_s_type2 SEMICOLON var_multiplevar_s_type2 : COMMA id_saver var_s_array add_s_var var_s_type2\n                   | emptyadd_s_var : emptyvar_s_array : LSQBRACKET var_s_dimesions RSQBRACKET var_s_matrix \n                   | emptyvar_s_matrix : LSQBRACKET var_s_dimesions RSQBRACKET\n                    | emptyvar_s_dimesions : CTE_INT emptyvariable : id_saver variable_arrayvariable_array : LSQBRACKET exp RSQBRACKET variable_matrix\n                      | emptyvariable_matrix : LSQBRACKET exp RSQBRACKET\n                       | emptyprogram_function : FUNCTION f_type id_saver func_creator LPAREN param RPAREN LBRACKET program_vars inner_body return RBRACKET program_function\n                        | emptyf_type : INT \n              | FLOAT\n              | CHAR\n              | VOIDfunc_creator : emptyparam : s_type id_saver add_params param2param2 : COMMA s_type id_saver add_params param2\n              | emptyadd_params : emptyreturn : RETURN exp SEMICOLON\n              | emptyprogram_main : MAIN main_id LBRACKET program_vars inner_body RBRACKETmain_id : emptybody : LBRACKET inner_body RBRACKETinner_body :  statement inner_body\n                  | emptyassign : variable keep_assign specialf_assign SEMICOLONspecialf_assign : exp\n                       | special_function\n                       | readkeep_assign : ASSIGN emptycondition : IF LPAREN exp RPAREN body condition2 SEMICOLONcondition2 : ELSE body\n                 | emptyprint : PRINT LPAREN print_many RPAREN SEMICOLONprint_type : expprint_many : print_type print_many2 print_many2 : COMMA print_type print_many2\n                   | emptyread : READ LPAREN variable RPARENcycle : for\n             | whilewhile : DO body WHILE LPAREN exp RPAREN SEMICOLONfor : FOR LPAREN ID TO for_end RPAREN body SEMICOLONfor_end : int_const_saver\n               | IDcall_function : function_saver LPAREN exp exp_many RPAREN function_saver : ID emptyexp_many : COMMA exp exp_many\n                | emptystatement : assign\n                 | condition\n                 | print\n                 | cycle\n                 | call_functionspecial_function : exploration\n                        | financial_state\n                        | dummi_regression\n                        | season_analysis\n                        | trend_prediction\n                        | model_predictexploration : EXPLORATION LPAREN variable explore_var explor_cte RPARENexplore_var : COMMA variable\n                   | emptyexplor_cte : COMMA int_const_saver\n                  | emptyfinancial_state : FINANCIAL_STATE LPAREN variable COMMA variable COMMA variable COMMA variable RPARENseason_analysis : SEASON_ANALYSIS LPAREN variable RPARENtrend_prediction : TREND_PREDICTION LPAREN variable COMMA int_const_saver COMMA int_const_saver COMMA int_const_saver RPARENdummi_regression : DUMMI_REGRESSION LPAREN variable COMMA variable dr_array dr_int RPARENdr_array : COMMA LSQBRACKET CTE_CHAR dr_array_mp RSQBRACKET\n                | emptydr_array_mp : COMMA CTE_CHAR dr_array_mp\n                   | emptydr_int : COMMA int_const_saver\n              | emptymodel_predict : MODEL_PREDICT LPAREN variable COMMA variable COMMA RPARENexp : t_exp exp_orexp_or : OR exp\n              | emptyt_exp : expression t_exp_andt_exp_and : AND t_exp\n                 | emptyexpression : m_exp expression_compexpression_comp : expression_comp_2 m_exp\n                       | emptyexpression_comp_2 : EQUAL\n                         | NOTEQUAL\n                         | LTHAN\n                         | GTHANm_exp : term m_exp_srm_exp_sr : m_exp_sr_2 m_exp\n                | emptym_exp_sr_2 : PLUS\n                  | MINUSterm : sub_factor term_pcterm_pc : term_pc_2 term\n               | emptyterm_pc_2 : MULTIPLY\n                 | DIVIDE\n                 | MODULEsub_factor : factor sub_factor_pcsub_factor_pc : sub_factor_pc_2 sub_factor\n                     | emptysub_factor_pc_2 : POWER emptyfactor : factor_exp\n              | factor_cte\n              | variable\n              | call_functionfactor_exp : LPAREN exp RPARENfactor_cte : CTE_FLOAT\n                  | CTE_INT\n                  | CTE_CHAR'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,40,41,52,],[0,-1,-3,-2,]),'ID':([2,8,11,13,18,19,20,21,22,23,24,25,26,27,31,32,33,34,35,39,53,57,64,66,69,74,76,77,78,79,80,84,85,92,93,94,95,97,104,105,106,107,108,110,112,115,119,135,154,164,169,171,173,176,178,179,180,181,182,183,185,187,188,189,190,192,194,195,197,199,200,201,203,205,210,213,216,217,219,238,240,242,244,253,256,258,259,262,273,284,288,294,300,311,],[3,14,-14,28,-13,-11,-12,37,37,-18,-19,-15,-16,-17,37,-42,-43,-44,-45,51,-3,37,89,-3,37,89,-82,-83,-84,-85,-86,-72,-73,37,-22,-20,-21,-3,153,-3,153,153,153,153,161,89,-26,153,-62,-3,-58,153,37,153,37,37,37,37,37,37,153,-118,-119,-120,-121,153,-125,-126,153,-130,-131,-132,153,-3,153,153,247,153,89,-136,-66,-78,153,37,37,37,37,37,153,-63,-74,37,-75,37,]),'SEMICOLON':([3,36,37,38,45,46,47,48,50,56,58,59,60,67,68,70,71,87,96,98,100,101,109,111,118,120,122,123,124,125,126,127,128,129,130,131,132,133,136,143,144,145,146,147,148,149,150,151,152,153,167,168,170,172,175,177,184,186,191,193,196,198,202,204,206,208,215,218,223,224,226,227,234,235,236,237,239,242,245,246,254,260,263,265,271,285,286,287,290,292,310,314,321,324,],[4,-3,-3,-3,-3,-25,-4,-3,-31,66,-24,-3,-29,-3,97,-28,-3,-3,-3,-3,-30,-33,-35,-37,-23,-3,-139,169,-59,-60,-61,-3,-87,-88,-89,-90,-91,-92,-3,-3,-3,-3,-3,-137,-138,-140,-142,-143,-144,-3,-3,-32,-109,-111,-112,-114,-115,-117,-122,-124,-127,-129,-133,-135,-4,240,-3,-55,-27,-110,-141,-113,-116,-123,-128,-134,-3,-78,-36,-39,-71,-99,284,-65,288,-64,-38,300,302,-93,-108,-101,-98,-100,]),'FROM':([4,51,],[8,8,]),'VAR':([4,5,7,12,51,53,63,164,],[-3,10,-7,-6,-3,10,-10,10,]),'FUNCTION':([4,5,7,9,11,12,18,19,20,51,63,66,93,94,95,97,119,289,],[-3,-3,-7,16,-14,-6,-13,-11,-12,-3,-10,-3,-22,-20,-21,-3,-26,16,]),'MAIN':([4,5,7,9,11,12,15,17,18,19,20,51,63,66,93,94,95,97,119,289,301,],[-3,-3,-7,-3,-14,-6,30,-41,-13,-11,-12,-3,-10,-3,-22,-20,-21,-3,-26,-3,-40,]),'IMPORT':([4,6,7,14,51,],[-3,13,-9,-8,-3,]),'DATAFRAME':([10,66,97,],[23,23,23,]),'DATE':([10,66,97,],[24,24,24,]),'INT':([10,16,65,66,97,221,],[25,32,25,25,25,25,]),'FLOAT':([10,16,65,66,97,221,],[26,33,26,26,26,26,]),'CHAR':([10,16,65,66,97,221,],[27,34,27,27,27,27,]),'IF':([11,18,19,20,53,64,66,74,76,77,78,79,80,84,85,93,94,95,97,115,119,164,169,219,240,242,284,288,300,],[-14,-13,-11,-12,-3,82,-3,82,-82,-83,-84,-85,-86,-72,-73,-22,-20,-21,-3,82,-26,-3,-58,82,-66,-78,-63,-74,-75,]),'PRINT':([11,18,19,20,53,64,66,74,76,77,78,79,80,84,85,93,94,95,97,115,119,164,169,219,240,242,284,288,300,],[-14,-13,-11,-12,-3,83,-3,83,-82,-83,-84,-85,-86,-72,-73,-22,-20,-21,-3,83,-26,-3,-58,83,-66,-78,-63,-74,-75,]),'FOR':([11,18,19,20,53,64,66,74,76,77,78,79,80,84,85,93,94,95,97,115,119,164,169,219,240,242,284,288,300,],[-14,-13,-11,-12,-3,88,-3,88,-82,-83,-84,-85,-86,-72,-73,-22,-20,-21,-3,88,-26,-3,-58,88,-66,-78,-63,-74,-75,]),'DO':([11,18,19,20,53,64,66,74,76,77,78,79,80,84,85,93,94,95,97,115,119,164,169,219,240,242,284,288,300,],[-14,-13,-11,-12,-3,90,-3,90,-82,-83,-84,-85,-86,-72,-73,-22,-20,-21,-3,90,-26,-3,-58,90,-66,-78,-63,-74,-75,]),'RBRACKET':([11,18,19,20,53,64,66,73,74,75,76,77,78,79,80,84,85,93,94,95,97,103,115,119,163,164,169,219,240,242,252,272,274,284,288,300,302,],[-14,-13,-11,-12,-3,-3,-3,102,-3,-57,-82,-83,-84,-85,-86,-72,-73,-22,-20,-21,-3,-56,-3,-26,218,-3,-58,-3,-66,-78,-3,289,-52,-63,-74,-75,-51,]),'RETURN':([11,18,19,20,66,74,75,76,77,78,79,80,84,85,93,94,95,97,103,119,164,169,219,240,242,252,284,288,300,],[-14,-13,-11,-12,-3,-3,-57,-82,-83,-84,-85,-86,-72,-73,-22,-20,-21,-3,-56,-26,-3,-58,-3,-66,-78,273,-63,-74,-75,]),'VOID':([16,],[35,]),'AS':([28,],[39,]),'END':([29,102,],[41,-53,]),'LBRACKET':([30,42,43,90,116,207,264,269,],[-3,53,-54,115,164,115,115,115,]),'COMMA':([36,37,38,45,46,47,48,50,59,60,67,71,87,96,98,100,101,109,111,117,120,122,127,136,143,144,145,146,147,148,149,150,151,152,153,157,158,159,165,166,167,168,170,172,175,177,184,186,191,193,196,198,202,204,206,215,224,226,227,228,229,230,232,233,234,235,236,237,241,242,243,245,246,250,255,257,270,275,279,280,281,282,283,286,291,296,297,304,309,312,322,323,],[-3,-3,-3,57,-25,-4,-3,-31,69,-29,-3,-3,-3,57,-3,-30,-33,-35,-37,-3,-3,-139,-3,-3,-3,-3,-3,-3,-137,-138,-140,-142,-143,-144,-3,210,-67,213,221,-50,69,-32,-109,-111,-112,-114,-115,-117,-122,-124,-127,-129,-133,-135,-4,-3,-110,-141,-113,256,258,259,261,262,-116,-123,-128,-134,210,-78,213,-36,-39,-3,277,-95,-5,-3,-94,294,295,298,299,-38,221,306,-103,311,315,317,317,-102,]),'LSQBRACKET':([37,38,47,71,87,89,98,113,153,206,215,295,],[-3,49,-4,99,110,-3,49,-4,-3,-4,244,305,]),'LPAREN':([37,44,47,54,55,82,83,86,88,89,104,105,106,107,108,110,113,134,135,137,138,139,140,141,142,153,154,162,171,176,185,187,188,189,190,192,194,195,197,199,200,201,203,205,206,210,213,217,238,244,273,],[-3,-3,-4,65,-46,106,107,108,112,-3,135,-3,135,135,135,135,-79,173,135,178,179,180,181,182,183,-3,-62,217,135,135,135,-118,-119,-120,-121,135,-125,-126,135,-130,-131,-132,135,-3,-79,135,135,135,-136,135,135,]),'RPAREN':([37,47,87,91,109,111,117,122,127,136,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,165,166,170,172,174,175,177,184,186,191,193,196,198,202,204,206,209,211,212,214,215,220,222,224,225,226,227,228,231,234,235,236,237,241,242,243,245,246,247,248,249,250,251,255,257,266,267,270,275,276,278,279,281,286,291,293,296,297,299,303,307,308,313,316,320,323,],[-3,-4,-3,116,-35,-37,-3,-139,-3,-3,-3,-3,-3,-3,-137,-138,-140,-142,-143,-144,-3,207,208,-3,-67,-3,-3,-50,-109,-111,226,-112,-114,-115,-117,-122,-124,-127,-129,-133,-135,-4,-68,-70,242,-81,-3,-47,-49,-110,254,-141,-113,-3,260,-116,-123,-128,-134,-3,-78,-3,-36,-39,-77,269,-76,-3,271,-3,-95,-69,-80,-5,-3,292,-97,-94,-3,-38,-3,-96,-3,-103,310,-48,314,-107,-106,321,324,-102,]),'CTE_INT':([49,99,104,105,106,107,108,110,135,154,171,176,185,187,188,189,190,192,194,195,197,199,200,201,203,205,210,213,216,217,238,244,261,273,277,298,306,315,],[62,62,151,-3,151,151,151,151,151,-62,151,151,151,-118,-119,-120,-121,151,-125,-126,151,-130,-131,-132,151,-3,151,151,250,151,-136,151,250,151,250,250,250,250,]),'RSQBRACKET':([61,62,72,87,109,111,121,122,127,136,143,144,145,146,147,148,149,150,151,152,153,160,170,172,175,177,184,186,191,193,196,198,202,204,206,215,224,226,227,234,235,236,237,242,245,246,268,286,312,318,319,322,325,],[71,-3,-34,-3,-35,-37,168,-139,-3,-3,-3,-3,-3,-3,-137,-138,-140,-142,-143,-144,-3,215,-109,-111,-112,-114,-115,-117,-122,-124,-127,-129,-133,-135,-4,-3,-110,-141,-113,-116,-123,-128,-134,-78,-36,-39,286,-38,-3,323,-105,-3,-104,]),'ASSIGN':([81,87,89,109,111,113,215,245,246,286,],[105,-3,-3,-35,-37,-4,-3,-36,-39,-38,]),'POWER':([87,109,111,122,146,147,148,149,150,151,152,153,206,215,226,242,245,246,286,],[-3,-35,-37,-139,205,-137,-138,-140,-142,-143,-144,-3,-4,-3,-141,-78,-36,-39,-38,]),'MULTIPLY':([87,109,111,122,145,146,147,148,149,150,151,152,153,202,204,206,215,226,237,242,245,246,286,],[-3,-35,-37,-139,199,-3,-137,-138,-140,-142,-143,-144,-3,-133,-135,-4,-3,-141,-134,-78,-36,-39,-38,]),'DIVIDE':([87,109,111,122,145,146,147,148,149,150,151,152,153,202,204,206,215,226,237,242,245,246,286,],[-3,-35,-37,-139,200,-3,-137,-138,-140,-142,-143,-144,-3,-133,-135,-4,-3,-141,-134,-78,-36,-39,-38,]),'MODULE':([87,109,111,122,145,146,147,148,149,150,151,152,153,202,204,206,215,226,237,242,245,246,286,],[-3,-35,-37,-139,201,-3,-137,-138,-140,-142,-143,-144,-3,-133,-135,-4,-3,-141,-134,-78,-36,-39,-38,]),'PLUS':([87,109,111,122,144,145,146,147,148,149,150,151,152,153,196,198,202,204,206,215,226,236,237,242,245,246,286,],[-3,-35,-37,-139,194,-3,-3,-137,-138,-140,-142,-143,-144,-3,-127,-129,-133,-135,-4,-3,-141,-128,-134,-78,-36,-39,-38,]),'MINUS':([87,109,111,122,144,145,146,147,148,149,150,151,152,153,196,198,202,204,206,215,226,236,237,242,245,246,286,],[-3,-35,-37,-139,195,-3,-3,-137,-138,-140,-142,-143,-144,-3,-127,-129,-133,-135,-4,-3,-141,-128,-134,-78,-36,-39,-38,]),'EQUAL':([87,109,111,122,143,144,145,146,147,148,149,150,151,152,153,191,193,196,198,202,204,206,215,226,235,236,237,242,245,246,286,],[-3,-35,-37,-139,187,-3,-3,-3,-137,-138,-140,-142,-143,-144,-3,-122,-124,-127,-129,-133,-135,-4,-3,-141,-123,-128,-134,-78,-36,-39,-38,]),'NOTEQUAL':([87,109,111,122,143,144,145,146,147,148,149,150,151,152,153,191,193,196,198,202,204,206,215,226,235,236,237,242,245,246,286,],[-3,-35,-37,-139,188,-3,-3,-3,-137,-138,-140,-142,-143,-144,-3,-122,-124,-127,-129,-133,-135,-4,-3,-141,-123,-128,-134,-78,-36,-39,-38,]),'LTHAN':([87,109,111,122,143,144,145,146,147,148,149,150,151,152,153,191,193,196,198,202,204,206,215,226,235,236,237,242,245,246,286,],[-3,-35,-37,-139,189,-3,-3,-3,-137,-138,-140,-142,-143,-144,-3,-122,-124,-127,-129,-133,-135,-4,-3,-141,-123,-128,-134,-78,-36,-39,-38,]),'GTHAN':([87,109,111,122,143,144,145,146,147,148,149,150,151,152,153,191,193,196,198,202,204,206,215,226,235,236,237,242,245,246,286,],[-3,-35,-37,-139,190,-3,-3,-3,-137,-138,-140,-142,-143,-144,-3,-122,-124,-127,-129,-133,-135,-4,-3,-141,-123,-128,-134,-78,-36,-39,-38,]),'AND':([87,109,111,122,136,143,144,145,146,147,148,149,150,151,152,153,184,186,191,193,196,198,202,204,206,215,226,234,235,236,237,242,245,246,286,],[-3,-35,-37,-139,176,-3,-3,-3,-3,-137,-138,-140,-142,-143,-144,-3,-115,-117,-122,-124,-127,-129,-133,-135,-4,-3,-141,-116,-123,-128,-134,-78,-36,-39,-38,]),'OR':([87,109,111,122,127,136,143,144,145,146,147,148,149,150,151,152,153,175,177,184,186,191,193,196,198,202,204,206,215,226,227,234,235,236,237,242,245,246,286,],[-3,-35,-37,-139,171,-3,-3,-3,-3,-3,-137,-138,-140,-142,-143,-144,-3,-112,-114,-115,-117,-122,-124,-127,-129,-133,-135,-4,-3,-141,-113,-116,-123,-128,-134,-78,-36,-39,-38,]),'READ':([104,105,154,],[134,-3,-62,]),'EXPLORATION':([104,105,154,],[137,-3,-62,]),'FINANCIAL_STATE':([104,105,154,],[138,-3,-62,]),'DUMMI_REGRESSION':([104,105,154,],[139,-3,-62,]),'SEASON_ANALYSIS':([104,105,154,],[140,-3,-62,]),'TREND_PREDICTION':([104,105,154,],[141,-3,-62,]),'MODEL_PREDICT':([104,105,154,],[142,-3,-62,]),'CTE_FLOAT':([104,105,106,107,108,110,135,154,171,176,185,187,188,189,190,192,194,195,197,199,200,201,203,205,210,213,217,238,244,273,],[150,-3,150,150,150,150,150,-62,150,150,150,-118,-119,-120,-121,150,-125,-126,150,-130,-131,-132,150,-3,150,150,150,-136,150,150,]),'CTE_CHAR':([104,105,106,107,108,110,135,154,171,176,185,187,188,189,190,192,194,195,197,199,200,201,203,205,210,213,217,238,244,273,305,317,],[152,-3,152,152,152,152,152,-62,152,152,152,-118,-119,-120,-121,152,-125,-126,152,-130,-131,-132,152,-3,152,152,152,-136,152,152,312,322,]),'WHILE':([114,218,],[162,-55,]),'TO':([161,],[216,]),'ELSE':([218,239,],[-55,264,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_libraries':([4,51,],[5,63,]),'from_library':([4,51,],[6,6,]),'empty':([4,5,9,30,36,37,38,41,44,45,48,51,53,59,62,64,66,67,71,74,87,89,96,97,98,105,115,117,120,127,136,143,144,145,146,153,157,159,164,165,167,205,215,219,228,239,241,243,250,252,255,275,281,289,291,296,312,322,],[7,11,17,43,46,47,50,52,55,58,60,7,11,70,72,75,95,46,101,75,111,113,58,95,50,154,75,166,60,172,177,186,193,198,204,206,211,214,11,222,70,238,246,75,257,265,211,214,270,274,278,166,297,17,222,308,319,319,]),'program_vars':([5,53,164,],[9,64,219,]),'import_library':([6,],[12,]),'program_function':([9,289,],[15,301,]),'var_type':([10,66,97,],[18,94,94,]),'var_c_type':([10,66,97,],[19,19,19,]),'var_s_type':([10,66,97,],[20,20,20,]),'c_type':([10,66,97,],[21,21,21,]),'s_type':([10,65,66,97,221,],[22,92,22,22,253,]),'program_main':([15,],[29,]),'f_type':([16,],[31,]),'id_saver':([21,22,31,57,64,69,74,92,104,106,107,108,110,115,135,171,173,176,178,179,180,181,182,183,185,192,197,203,210,213,217,219,244,253,256,258,259,262,273,294,311,],[36,38,44,67,87,98,87,117,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,275,87,87,87,87,87,87,87,]),'end':([29,],[40,]),'main_id':([30,],[42,]),'add_c_var':([36,67,],[45,96,]),'var_s_array':([38,98,],[48,120,]),'func_creator':([44,],[54,]),'var_c_type2':([45,96,],[56,118,]),'add_s_var':([48,120,],[59,167,]),'var_s_dimesions':([49,99,],[61,121,]),'var_s_type2':([59,167,],[68,223,]),'inner_body':([64,74,115,219,],[73,103,163,252,]),'statement':([64,74,115,219,],[74,74,74,74,]),'assign':([64,74,115,219,],[76,76,76,76,]),'condition':([64,74,115,219,],[77,77,77,77,]),'print':([64,74,115,219,],[78,78,78,78,]),'cycle':([64,74,115,219,],[79,79,79,79,]),'call_function':([64,74,104,106,107,108,110,115,135,171,176,185,192,197,203,210,213,217,219,244,273,],[80,80,149,149,149,149,149,80,149,149,149,149,149,149,149,149,149,149,80,149,149,]),'variable':([64,74,104,106,107,108,110,115,135,171,173,176,178,179,180,181,182,183,185,192,197,203,210,213,217,219,244,256,258,259,262,273,294,311,],[81,81,122,122,122,122,122,81,122,122,225,122,228,229,230,231,232,233,122,122,122,122,122,122,122,81,122,279,280,281,283,122,304,316,]),'for':([64,74,115,219,],[84,84,84,84,]),'while':([64,74,115,219,],[85,85,85,85,]),'function_saver':([64,74,104,106,107,108,110,115,135,171,176,185,192,197,203,210,213,217,219,244,273,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'param':([65,],[91,]),'var_multiple':([66,97,],[93,119,]),'var_s_matrix':([71,],[100,]),'keep_assign':([81,],[104,]),'variable_array':([87,],[109,]),'body':([90,207,264,269,],[114,239,285,287,]),'specialf_assign':([104,],[123,]),'exp':([104,106,107,108,110,135,171,210,213,217,244,273,],[124,155,158,159,160,174,224,158,243,251,268,290,]),'special_function':([104,],[125,]),'read':([104,],[126,]),'t_exp':([104,106,107,108,110,135,171,176,210,213,217,244,273,],[127,127,127,127,127,127,127,227,127,127,127,127,127,]),'exploration':([104,],[128,]),'financial_state':([104,],[129,]),'dummi_regression':([104,],[130,]),'season_analysis':([104,],[131,]),'trend_prediction':([104,],[132,]),'model_predict':([104,],[133,]),'expression':([104,106,107,108,110,135,171,176,210,213,217,244,273,],[136,136,136,136,136,136,136,136,136,136,136,136,136,]),'m_exp':([104,106,107,108,110,135,171,176,185,192,210,213,217,244,273,],[143,143,143,143,143,143,143,143,234,235,143,143,143,143,143,]),'term':([104,106,107,108,110,135,171,176,185,192,197,210,213,217,244,273,],[144,144,144,144,144,144,144,144,144,144,236,144,144,144,144,144,]),'sub_factor':([104,106,107,108,110,135,171,176,185,192,197,203,210,213,217,244,273,],[145,145,145,145,145,145,145,145,145,145,145,237,145,145,145,145,145,]),'factor':([104,106,107,108,110,135,171,176,185,192,197,203,210,213,217,244,273,],[146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,]),'factor_exp':([104,106,107,108,110,135,171,176,185,192,197,203,210,213,217,244,273,],[147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,]),'factor_cte':([104,106,107,108,110,135,171,176,185,192,197,203,210,213,217,244,273,],[148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,]),'print_many':([107,],[156,]),'print_type':([107,210,],[157,241,]),'add_params':([117,275,],[165,291,]),'exp_or':([127,],[170,]),'t_exp_and':([136,],[175,]),'expression_comp':([143,],[184,]),'expression_comp_2':([143,],[185,]),'m_exp_sr':([144,],[191,]),'m_exp_sr_2':([144,],[192,]),'term_pc':([145,],[196,]),'term_pc_2':([145,],[197,]),'sub_factor_pc':([146,],[202,]),'sub_factor_pc_2':([146,],[203,]),'print_many2':([157,241,],[209,266,]),'exp_many':([159,243,],[212,267,]),'param2':([165,291,],[220,303,]),'variable_matrix':([215,],[245,]),'for_end':([216,],[248,]),'int_const_saver':([216,261,277,298,306,315,],[249,282,293,309,313,320,]),'explore_var':([228,],[255,]),'condition2':([239,],[263,]),'return':([252,],[272,]),'explor_cte':([255,],[276,]),'dr_array':([281,],[296,]),'dr_int':([296,],[307,]),'dr_array_mp':([312,322,],[318,325,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON program_libraries program_vars program_function program_main end','program',8,'p_program','parser.py',25),
  ('end -> END empty','end',2,'p_end','parser.py',29),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',33),
  ('id_saver -> ID empty','id_saver',2,'p_id_saver','parser.py',40),
  ('int_const_saver -> CTE_INT empty','int_const_saver',2,'p_int_const_saver','parser.py',48),
  ('program_libraries -> from_library import_library','program_libraries',2,'p_program_libraries','parser.py',55),
  ('program_libraries -> empty','program_libraries',1,'p_program_libraries','parser.py',56),
  ('from_library -> FROM ID','from_library',2,'p_from_library','parser.py',59),
  ('from_library -> empty','from_library',1,'p_from_library','parser.py',60),
  ('import_library -> IMPORT ID AS ID program_libraries','import_library',5,'p_import_library','parser.py',63),
  ('var_type -> var_c_type','var_type',1,'p_var_type','parser.py',68),
  ('var_type -> var_s_type','var_type',1,'p_var_type','parser.py',69),
  ('program_vars -> VAR var_type','program_vars',2,'p_program_vars','parser.py',72),
  ('program_vars -> empty','program_vars',1,'p_program_vars','parser.py',73),
  ('s_type -> INT','s_type',1,'p_s_type','parser.py',83),
  ('s_type -> FLOAT','s_type',1,'p_s_type','parser.py',84),
  ('s_type -> CHAR','s_type',1,'p_s_type','parser.py',85),
  ('c_type -> DATAFRAME','c_type',1,'p_c_type','parser.py',92),
  ('c_type -> DATE','c_type',1,'p_c_type','parser.py',93),
  ('var_multiple -> var_type','var_multiple',1,'p_var_multiple','parser.py',100),
  ('var_multiple -> empty','var_multiple',1,'p_var_multiple','parser.py',101),
  ('var_c_type -> c_type id_saver add_c_var var_c_type2 SEMICOLON var_multiple','var_c_type',6,'p_var_c_type','parser.py',104),
  ('var_c_type2 -> COMMA id_saver add_c_var var_c_type2','var_c_type2',4,'p_var_c_type2','parser.py',107),
  ('var_c_type2 -> empty','var_c_type2',1,'p_var_c_type2','parser.py',108),
  ('add_c_var -> empty','add_c_var',1,'p_add_c_var','parser.py',111),
  ('var_s_type -> s_type id_saver var_s_array add_s_var var_s_type2 SEMICOLON var_multiple','var_s_type',7,'p_var_s_type','parser.py',117),
  ('var_s_type2 -> COMMA id_saver var_s_array add_s_var var_s_type2','var_s_type2',5,'p_var_s_type2','parser.py',120),
  ('var_s_type2 -> empty','var_s_type2',1,'p_var_s_type2','parser.py',121),
  ('add_s_var -> empty','add_s_var',1,'p_add_s_var','parser.py',125),
  ('var_s_array -> LSQBRACKET var_s_dimesions RSQBRACKET var_s_matrix','var_s_array',4,'p_var_s_array','parser.py',133),
  ('var_s_array -> empty','var_s_array',1,'p_var_s_array','parser.py',134),
  ('var_s_matrix -> LSQBRACKET var_s_dimesions RSQBRACKET','var_s_matrix',3,'p_var_s_matrix','parser.py',137),
  ('var_s_matrix -> empty','var_s_matrix',1,'p_var_s_matrix','parser.py',138),
  ('var_s_dimesions -> CTE_INT empty','var_s_dimesions',2,'p_var_s_dimesions','parser.py',142),
  ('variable -> id_saver variable_array','variable',2,'p_variable','parser.py',159),
  ('variable_array -> LSQBRACKET exp RSQBRACKET variable_matrix','variable_array',4,'p_variable_array','parser.py',164),
  ('variable_array -> empty','variable_array',1,'p_variable_array','parser.py',165),
  ('variable_matrix -> LSQBRACKET exp RSQBRACKET','variable_matrix',3,'p_variable_matrix','parser.py',168),
  ('variable_matrix -> empty','variable_matrix',1,'p_variable_matrix','parser.py',169),
  ('program_function -> FUNCTION f_type id_saver func_creator LPAREN param RPAREN LBRACKET program_vars inner_body return RBRACKET program_function','program_function',13,'p_program_function','parser.py',175),
  ('program_function -> empty','program_function',1,'p_program_function','parser.py',176),
  ('f_type -> INT','f_type',1,'p_f_type','parser.py',179),
  ('f_type -> FLOAT','f_type',1,'p_f_type','parser.py',180),
  ('f_type -> CHAR','f_type',1,'p_f_type','parser.py',181),
  ('f_type -> VOID','f_type',1,'p_f_type','parser.py',182),
  ('func_creator -> empty','func_creator',1,'p_func_creator','parser.py',190),
  ('param -> s_type id_saver add_params param2','param',4,'p_param','parser.py',198),
  ('param2 -> COMMA s_type id_saver add_params param2','param2',5,'p_param2','parser.py',201),
  ('param2 -> empty','param2',1,'p_param2','parser.py',202),
  ('add_params -> empty','add_params',1,'p_add_params','parser.py',206),
  ('return -> RETURN exp SEMICOLON','return',3,'p_return','parser.py',213),
  ('return -> empty','return',1,'p_return','parser.py',214),
  ('program_main -> MAIN main_id LBRACKET program_vars inner_body RBRACKET','program_main',6,'p_program_main','parser.py',218),
  ('main_id -> empty','main_id',1,'p_main_id','parser.py',221),
  ('body -> LBRACKET inner_body RBRACKET','body',3,'p_body','parser.py',228),
  ('inner_body -> statement inner_body','inner_body',2,'p_inner_body','parser.py',232),
  ('inner_body -> empty','inner_body',1,'p_inner_body','parser.py',233),
  ('assign -> variable keep_assign specialf_assign SEMICOLON','assign',4,'p_assign','parser.py',238),
  ('specialf_assign -> exp','specialf_assign',1,'p_specialf_assign','parser.py',242),
  ('specialf_assign -> special_function','specialf_assign',1,'p_specialf_assign','parser.py',243),
  ('specialf_assign -> read','specialf_assign',1,'p_specialf_assign','parser.py',244),
  ('keep_assign -> ASSIGN empty','keep_assign',2,'p_keep_assign','parser.py',248),
  ('condition -> IF LPAREN exp RPAREN body condition2 SEMICOLON','condition',7,'p_condition','parser.py',253),
  ('condition2 -> ELSE body','condition2',2,'p_condition2','parser.py',256),
  ('condition2 -> empty','condition2',1,'p_condition2','parser.py',257),
  ('print -> PRINT LPAREN print_many RPAREN SEMICOLON','print',5,'p_print','parser.py',261),
  ('print_type -> exp','print_type',1,'p_print_type','parser.py',265),
  ('print_many -> print_type print_many2','print_many',2,'p_print_many','parser.py',268),
  ('print_many2 -> COMMA print_type print_many2','print_many2',3,'p_print_many2','parser.py',271),
  ('print_many2 -> empty','print_many2',1,'p_print_many2','parser.py',272),
  ('read -> READ LPAREN variable RPAREN','read',4,'p_read','parser.py',278),
  ('cycle -> for','cycle',1,'p_cycle','parser.py',282),
  ('cycle -> while','cycle',1,'p_cycle','parser.py',283),
  ('while -> DO body WHILE LPAREN exp RPAREN SEMICOLON','while',7,'p_while','parser.py',287),
  ('for -> FOR LPAREN ID TO for_end RPAREN body SEMICOLON','for',8,'p_for','parser.py',291),
  ('for_end -> int_const_saver','for_end',1,'p_for_end','parser.py',294),
  ('for_end -> ID','for_end',1,'p_for_end','parser.py',295),
  ('call_function -> function_saver LPAREN exp exp_many RPAREN','call_function',5,'p_call_function','parser.py',300),
  ('function_saver -> ID empty','function_saver',2,'p_function_saver','parser.py',305),
  ('exp_many -> COMMA exp exp_many','exp_many',3,'p_exp_many','parser.py',312),
  ('exp_many -> empty','exp_many',1,'p_exp_many','parser.py',313),
  ('statement -> assign','statement',1,'p_statement','parser.py',317),
  ('statement -> condition','statement',1,'p_statement','parser.py',318),
  ('statement -> print','statement',1,'p_statement','parser.py',319),
  ('statement -> cycle','statement',1,'p_statement','parser.py',320),
  ('statement -> call_function','statement',1,'p_statement','parser.py',321),
  ('special_function -> exploration','special_function',1,'p_special_function','parser.py',325),
  ('special_function -> financial_state','special_function',1,'p_special_function','parser.py',326),
  ('special_function -> dummi_regression','special_function',1,'p_special_function','parser.py',327),
  ('special_function -> season_analysis','special_function',1,'p_special_function','parser.py',328),
  ('special_function -> trend_prediction','special_function',1,'p_special_function','parser.py',329),
  ('special_function -> model_predict','special_function',1,'p_special_function','parser.py',330),
  ('exploration -> EXPLORATION LPAREN variable explore_var explor_cte RPAREN','exploration',6,'p_exploration','parser.py',336),
  ('explore_var -> COMMA variable','explore_var',2,'p_explore_var','parser.py',339),
  ('explore_var -> empty','explore_var',1,'p_explore_var','parser.py',340),
  ('explor_cte -> COMMA int_const_saver','explor_cte',2,'p_explor_cte','parser.py',343),
  ('explor_cte -> empty','explor_cte',1,'p_explor_cte','parser.py',344),
  ('financial_state -> FINANCIAL_STATE LPAREN variable COMMA variable COMMA variable COMMA variable RPAREN','financial_state',10,'p_financial_state','parser.py',348),
  ('season_analysis -> SEASON_ANALYSIS LPAREN variable RPAREN','season_analysis',4,'p_season_analysis','parser.py',352),
  ('trend_prediction -> TREND_PREDICTION LPAREN variable COMMA int_const_saver COMMA int_const_saver COMMA int_const_saver RPAREN','trend_prediction',10,'p_trend_prediction','parser.py',358),
  ('dummi_regression -> DUMMI_REGRESSION LPAREN variable COMMA variable dr_array dr_int RPAREN','dummi_regression',8,'p_dummi_regression','parser.py',362),
  ('dr_array -> COMMA LSQBRACKET CTE_CHAR dr_array_mp RSQBRACKET','dr_array',5,'p_dr_array','parser.py',365),
  ('dr_array -> empty','dr_array',1,'p_dr_array','parser.py',366),
  ('dr_array_mp -> COMMA CTE_CHAR dr_array_mp','dr_array_mp',3,'p_dr_array_mp','parser.py',369),
  ('dr_array_mp -> empty','dr_array_mp',1,'p_dr_array_mp','parser.py',370),
  ('dr_int -> COMMA int_const_saver','dr_int',2,'p_dr_int','parser.py',373),
  ('dr_int -> empty','dr_int',1,'p_dr_int','parser.py',374),
  ('model_predict -> MODEL_PREDICT LPAREN variable COMMA variable COMMA RPAREN','model_predict',7,'p_model_predict','parser.py',378),
  ('exp -> t_exp exp_or','exp',2,'p_exp','parser.py',383),
  ('exp_or -> OR exp','exp_or',2,'p_exp_or','parser.py',386),
  ('exp_or -> empty','exp_or',1,'p_exp_or','parser.py',387),
  ('t_exp -> expression t_exp_and','t_exp',2,'p_t_exp','parser.py',391),
  ('t_exp_and -> AND t_exp','t_exp_and',2,'p_t_exp_and','parser.py',394),
  ('t_exp_and -> empty','t_exp_and',1,'p_t_exp_and','parser.py',395),
  ('expression -> m_exp expression_comp','expression',2,'p_expression','parser.py',399),
  ('expression_comp -> expression_comp_2 m_exp','expression_comp',2,'p_expression_comp','parser.py',402),
  ('expression_comp -> empty','expression_comp',1,'p_expression_comp','parser.py',403),
  ('expression_comp_2 -> EQUAL','expression_comp_2',1,'p_expression_comp_2','parser.py',406),
  ('expression_comp_2 -> NOTEQUAL','expression_comp_2',1,'p_expression_comp_2','parser.py',407),
  ('expression_comp_2 -> LTHAN','expression_comp_2',1,'p_expression_comp_2','parser.py',408),
  ('expression_comp_2 -> GTHAN','expression_comp_2',1,'p_expression_comp_2','parser.py',409),
  ('m_exp -> term m_exp_sr','m_exp',2,'p_m_exp','parser.py',414),
  ('m_exp_sr -> m_exp_sr_2 m_exp','m_exp_sr',2,'p_m_exp_sr','parser.py',418),
  ('m_exp_sr -> empty','m_exp_sr',1,'p_m_exp_sr','parser.py',419),
  ('m_exp_sr_2 -> PLUS','m_exp_sr_2',1,'p_m_exp_sr_2','parser.py',422),
  ('m_exp_sr_2 -> MINUS','m_exp_sr_2',1,'p_m_exp_sr_2','parser.py',423),
  ('term -> sub_factor term_pc','term',2,'p_term','parser.py',429),
  ('term_pc -> term_pc_2 term','term_pc',2,'p_term_pc','parser.py',432),
  ('term_pc -> empty','term_pc',1,'p_term_pc','parser.py',433),
  ('term_pc_2 -> MULTIPLY','term_pc_2',1,'p_term_pc_2','parser.py',436),
  ('term_pc_2 -> DIVIDE','term_pc_2',1,'p_term_pc_2','parser.py',437),
  ('term_pc_2 -> MODULE','term_pc_2',1,'p_term_pc_2','parser.py',438),
  ('sub_factor -> factor sub_factor_pc','sub_factor',2,'p_sub_factor','parser.py',443),
  ('sub_factor_pc -> sub_factor_pc_2 sub_factor','sub_factor_pc',2,'p_sub_factor_pc','parser.py',446),
  ('sub_factor_pc -> empty','sub_factor_pc',1,'p_sub_factor_pc','parser.py',447),
  ('sub_factor_pc_2 -> POWER empty','sub_factor_pc_2',2,'p_sub_factor_pc_2','parser.py',450),
  ('factor -> factor_exp','factor',1,'p_factor','parser.py',456),
  ('factor -> factor_cte','factor',1,'p_factor','parser.py',457),
  ('factor -> variable','factor',1,'p_factor','parser.py',458),
  ('factor -> call_function','factor',1,'p_factor','parser.py',459),
  ('factor_exp -> LPAREN exp RPAREN','factor_exp',3,'p_factor_exp','parser.py',462),
  ('factor_cte -> CTE_FLOAT','factor_cte',1,'p_factor_cte','parser.py',465),
  ('factor_cte -> CTE_INT','factor_cte',1,'p_factor_cte','parser.py',466),
  ('factor_cte -> CTE_CHAR','factor_cte',1,'p_factor_cte','parser.py',467),
]
