
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS ASSIGN CHAR COLON COMMA CTE_CHAR CTE_FLOAT CTE_INT DATAFRAME DATE DIVIDE DO DUMMI_REGRESSION ELSE END EQUAL EXPLORATION FINANCIAL_STATE FLOAT FOR FROM FUNCTION GORE GTHAN ID IF IMPORT INT LBRACKET LORE LPAREN LSQBRACKET LTHAN MAIN MINUS MODEL_PREDICT MODULE MULTIPLY NOTEQUAL OR PLUS POWER PRINT PROGRAM RBRACKET READ RETURN RPAREN RSQBRACKET SEASON_ANALYSIS SEMICOLON TO TREND_PREDICTION VAR VOID WHILEprogram : PROGRAM ID goto_main program_libraries program_vars program_function program_main end goto_main : SEMICOLONend : END empty : id_saver : ID empty int_const_saver : CTE_INT \n                       | emptyrelease_exp : emptyresources : emptyprogram_libraries : from_library import_library \n                         | emptyfrom_library : FROM ID\n                    | emptyimport_library : IMPORT ID AS ID  program_librariesvar_type : var_c_type\n                | var_s_typeprogram_vars : VAR var_type  \n                    | emptys_type : INT \n              | FLOAT\n              | CHARc_type : DATAFRAME\n              | DATEvar_multiple : var_type\n                    | emptyvar_c_type : c_type id_saver add_c_var var_c_type2 SEMICOLON var_multiplevar_c_type2 : COMMA id_saver add_c_var var_c_type2\n                   | emptyadd_c_var : emptyvar_s_type : s_type id_saver var_s_array add_s_var var_s_type2 SEMICOLON var_multiplevar_s_type2 : COMMA id_saver var_s_array add_s_var var_s_type2\n                   | emptyadd_s_var : emptyvar_s_array : LSQBRACKET var_s_dimesions RSQBRACKET var_s_matrix \n                   | emptyvar_s_matrix : LSQBRACKET var_s_dimesions RSQBRACKET\n                    | emptyvar_s_dimesions : CTE_INT emptyvariable : id_saver variable_arrayvariable_array : LSQBRACKET exp RSQBRACKET variable_matrix\n                      | emptyvariable_matrix : LSQBRACKET exp RSQBRACKET\n                       | emptyprogram_function : FUNCTION resources f_type id_saver func_creator  LPAREN param RPAREN add_func_glob program_vars inner_body return end_function program_function\n                        | emptyf_type : INT \n              | FLOAT\n              | CHAR\n              | VOIDfunc_creator : emptyadd_func_glob : LBRACKETend_function : RBRACKETparam : s_type id_saver add_params param2\n             | emptyparam2 : COMMA s_type id_saver add_params param2\n              | emptyadd_params : emptyreturn : return_np exp return_quad SEMICOLON\n              | empty_path_returnreturn_np : RETURNreturn_quad : emptyempty_path_return : emptyprogram_main :  main_id LBRACKET program_vars inner_body RBRACKETmain_id : MAIN resources body : LBRACKET inner_body RBRACKETinner_body :  statement inner_body\n                  | emptyassign : variable keep_assign specialf_assign end_assignspecialf_assign : exp\n                       | special_function\n                       | readkeep_assign : ASSIGN emptyend_assign : SEMICOLON emptycondition : IF LPAREN exp RPAREN condition_GOTOF body condition2 SEMICOLON end_conditioncondition2 : ELSE condition_GOTO body\n                 | emptycondition_GOTOF : emptycondition_GOTO : emptyend_condition : emptyprint : PRINT LPAREN print_many RPAREN SEMICOLON end_print_npprint_type : expprint_many : print_type print_many2 print_many2 : COMMA print_many_np print_many\n                   | emptyprint_many_np : emptyend_print_np : emptyread : READ LPAREN variable RPAREN read_npread_np : emptycycle : for\n             | whilewhile : DO seed body WHILE LPAREN exp RPAREN SEMICOLON gotoVseed : emptygotoV : emptyfor : FOR LPAREN for_control keep_assign exp for_np1 for_end body for_np2for_control : id_saverfor_np1 :  TOfor_end : int_const_saver RPARENfor_np2 : SEMICOLONcall_function : function_saver function_flag call_params check_not_void check_not_void : RPARENcall_void_function : function_saver function_flag call_params verify_params check_voidverify_params : RPARENcheck_void : SEMICOLONfunction_saver : ID emptyfunction_flag : LPARENcall_params : check_param exp_many\n                   | emptycheck_param : expexp_many : COMMA check_param exp_many\n                | emptystatement : assign\n                 | condition\n                 | print\n                 | cycle\n                 | call_void_functionspecial_function : exploration\n                        | financial_state\n                        | dummi_regression\n                        | season_analysis\n                        | trend_prediction\n                        | model_predictexploration : EXPLORATION LPAREN variable explore_var explor_cte RPARENexplore_var : COMMA variable\n                   | emptyexplor_cte : COMMA int_const_saver\n                  | emptyfinancial_state : FINANCIAL_STATE LPAREN variable COMMA variable COMMA variable COMMA variable RPARENseason_analysis : SEASON_ANALYSIS LPAREN variable RPARENtrend_prediction : TREND_PREDICTION LPAREN variable COMMA int_const_saver COMMA int_const_saver COMMA int_const_saver RPARENdummi_regression : DUMMI_REGRESSION LPAREN variable COMMA variable dr_array dr_int RPARENdr_array : COMMA LSQBRACKET CTE_CHAR dr_array_mp RSQBRACKET\n                | emptydr_array_mp : COMMA CTE_CHAR dr_array_mp\n                   | emptydr_int : COMMA int_const_saver\n              | emptymodel_predict : MODEL_PREDICT LPAREN variable COMMA variable COMMA RPARENexp : t_exp release_exp exp_orexp_or : exp_keep_or  exp\n              | emptyexp_keep_or : ORt_exp : expression release_exp t_exp_andt_exp_and : keep_and t_exp\n                 | emptykeep_and : AND expression : m_exp release_exp expression_compexpression_comp :  expression_comp_2  m_exp release_exp\n                       |  emptyexpression_comp_2 : GTHAN\n                         | EQUAL\n                         | NOTEQUAL\n                         | LTHAN\n                         | GORE\n                         | LORE\n                         m_exp : term release_exp m_exp_srm_exp_sr : m_exp_sr_2 m_exp\n                | emptym_exp_sr_2 : PLUS\n                  | MINUSterm : sub_factor release_exp term_pcterm_pc : term_pc_2 term\n               | emptyterm_pc_2 : MULTIPLY\n                 | DIVIDE\n                 | MODULEsub_factor : factor release_exp sub_factor_pcsub_factor_pc : sub_factor_pc_2 sub_factor\n                     | emptysub_factor_pc_2 : POWER emptyfactor : factor_exp\n              | factor_cte\n              | variable\n              | call_functionfactor_exp : false_button exp release_false_buttonfalse_button : LPARENrelease_false_button : RPARENfactor_cte : CTE_FLOAT\n                  | CTE_INT\n                  | CTE_CHAR'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,39,40,],[0,-1,-3,]),'ID':([2,9,12,14,19,20,21,22,23,24,25,26,27,28,38,41,43,44,45,46,47,55,58,66,68,69,70,71,72,76,77,85,88,94,95,96,97,98,99,101,103,108,109,110,112,130,145,151,164,166,169,172,173,176,178,179,180,181,182,183,189,194,199,202,209,211,213,216,218,226,228,229,230,231,232,233,235,237,238,240,242,243,244,246,248,254,255,256,257,258,260,264,266,267,275,277,278,281,286,290,291,298,323,326,332,337,339,341,351,352,354,355,356,357,362,],[3,15,-18,29,-17,-15,-16,36,36,-22,-23,-19,-20,-21,54,-4,36,-46,-47,-48,-49,82,36,82,-111,-112,-113,-114,-115,-89,-90,-4,36,150,-4,150,150,150,-105,150,36,-26,-24,-25,-4,-175,150,-72,82,36,-30,-68,-4,36,36,36,36,36,36,36,150,-4,150,150,-73,150,-141,150,-145,150,-149,-150,-151,-152,-153,-154,150,-158,-159,150,-163,-164,-165,150,-4,-4,150,-85,-101,-103,150,150,-4,-51,36,36,36,36,-169,-80,-86,82,36,36,-4,-4,150,-60,-74,-79,-94,-98,-91,-93,36,]),'SEMICOLON':([3,35,36,37,48,49,50,51,53,57,59,60,61,79,86,87,89,90,100,102,111,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,131,138,139,140,141,142,143,144,146,147,148,150,168,170,174,175,177,184,185,186,187,190,192,196,197,201,207,208,210,212,215,217,225,227,234,236,239,241,245,247,249,250,261,262,265,270,271,272,273,279,282,283,284,285,287,288,289,302,303,314,315,317,318,321,324,335,350,353,360,365,368,369,377,380,],[5,-4,-4,-4,-4,-29,-5,-4,-35,85,-28,-4,-33,-4,-4,112,-32,-4,-39,-41,-4,-4,-34,-37,-172,173,-69,-70,-71,-4,-116,-117,-118,-119,-120,-121,-4,-4,-4,-4,-4,-170,-171,-173,-177,-178,-179,-4,-27,-4,-4,-8,-4,-4,-4,-4,-4,-5,254,258,-102,-4,-4,-36,-138,-140,-142,-144,-146,-148,-155,-157,-160,-162,-166,-168,-174,-176,-40,-43,-65,-31,-139,-4,-143,-128,-4,-156,-161,-167,-99,-100,-4,-87,-88,-147,332,-76,-42,337,-122,355,-137,-75,-4,-130,376,-61,-127,-129,]),'FROM':([4,5,54,],[9,-2,9,]),'VAR':([4,5,6,8,13,41,54,64,266,267,],[-4,-2,11,-11,-10,11,-4,-14,11,-51,]),'FUNCTION':([4,5,6,8,10,12,13,19,20,21,54,64,85,108,109,110,112,169,358,359,],[-4,-2,-4,-11,17,-18,-10,-17,-15,-16,-4,-14,-4,-26,-24,-25,-4,-30,17,-52,]),'MAIN':([4,5,6,8,10,12,13,16,18,19,20,21,54,64,85,108,109,110,112,169,358,359,367,],[-4,-2,-4,-11,-4,-18,-10,32,-45,-17,-15,-16,-4,-14,-4,-26,-24,-25,-4,-30,-4,-52,-44,]),'IMPORT':([4,5,7,8,15,54,],[-4,-2,14,-13,-12,-4,]),'DATAFRAME':([11,85,112,],[24,24,24,]),'DATE':([11,85,112,],[25,25,25,]),'INT':([11,17,33,34,85,107,112,300,],[26,-4,44,-9,26,26,26,26,]),'FLOAT':([11,17,33,34,85,107,112,300,],[27,-4,45,-9,27,27,27,27,]),'CHAR':([11,17,33,34,85,107,112,300,],[28,-4,46,-9,28,28,28,28,]),'IF':([12,19,20,21,41,55,66,68,69,70,71,72,76,77,85,108,109,110,112,164,169,172,173,209,254,257,258,266,267,290,291,298,332,337,351,352,354,355,356,357,],[-18,-17,-15,-16,-4,74,74,-111,-112,-113,-114,-115,-89,-90,-4,-26,-24,-25,-4,74,-30,-68,-4,-73,-4,-101,-103,-4,-51,-80,-86,74,-4,-4,-74,-79,-94,-98,-91,-93,]),'PRINT':([12,19,20,21,41,55,66,68,69,70,71,72,76,77,85,108,109,110,112,164,169,172,173,209,254,257,258,266,267,290,291,298,332,337,351,352,354,355,356,357,],[-18,-17,-15,-16,-4,75,75,-111,-112,-113,-114,-115,-89,-90,-4,-26,-24,-25,-4,75,-30,-68,-4,-73,-4,-101,-103,-4,-51,-80,-86,75,-4,-4,-74,-79,-94,-98,-91,-93,]),'FOR':([12,19,20,21,41,55,66,68,69,70,71,72,76,77,85,108,109,110,112,164,169,172,173,209,254,257,258,266,267,290,291,298,332,337,351,352,354,355,356,357,],[-18,-17,-15,-16,-4,80,80,-111,-112,-113,-114,-115,-89,-90,-4,-26,-24,-25,-4,80,-30,-68,-4,-73,-4,-101,-103,-4,-51,-80,-86,80,-4,-4,-74,-79,-94,-98,-91,-93,]),'DO':([12,19,20,21,41,55,66,68,69,70,71,72,76,77,85,108,109,110,112,164,169,172,173,209,254,257,258,266,267,290,291,298,332,337,351,352,354,355,356,357,],[-18,-17,-15,-16,-4,81,81,-111,-112,-113,-114,-115,-89,-90,-4,-26,-24,-25,-4,81,-30,-68,-4,-73,-4,-101,-103,-4,-51,-80,-86,81,-4,-4,-74,-79,-94,-98,-91,-93,]),'RBRACKET':([12,19,20,21,41,55,65,66,67,68,69,70,71,72,76,77,85,93,108,109,110,112,164,169,172,173,204,209,254,257,258,266,267,290,291,298,322,332,337,338,340,342,351,352,354,355,356,357,376,],[-18,-17,-15,-16,-4,-4,92,-4,-67,-111,-112,-113,-114,-115,-89,-90,-4,-66,-26,-24,-25,-4,-4,-30,-68,-4,265,-73,-4,-101,-103,-4,-51,-80,-86,-4,-4,-4,-4,359,-59,-62,-74,-79,-94,-98,-91,-93,-58,]),'RETURN':([12,19,20,21,66,67,68,69,70,71,72,76,77,85,93,108,109,110,112,169,172,173,209,254,257,258,266,267,290,291,298,322,332,337,351,352,354,355,356,357,],[-18,-17,-15,-16,-4,-67,-111,-112,-113,-114,-115,-89,-90,-4,-66,-26,-24,-25,-4,-30,-68,-4,-73,-4,-101,-103,-4,-51,-80,-86,-4,341,-4,-4,-74,-79,-94,-98,-91,-93,]),'VOID':([17,33,34,],[-4,47,-9,]),'AS':([29,],[38,]),'END':([30,92,],[40,-63,]),'LBRACKET':([31,32,34,42,81,104,105,191,205,252,253,316,319,333,334,336,],[41,-4,-9,-64,-4,164,-92,-4,267,164,-77,-4,164,164,-78,-97,]),'COMMA':([35,36,37,48,49,50,51,53,60,61,79,86,90,100,102,111,113,115,116,117,122,131,138,139,140,141,142,143,144,146,147,148,150,154,155,157,159,170,174,175,177,184,185,186,187,190,201,206,207,208,210,212,215,217,219,220,221,223,224,225,227,234,236,239,241,245,247,249,250,259,261,262,268,269,271,273,274,276,280,282,283,284,285,287,288,307,308,309,310,311,312,313,314,318,328,329,330,343,344,349,361,363,378,379,],[-4,-4,-4,58,-29,-5,-4,-35,88,-33,-4,-4,-4,-39,-41,58,-4,-34,-37,-172,-4,-4,-4,-4,-4,-4,-170,-171,-173,-177,-178,-179,-4,194,-81,199,-108,-4,-4,-8,-4,-4,-4,-4,-4,-5,-4,-4,88,-36,-138,-140,-142,-144,275,277,278,280,281,-146,-148,-155,-157,-160,-162,-166,-168,-174,-176,199,-40,-43,300,-57,-139,-143,305,-124,-4,-4,-156,-161,-167,-99,-100,-123,326,327,330,-6,-7,331,-147,-42,346,-132,-4,-4,362,366,300,372,372,-131,]),'LSQBRACKET':([36,37,50,79,82,90,106,113,150,190,201,327,],[-4,52,-5,101,-4,114,-5,52,-4,-5,260,345,]),'LPAREN':([36,50,56,74,75,78,80,82,83,84,94,95,96,97,98,99,101,106,129,130,132,133,134,135,136,137,145,149,150,151,189,190,194,199,202,203,211,213,216,218,226,228,229,230,231,232,233,235,237,238,240,242,243,244,246,248,255,256,260,264,286,339,341,],[-4,-5,-4,96,97,99,103,-4,107,-50,130,-4,130,130,130,-105,130,-104,176,-175,178,179,180,181,182,183,130,99,-4,-72,130,-104,-4,130,130,264,130,-141,130,-145,130,-149,-150,-151,-152,-153,-154,130,-158,-159,130,-163,-164,-165,130,-4,130,-85,130,130,-169,130,-60,]),'ASSIGN':([36,50,73,79,82,100,102,106,161,162,201,261,262,318,],[-4,-5,95,-4,-4,-39,-41,-5,95,-95,-4,-40,-43,-42,]),'RPAREN':([36,50,79,98,99,100,102,107,117,122,131,138,139,140,141,142,143,144,146,147,148,150,152,153,154,155,156,157,158,159,165,167,174,175,177,184,185,186,187,188,189,190,193,195,198,200,201,206,210,212,214,215,217,219,222,225,227,234,236,239,241,245,247,249,250,251,259,261,262,268,269,271,273,274,276,282,283,284,285,287,288,292,293,295,296,297,299,301,304,305,306,307,309,311,312,314,318,320,325,328,329,331,343,346,347,348,361,364,366,370,371,375,379,],[-4,-5,-4,-4,-105,-39,-41,-4,-172,-4,-4,-4,-4,-4,-4,-170,-171,-173,-177,-178,-179,-4,191,192,-4,-81,197,-4,-107,-108,205,-54,-4,-8,-4,-4,-4,-4,-4,250,-4,-5,-82,-84,-106,-110,-4,-4,-138,-140,272,-142,-144,-4,279,-146,-148,-155,-157,-160,-162,-166,-168,-174,-176,288,-4,-40,-43,-4,-57,-139,-143,-4,-124,-4,-156,-161,-167,-99,-100,-83,-109,-4,-96,321,-53,-56,324,-4,-126,-123,-4,-6,-7,-147,-42,336,-125,-4,-132,350,-4,-4,365,-136,-4,-135,-4,-55,377,380,-131,]),'CTE_INT':([52,94,95,96,97,98,99,101,114,130,145,151,189,194,199,202,211,213,216,218,226,228,229,230,231,232,233,235,237,238,240,242,243,244,246,248,255,256,260,264,280,286,295,296,305,330,339,341,346,366,],[63,147,-4,147,147,147,-105,147,63,-175,147,-72,147,-4,147,147,147,-141,147,-145,147,-149,-150,-151,-152,-153,-154,147,-158,-159,147,-163,-164,-165,147,-4,147,-85,147,147,311,-169,311,-96,311,311,147,-60,311,311,]),'RSQBRACKET':([62,63,79,91,100,102,117,122,131,138,139,140,141,142,143,144,146,147,148,150,160,171,174,175,177,184,185,186,187,190,201,210,212,215,217,225,227,234,236,239,241,245,247,249,250,261,262,271,273,282,283,284,285,287,288,294,314,318,363,373,374,378,381,],[90,-4,-4,-38,-39,-41,-172,-4,-4,-4,-4,-4,-4,-170,-171,-173,-177,-178,-179,-4,201,208,-4,-8,-4,-4,-4,-4,-4,-5,-4,-138,-140,-142,-144,-146,-148,-155,-157,-160,-162,-166,-168,-174,-176,-40,-43,-139,-143,-4,-156,-161,-167,-99,-100,318,-147,-42,-4,379,-134,-4,-133,]),'POWER':([79,100,102,117,141,142,143,144,146,147,148,150,175,187,190,201,249,250,261,262,287,288,318,],[-4,-39,-41,-172,-4,-170,-171,-173,-177,-178,-179,-4,-8,248,-5,-4,-174,-176,-40,-43,-99,-100,-42,]),'MULTIPLY':([79,100,102,117,140,141,142,143,144,146,147,148,150,175,186,187,190,201,245,247,249,250,261,262,285,287,288,318,],[-4,-39,-41,-172,-4,-4,-170,-171,-173,-177,-178,-179,-4,-8,242,-4,-5,-4,-166,-168,-174,-176,-40,-43,-167,-99,-100,-42,]),'DIVIDE':([79,100,102,117,140,141,142,143,144,146,147,148,150,175,186,187,190,201,245,247,249,250,261,262,285,287,288,318,],[-4,-39,-41,-172,-4,-4,-170,-171,-173,-177,-178,-179,-4,-8,243,-4,-5,-4,-166,-168,-174,-176,-40,-43,-167,-99,-100,-42,]),'MODULE':([79,100,102,117,140,141,142,143,144,146,147,148,150,175,186,187,190,201,245,247,249,250,261,262,285,287,288,318,],[-4,-39,-41,-172,-4,-4,-170,-171,-173,-177,-178,-179,-4,-8,244,-4,-5,-4,-166,-168,-174,-176,-40,-43,-167,-99,-100,-42,]),'PLUS':([79,100,102,117,139,140,141,142,143,144,146,147,148,150,175,185,186,187,190,201,239,241,245,247,249,250,261,262,284,285,287,288,318,],[-4,-39,-41,-172,-4,-4,-4,-170,-171,-173,-177,-178,-179,-4,-8,237,-4,-4,-5,-4,-160,-162,-166,-168,-174,-176,-40,-43,-161,-167,-99,-100,-42,]),'MINUS':([79,100,102,117,139,140,141,142,143,144,146,147,148,150,175,185,186,187,190,201,239,241,245,247,249,250,261,262,284,285,287,288,318,],[-4,-39,-41,-172,-4,-4,-4,-170,-171,-173,-177,-178,-179,-4,-8,238,-4,-4,-5,-4,-160,-162,-166,-168,-174,-176,-40,-43,-161,-167,-99,-100,-42,]),'GTHAN':([79,100,102,117,138,139,140,141,142,143,144,146,147,148,150,175,184,185,186,187,190,201,234,236,239,241,245,247,249,250,261,262,283,284,285,287,288,318,],[-4,-39,-41,-172,-4,-4,-4,-4,-170,-171,-173,-177,-178,-179,-4,-8,228,-4,-4,-4,-5,-4,-155,-157,-160,-162,-166,-168,-174,-176,-40,-43,-156,-161,-167,-99,-100,-42,]),'EQUAL':([79,100,102,117,138,139,140,141,142,143,144,146,147,148,150,175,184,185,186,187,190,201,234,236,239,241,245,247,249,250,261,262,283,284,285,287,288,318,],[-4,-39,-41,-172,-4,-4,-4,-4,-170,-171,-173,-177,-178,-179,-4,-8,229,-4,-4,-4,-5,-4,-155,-157,-160,-162,-166,-168,-174,-176,-40,-43,-156,-161,-167,-99,-100,-42,]),'NOTEQUAL':([79,100,102,117,138,139,140,141,142,143,144,146,147,148,150,175,184,185,186,187,190,201,234,236,239,241,245,247,249,250,261,262,283,284,285,287,288,318,],[-4,-39,-41,-172,-4,-4,-4,-4,-170,-171,-173,-177,-178,-179,-4,-8,230,-4,-4,-4,-5,-4,-155,-157,-160,-162,-166,-168,-174,-176,-40,-43,-156,-161,-167,-99,-100,-42,]),'LTHAN':([79,100,102,117,138,139,140,141,142,143,144,146,147,148,150,175,184,185,186,187,190,201,234,236,239,241,245,247,249,250,261,262,283,284,285,287,288,318,],[-4,-39,-41,-172,-4,-4,-4,-4,-170,-171,-173,-177,-178,-179,-4,-8,231,-4,-4,-4,-5,-4,-155,-157,-160,-162,-166,-168,-174,-176,-40,-43,-156,-161,-167,-99,-100,-42,]),'GORE':([79,100,102,117,138,139,140,141,142,143,144,146,147,148,150,175,184,185,186,187,190,201,234,236,239,241,245,247,249,250,261,262,283,284,285,287,288,318,],[-4,-39,-41,-172,-4,-4,-4,-4,-170,-171,-173,-177,-178,-179,-4,-8,232,-4,-4,-4,-5,-4,-155,-157,-160,-162,-166,-168,-174,-176,-40,-43,-156,-161,-167,-99,-100,-42,]),'LORE':([79,100,102,117,138,139,140,141,142,143,144,146,147,148,150,175,184,185,186,187,190,201,234,236,239,241,245,247,249,250,261,262,283,284,285,287,288,318,],[-4,-39,-41,-172,-4,-4,-4,-4,-170,-171,-173,-177,-178,-179,-4,-8,233,-4,-4,-4,-5,-4,-155,-157,-160,-162,-166,-168,-174,-176,-40,-43,-156,-161,-167,-99,-100,-42,]),'AND':([79,100,102,117,131,138,139,140,141,142,143,144,146,147,148,150,175,177,184,185,186,187,190,201,225,227,234,236,239,241,245,247,249,250,261,262,282,283,284,285,287,288,314,318,],[-4,-39,-41,-172,-4,-4,-4,-4,-4,-170,-171,-173,-177,-178,-179,-4,-8,218,-4,-4,-4,-4,-5,-4,-146,-148,-155,-157,-160,-162,-166,-168,-174,-176,-40,-43,-4,-156,-161,-167,-99,-100,-147,-42,]),'OR':([79,100,102,117,122,131,138,139,140,141,142,143,144,146,147,148,150,174,175,177,184,185,186,187,190,201,215,217,225,227,234,236,239,241,245,247,249,250,261,262,273,282,283,284,285,287,288,314,318,],[-4,-39,-41,-172,-4,-4,-4,-4,-4,-4,-170,-171,-173,-177,-178,-179,-4,213,-8,-4,-4,-4,-4,-4,-5,-4,-142,-144,-146,-148,-155,-157,-160,-162,-166,-168,-174,-176,-40,-43,-143,-4,-156,-161,-167,-99,-100,-147,-42,]),'TO':([79,100,102,117,122,131,138,139,140,141,142,143,144,146,147,148,150,174,175,177,184,185,186,187,190,201,210,212,215,217,225,227,234,236,239,241,245,247,249,250,261,262,263,271,273,282,283,284,285,287,288,314,318,],[-4,-39,-41,-172,-4,-4,-4,-4,-4,-4,-170,-171,-173,-177,-178,-179,-4,-4,-8,-4,-4,-4,-4,-4,-5,-4,-138,-140,-142,-144,-146,-148,-155,-157,-160,-162,-166,-168,-174,-176,-40,-43,296,-139,-143,-4,-156,-161,-167,-99,-100,-147,-42,]),'READ':([94,95,151,],[129,-4,-72,]),'EXPLORATION':([94,95,151,],[132,-4,-72,]),'FINANCIAL_STATE':([94,95,151,],[133,-4,-72,]),'DUMMI_REGRESSION':([94,95,151,],[134,-4,-72,]),'SEASON_ANALYSIS':([94,95,151,],[135,-4,-72,]),'TREND_PREDICTION':([94,95,151,],[136,-4,-72,]),'MODEL_PREDICT':([94,95,151,],[137,-4,-72,]),'CTE_FLOAT':([94,95,96,97,98,99,101,130,145,151,189,194,199,202,211,213,216,218,226,228,229,230,231,232,233,235,237,238,240,242,243,244,246,248,255,256,260,264,286,339,341,],[146,-4,146,146,146,-105,146,-175,146,-72,146,-4,146,146,146,-141,146,-145,146,-149,-150,-151,-152,-153,-154,146,-158,-159,146,-163,-164,-165,146,-4,146,-85,146,146,-169,146,-60,]),'CTE_CHAR':([94,95,96,97,98,99,101,130,145,151,189,194,199,202,211,213,216,218,226,228,229,230,231,232,233,235,237,238,240,242,243,244,246,248,255,256,260,264,286,339,341,345,372,],[148,-4,148,148,148,-105,148,-175,148,-72,148,-4,148,148,148,-141,148,-145,148,-149,-150,-151,-152,-153,-154,148,-158,-159,148,-163,-164,-165,148,-4,148,-85,148,148,-169,148,-60,363,378,]),'WHILE':([163,265,],[203,-65,]),'ELSE':([265,289,],[-65,316,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'goto_main':([3,],[4,]),'program_libraries':([4,54,],[6,64,]),'from_library':([4,54,],[7,7,]),'empty':([4,6,10,17,32,35,36,37,41,48,51,54,55,56,60,63,66,79,81,82,85,86,90,95,98,107,111,112,113,122,131,138,139,140,141,150,154,157,164,170,173,174,177,184,185,186,187,189,191,194,201,206,207,219,248,254,259,266,268,272,274,280,282,289,295,298,305,309,316,322,328,330,332,337,343,346,358,360,361,363,366,378,],[8,12,18,34,34,49,50,53,12,59,61,8,67,84,89,91,67,102,105,106,110,49,116,151,158,167,59,110,53,175,175,175,175,175,175,190,195,200,67,61,209,212,217,227,236,241,247,158,253,256,262,269,89,276,286,291,200,12,301,303,306,312,175,317,312,67,312,329,334,342,348,312,352,357,269,312,18,369,301,374,312,374,]),'program_vars':([6,41,266,],[10,55,298,]),'import_library':([7,],[13,]),'program_function':([10,358,],[16,367,]),'var_type':([11,85,112,],[19,109,109,]),'var_c_type':([11,85,112,],[20,20,20,]),'var_s_type':([11,85,112,],[21,21,21,]),'c_type':([11,85,112,],[22,22,22,]),'s_type':([11,85,107,112,300,],[23,23,166,23,323,]),'program_main':([16,],[30,]),'main_id':([16,],[31,]),'resources':([17,32,],[33,42,]),'id_saver':([22,23,43,55,58,66,88,94,96,97,98,101,103,145,164,166,176,178,179,180,181,182,183,189,199,202,211,216,226,235,240,246,255,260,264,275,277,278,281,298,323,326,339,362,],[35,37,56,79,86,79,113,79,79,79,79,79,162,79,79,206,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,343,79,79,79,]),'end':([30,],[39,]),'f_type':([33,],[43,]),'add_c_var':([35,86,],[48,111,]),'var_s_array':([37,113,],[51,170,]),'var_c_type2':([48,111,],[57,168,]),'add_s_var':([51,170,],[60,207,]),'var_s_dimesions':([52,114,],[62,171,]),'inner_body':([55,66,164,298,],[65,93,204,322,]),'statement':([55,66,164,298,],[66,66,66,66,]),'assign':([55,66,164,298,],[68,68,68,68,]),'condition':([55,66,164,298,],[69,69,69,69,]),'print':([55,66,164,298,],[70,70,70,70,]),'cycle':([55,66,164,298,],[71,71,71,71,]),'call_void_function':([55,66,164,298,],[72,72,72,72,]),'variable':([55,66,94,96,97,98,101,145,164,176,178,179,180,181,182,183,189,199,202,211,216,226,235,240,246,255,260,264,275,277,278,281,298,326,339,362,],[73,73,117,117,117,117,117,117,73,214,219,220,221,222,223,224,117,117,117,117,117,117,117,117,117,117,117,117,307,308,309,313,73,344,117,371,]),'for':([55,66,164,298,],[76,76,76,76,]),'while':([55,66,164,298,],[77,77,77,77,]),'function_saver':([55,66,94,96,97,98,101,145,164,189,199,202,211,216,226,235,240,246,255,260,264,298,339,],[78,78,149,149,149,149,149,149,78,149,149,149,149,149,149,149,149,149,149,149,149,78,149,]),'func_creator':([56,],[83,]),'var_s_type2':([60,207,],[87,270,]),'keep_assign':([73,161,],[94,202,]),'function_flag':([78,149,],[98,189,]),'variable_array':([79,],[100,]),'seed':([81,],[104,]),'var_multiple':([85,112,],[108,169,]),'var_s_matrix':([90,],[115,]),'specialf_assign':([94,],[118,]),'exp':([94,96,97,98,101,145,189,199,202,211,255,260,264,339,],[119,152,155,159,160,188,159,159,263,271,155,294,297,360,]),'special_function':([94,],[120,]),'read':([94,],[121,]),'t_exp':([94,96,97,98,101,145,189,199,202,211,216,255,260,264,339,],[122,122,122,122,122,122,122,122,122,122,273,122,122,122,122,]),'exploration':([94,],[123,]),'financial_state':([94,],[124,]),'dummi_regression':([94,],[125,]),'season_analysis':([94,],[126,]),'trend_prediction':([94,],[127,]),'model_predict':([94,],[128,]),'expression':([94,96,97,98,101,145,189,199,202,211,216,255,260,264,339,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'m_exp':([94,96,97,98,101,145,189,199,202,211,216,226,235,255,260,264,339,],[138,138,138,138,138,138,138,138,138,138,138,282,283,138,138,138,138,]),'term':([94,96,97,98,101,145,189,199,202,211,216,226,235,240,255,260,264,339,],[139,139,139,139,139,139,139,139,139,139,139,139,139,284,139,139,139,139,]),'sub_factor':([94,96,97,98,101,145,189,199,202,211,216,226,235,240,246,255,260,264,339,],[140,140,140,140,140,140,140,140,140,140,140,140,140,140,285,140,140,140,140,]),'factor':([94,96,97,98,101,145,189,199,202,211,216,226,235,240,246,255,260,264,339,],[141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,]),'factor_exp':([94,96,97,98,101,145,189,199,202,211,216,226,235,240,246,255,260,264,339,],[142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,]),'factor_cte':([94,96,97,98,101,145,189,199,202,211,216,226,235,240,246,255,260,264,339,],[143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,]),'call_function':([94,96,97,98,101,145,189,199,202,211,216,226,235,240,246,255,260,264,339,],[144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,]),'false_button':([94,96,97,98,101,145,189,199,202,211,216,226,235,240,246,255,260,264,339,],[145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,]),'print_many':([97,255,],[153,292,]),'print_type':([97,255,],[154,154,]),'call_params':([98,189,],[156,251,]),'check_param':([98,189,199,],[157,157,259,]),'for_control':([103,],[161,]),'body':([104,252,319,333,],[163,289,335,353,]),'param':([107,],[165,]),'end_assign':([118,],[172,]),'release_exp':([122,131,138,139,140,141,282,],[174,177,184,185,186,187,314,]),'print_many2':([154,],[193,]),'verify_params':([156,],[196,]),'exp_many':([157,259,],[198,293,]),'exp_or':([174,],[210,]),'exp_keep_or':([174,],[211,]),'t_exp_and':([177,],[215,]),'keep_and':([177,],[216,]),'expression_comp':([184,],[225,]),'expression_comp_2':([184,],[226,]),'m_exp_sr':([185,],[234,]),'m_exp_sr_2':([185,],[235,]),'term_pc':([186,],[239,]),'term_pc_2':([186,],[240,]),'sub_factor_pc':([187,],[245,]),'sub_factor_pc_2':([187,],[246,]),'release_false_button':([188,],[249,]),'condition_GOTOF':([191,],[252,]),'print_many_np':([194,],[255,]),'check_void':([196,],[257,]),'variable_matrix':([201,],[261,]),'add_func_glob':([205,],[266,]),'add_params':([206,343,],[268,361,]),'explore_var':([219,],[274,]),'check_not_void':([251,],[287,]),'end_print_np':([254,],[290,]),'for_np1':([263,],[295,]),'param2':([268,361,],[299,370,]),'read_np':([272,],[302,]),'explor_cte':([274,],[304,]),'int_const_saver':([280,295,305,330,346,366,],[310,320,325,349,364,375,]),'condition2':([289,],[315,]),'for_end':([295,],[319,]),'dr_array':([309,],[328,]),'condition_GOTO':([316,],[333,]),'return':([322,],[338,]),'return_np':([322,],[339,]),'empty_path_return':([322,],[340,]),'dr_int':([328,],[347,]),'end_condition':([332,],[351,]),'for_np2':([335,],[354,]),'gotoV':([337,],[356,]),'end_function':([338,],[358,]),'return_quad':([360,],[368,]),'dr_array_mp':([363,378,],[373,381,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID goto_main program_libraries program_vars program_function program_main end','program',8,'p_program','parser.py',36),
  ('goto_main -> SEMICOLON','goto_main',1,'p_goto_main','parser.py',40),
  ('end -> END','end',1,'p_end','parser.py',44),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',56),
  ('id_saver -> ID empty','id_saver',2,'p_id_saver','parser.py',63),
  ('int_const_saver -> CTE_INT','int_const_saver',1,'p_int_const_saver','parser.py',71),
  ('int_const_saver -> empty','int_const_saver',1,'p_int_const_saver','parser.py',72),
  ('release_exp -> empty','release_exp',1,'p_release_exp','parser.py',80),
  ('resources -> empty','resources',1,'p_resources','parser.py',86),
  ('program_libraries -> from_library import_library','program_libraries',2,'p_program_libraries','parser.py',103),
  ('program_libraries -> empty','program_libraries',1,'p_program_libraries','parser.py',104),
  ('from_library -> FROM ID','from_library',2,'p_from_library','parser.py',107),
  ('from_library -> empty','from_library',1,'p_from_library','parser.py',108),
  ('import_library -> IMPORT ID AS ID program_libraries','import_library',5,'p_import_library','parser.py',111),
  ('var_type -> var_c_type','var_type',1,'p_var_type','parser.py',116),
  ('var_type -> var_s_type','var_type',1,'p_var_type','parser.py',117),
  ('program_vars -> VAR var_type','program_vars',2,'p_program_vars','parser.py',120),
  ('program_vars -> empty','program_vars',1,'p_program_vars','parser.py',121),
  ('s_type -> INT','s_type',1,'p_s_type','parser.py',131),
  ('s_type -> FLOAT','s_type',1,'p_s_type','parser.py',132),
  ('s_type -> CHAR','s_type',1,'p_s_type','parser.py',133),
  ('c_type -> DATAFRAME','c_type',1,'p_c_type','parser.py',140),
  ('c_type -> DATE','c_type',1,'p_c_type','parser.py',141),
  ('var_multiple -> var_type','var_multiple',1,'p_var_multiple','parser.py',148),
  ('var_multiple -> empty','var_multiple',1,'p_var_multiple','parser.py',149),
  ('var_c_type -> c_type id_saver add_c_var var_c_type2 SEMICOLON var_multiple','var_c_type',6,'p_var_c_type','parser.py',152),
  ('var_c_type2 -> COMMA id_saver add_c_var var_c_type2','var_c_type2',4,'p_var_c_type2','parser.py',155),
  ('var_c_type2 -> empty','var_c_type2',1,'p_var_c_type2','parser.py',156),
  ('add_c_var -> empty','add_c_var',1,'p_add_c_var','parser.py',159),
  ('var_s_type -> s_type id_saver var_s_array add_s_var var_s_type2 SEMICOLON var_multiple','var_s_type',7,'p_var_s_type','parser.py',165),
  ('var_s_type2 -> COMMA id_saver var_s_array add_s_var var_s_type2','var_s_type2',5,'p_var_s_type2','parser.py',168),
  ('var_s_type2 -> empty','var_s_type2',1,'p_var_s_type2','parser.py',169),
  ('add_s_var -> empty','add_s_var',1,'p_add_s_var','parser.py',173),
  ('var_s_array -> LSQBRACKET var_s_dimesions RSQBRACKET var_s_matrix','var_s_array',4,'p_var_s_array','parser.py',181),
  ('var_s_array -> empty','var_s_array',1,'p_var_s_array','parser.py',182),
  ('var_s_matrix -> LSQBRACKET var_s_dimesions RSQBRACKET','var_s_matrix',3,'p_var_s_matrix','parser.py',185),
  ('var_s_matrix -> empty','var_s_matrix',1,'p_var_s_matrix','parser.py',186),
  ('var_s_dimesions -> CTE_INT empty','var_s_dimesions',2,'p_var_s_dimesions','parser.py',190),
  ('variable -> id_saver variable_array','variable',2,'p_variable','parser.py',207),
  ('variable_array -> LSQBRACKET exp RSQBRACKET variable_matrix','variable_array',4,'p_variable_array','parser.py',223),
  ('variable_array -> empty','variable_array',1,'p_variable_array','parser.py',224),
  ('variable_matrix -> LSQBRACKET exp RSQBRACKET','variable_matrix',3,'p_variable_matrix','parser.py',230),
  ('variable_matrix -> empty','variable_matrix',1,'p_variable_matrix','parser.py',231),
  ('program_function -> FUNCTION resources f_type id_saver func_creator LPAREN param RPAREN add_func_glob program_vars inner_body return end_function program_function','program_function',14,'p_program_function','parser.py',237),
  ('program_function -> empty','program_function',1,'p_program_function','parser.py',238),
  ('f_type -> INT','f_type',1,'p_f_type','parser.py',243),
  ('f_type -> FLOAT','f_type',1,'p_f_type','parser.py',244),
  ('f_type -> CHAR','f_type',1,'p_f_type','parser.py',245),
  ('f_type -> VOID','f_type',1,'p_f_type','parser.py',246),
  ('func_creator -> empty','func_creator',1,'p_func_creator','parser.py',258),
  ('add_func_glob -> LBRACKET','add_func_glob',1,'p_add_func_glob','parser.py',266),
  ('end_function -> RBRACKET','end_function',1,'p_end_function','parser.py',279),
  ('param -> s_type id_saver add_params param2','param',4,'p_param','parser.py',285),
  ('param -> empty','param',1,'p_param','parser.py',286),
  ('param2 -> COMMA s_type id_saver add_params param2','param2',5,'p_param2','parser.py',289),
  ('param2 -> empty','param2',1,'p_param2','parser.py',290),
  ('add_params -> empty','add_params',1,'p_add_params','parser.py',294),
  ('return -> return_np exp return_quad SEMICOLON','return',4,'p_return','parser.py',301),
  ('return -> empty_path_return','return',1,'p_return','parser.py',302),
  ('return_np -> RETURN','return_np',1,'p_return_np','parser.py',305),
  ('return_quad -> empty','return_quad',1,'p_return_quad','parser.py',314),
  ('empty_path_return -> empty','empty_path_return',1,'p_empty_path_return','parser.py',320),
  ('program_main -> main_id LBRACKET program_vars inner_body RBRACKET','program_main',5,'p_program_main','parser.py',331),
  ('main_id -> MAIN resources','main_id',2,'p_main_id','parser.py',334),
  ('body -> LBRACKET inner_body RBRACKET','body',3,'p_body','parser.py',344),
  ('inner_body -> statement inner_body','inner_body',2,'p_inner_body','parser.py',348),
  ('inner_body -> empty','inner_body',1,'p_inner_body','parser.py',349),
  ('assign -> variable keep_assign specialf_assign end_assign','assign',4,'p_assign','parser.py',354),
  ('specialf_assign -> exp','specialf_assign',1,'p_specialf_assign','parser.py',360),
  ('specialf_assign -> special_function','specialf_assign',1,'p_specialf_assign','parser.py',361),
  ('specialf_assign -> read','specialf_assign',1,'p_specialf_assign','parser.py',362),
  ('keep_assign -> ASSIGN empty','keep_assign',2,'p_keep_assign','parser.py',366),
  ('end_assign -> SEMICOLON empty','end_assign',2,'p_end_assign','parser.py',382),
  ('condition -> IF LPAREN exp RPAREN condition_GOTOF body condition2 SEMICOLON end_condition','condition',9,'p_condition','parser.py',390),
  ('condition2 -> ELSE condition_GOTO body','condition2',3,'p_condition2','parser.py',393),
  ('condition2 -> empty','condition2',1,'p_condition2','parser.py',394),
  ('condition_GOTOF -> empty','condition_GOTOF',1,'p_condition_GOTOF','parser.py',398),
  ('condition_GOTO -> empty','condition_GOTO',1,'p_condition_GOTO','parser.py',405),
  ('end_condition -> empty','end_condition',1,'p_end_condition','parser.py',410),
  ('print -> PRINT LPAREN print_many RPAREN SEMICOLON end_print_np','print',6,'p_print','parser.py',419),
  ('print_type -> exp','print_type',1,'p_print_type','parser.py',422),
  ('print_many -> print_type print_many2','print_many',2,'p_print_many','parser.py',425),
  ('print_many2 -> COMMA print_many_np print_many','print_many2',3,'p_print_many2','parser.py',428),
  ('print_many2 -> empty','print_many2',1,'p_print_many2','parser.py',429),
  ('print_many_np -> empty','print_many_np',1,'p_print_many_np','parser.py',432),
  ('end_print_np -> empty','end_print_np',1,'p_end_print_np','parser.py',436),
  ('read -> READ LPAREN variable RPAREN read_np','read',5,'p_read','parser.py',442),
  ('read_np -> empty','read_np',1,'p_read_np','parser.py',445),
  ('cycle -> for','cycle',1,'p_cycle','parser.py',449),
  ('cycle -> while','cycle',1,'p_cycle','parser.py',450),
  ('while -> DO seed body WHILE LPAREN exp RPAREN SEMICOLON gotoV','while',9,'p_while','parser.py',454),
  ('seed -> empty','seed',1,'p_seed','parser.py',458),
  ('gotoV -> empty','gotoV',1,'p_gotoV','parser.py',463),
  ('for -> FOR LPAREN for_control keep_assign exp for_np1 for_end body for_np2','for',9,'p_for','parser.py',469),
  ('for_control -> id_saver','for_control',1,'p_for_control','parser.py',472),
  ('for_np1 -> TO','for_np1',1,'p_for_np1','parser.py',481),
  ('for_end -> int_const_saver RPAREN','for_end',2,'p_for_end','parser.py',486),
  ('for_np2 -> SEMICOLON','for_np2',1,'p_for_np2','parser.py',503),
  ('call_function -> function_saver function_flag call_params check_not_void','call_function',4,'p_call_function','parser.py',549),
  ('check_not_void -> RPAREN','check_not_void',1,'p_check_not_void','parser.py',554),
  ('call_void_function -> function_saver function_flag call_params verify_params check_void','call_void_function',5,'p_call_void_function','parser.py',567),
  ('verify_params -> RPAREN','verify_params',1,'p_verify_params','parser.py',570),
  ('check_void -> SEMICOLON','check_void',1,'p_check_void','parser.py',579),
  ('function_saver -> ID empty','function_saver',2,'p_function_saver','parser.py',592),
  ('function_flag -> LPAREN','function_flag',1,'p_function_flag','parser.py',604),
  ('call_params -> check_param exp_many','call_params',2,'p_call_params','parser.py',619),
  ('call_params -> empty','call_params',1,'p_call_params','parser.py',620),
  ('check_param -> exp','check_param',1,'p_check_param','parser.py',625),
  ('exp_many -> COMMA check_param exp_many','exp_many',3,'p_exp_many','parser.py',639),
  ('exp_many -> empty','exp_many',1,'p_exp_many','parser.py',640),
  ('statement -> assign','statement',1,'p_statement','parser.py',644),
  ('statement -> condition','statement',1,'p_statement','parser.py',645),
  ('statement -> print','statement',1,'p_statement','parser.py',646),
  ('statement -> cycle','statement',1,'p_statement','parser.py',647),
  ('statement -> call_void_function','statement',1,'p_statement','parser.py',648),
  ('special_function -> exploration','special_function',1,'p_special_function','parser.py',652),
  ('special_function -> financial_state','special_function',1,'p_special_function','parser.py',653),
  ('special_function -> dummi_regression','special_function',1,'p_special_function','parser.py',654),
  ('special_function -> season_analysis','special_function',1,'p_special_function','parser.py',655),
  ('special_function -> trend_prediction','special_function',1,'p_special_function','parser.py',656),
  ('special_function -> model_predict','special_function',1,'p_special_function','parser.py',657),
  ('exploration -> EXPLORATION LPAREN variable explore_var explor_cte RPAREN','exploration',6,'p_exploration','parser.py',663),
  ('explore_var -> COMMA variable','explore_var',2,'p_explore_var','parser.py',666),
  ('explore_var -> empty','explore_var',1,'p_explore_var','parser.py',667),
  ('explor_cte -> COMMA int_const_saver','explor_cte',2,'p_explor_cte','parser.py',670),
  ('explor_cte -> empty','explor_cte',1,'p_explor_cte','parser.py',671),
  ('financial_state -> FINANCIAL_STATE LPAREN variable COMMA variable COMMA variable COMMA variable RPAREN','financial_state',10,'p_financial_state','parser.py',675),
  ('season_analysis -> SEASON_ANALYSIS LPAREN variable RPAREN','season_analysis',4,'p_season_analysis','parser.py',679),
  ('trend_prediction -> TREND_PREDICTION LPAREN variable COMMA int_const_saver COMMA int_const_saver COMMA int_const_saver RPAREN','trend_prediction',10,'p_trend_prediction','parser.py',685),
  ('dummi_regression -> DUMMI_REGRESSION LPAREN variable COMMA variable dr_array dr_int RPAREN','dummi_regression',8,'p_dummi_regression','parser.py',689),
  ('dr_array -> COMMA LSQBRACKET CTE_CHAR dr_array_mp RSQBRACKET','dr_array',5,'p_dr_array','parser.py',692),
  ('dr_array -> empty','dr_array',1,'p_dr_array','parser.py',693),
  ('dr_array_mp -> COMMA CTE_CHAR dr_array_mp','dr_array_mp',3,'p_dr_array_mp','parser.py',696),
  ('dr_array_mp -> empty','dr_array_mp',1,'p_dr_array_mp','parser.py',697),
  ('dr_int -> COMMA int_const_saver','dr_int',2,'p_dr_int','parser.py',700),
  ('dr_int -> empty','dr_int',1,'p_dr_int','parser.py',701),
  ('model_predict -> MODEL_PREDICT LPAREN variable COMMA variable COMMA RPAREN','model_predict',7,'p_model_predict','parser.py',705),
  ('exp -> t_exp release_exp exp_or','exp',3,'p_exp','parser.py',710),
  ('exp_or -> exp_keep_or exp','exp_or',2,'p_exp_or','parser.py',714),
  ('exp_or -> empty','exp_or',1,'p_exp_or','parser.py',715),
  ('exp_keep_or -> OR','exp_keep_or',1,'p_exp_keep_or','parser.py',718),
  ('t_exp -> expression release_exp t_exp_and','t_exp',3,'p_t_exp','parser.py',727),
  ('t_exp_and -> keep_and t_exp','t_exp_and',2,'p_t_exp_and','parser.py',732),
  ('t_exp_and -> empty','t_exp_and',1,'p_t_exp_and','parser.py',733),
  ('keep_and -> AND','keep_and',1,'p_keep_and','parser.py',736),
  ('expression -> m_exp release_exp expression_comp','expression',3,'p_expression','parser.py',745),
  ('expression_comp -> expression_comp_2 m_exp release_exp','expression_comp',3,'p_expression_comp','parser.py',751),
  ('expression_comp -> empty','expression_comp',1,'p_expression_comp','parser.py',752),
  ('expression_comp_2 -> GTHAN','expression_comp_2',1,'p_expression_comp_2','parser.py',757),
  ('expression_comp_2 -> EQUAL','expression_comp_2',1,'p_expression_comp_2','parser.py',758),
  ('expression_comp_2 -> NOTEQUAL','expression_comp_2',1,'p_expression_comp_2','parser.py',759),
  ('expression_comp_2 -> LTHAN','expression_comp_2',1,'p_expression_comp_2','parser.py',760),
  ('expression_comp_2 -> GORE','expression_comp_2',1,'p_expression_comp_2','parser.py',761),
  ('expression_comp_2 -> LORE','expression_comp_2',1,'p_expression_comp_2','parser.py',762),
  ('m_exp -> term release_exp m_exp_sr','m_exp',3,'p_m_exp','parser.py',772),
  ('m_exp_sr -> m_exp_sr_2 m_exp','m_exp_sr',2,'p_m_exp_sr','parser.py',779),
  ('m_exp_sr -> empty','m_exp_sr',1,'p_m_exp_sr','parser.py',780),
  ('m_exp_sr_2 -> PLUS','m_exp_sr_2',1,'p_m_exp_sr_2','parser.py',783),
  ('m_exp_sr_2 -> MINUS','m_exp_sr_2',1,'p_m_exp_sr_2','parser.py',784),
  ('term -> sub_factor release_exp term_pc','term',3,'p_term','parser.py',792),
  ('term_pc -> term_pc_2 term','term_pc',2,'p_term_pc','parser.py',798),
  ('term_pc -> empty','term_pc',1,'p_term_pc','parser.py',799),
  ('term_pc_2 -> MULTIPLY','term_pc_2',1,'p_term_pc_2','parser.py',802),
  ('term_pc_2 -> DIVIDE','term_pc_2',1,'p_term_pc_2','parser.py',803),
  ('term_pc_2 -> MODULE','term_pc_2',1,'p_term_pc_2','parser.py',804),
  ('sub_factor -> factor release_exp sub_factor_pc','sub_factor',3,'p_sub_factor','parser.py',810),
  ('sub_factor_pc -> sub_factor_pc_2 sub_factor','sub_factor_pc',2,'p_sub_factor_pc','parser.py',816),
  ('sub_factor_pc -> empty','sub_factor_pc',1,'p_sub_factor_pc','parser.py',817),
  ('sub_factor_pc_2 -> POWER empty','sub_factor_pc_2',2,'p_sub_factor_pc_2','parser.py',820),
  ('factor -> factor_exp','factor',1,'p_factor','parser.py',828),
  ('factor -> factor_cte','factor',1,'p_factor','parser.py',829),
  ('factor -> variable','factor',1,'p_factor','parser.py',830),
  ('factor -> call_function','factor',1,'p_factor','parser.py',831),
  ('factor_exp -> false_button exp release_false_button','factor_exp',3,'p_factor_exp','parser.py',838),
  ('false_button -> LPAREN','false_button',1,'p_false_button','parser.py',843),
  ('release_false_button -> RPAREN','release_false_button',1,'p_release_false_button','parser.py',849),
  ('factor_cte -> CTE_FLOAT','factor_cte',1,'p_factor_cte','parser.py',856),
  ('factor_cte -> CTE_INT','factor_cte',1,'p_factor_cte','parser.py',857),
  ('factor_cte -> CTE_CHAR','factor_cte',1,'p_factor_cte','parser.py',858),
]
