
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS ASSIGN CHAR COLON COMMA CTE_CHAR CTE_FLOAT CTE_INT DATAFRAME DATE DIVIDE DO DUMMI_REGRESSION ELSE END EQUAL EXPLORATION FINANCIAL_STATE FLOAT FOR FROM FUNCTION GTHAN ID IF IMPORT INT LBRACKET LPAREN LSQBRACKET LTHAN MAIN MINUS MODEL_PREDICT MODULE MULTIPLY NOTEQUAL OR PLUS POWER PRINT PROGRAM RBRACKET READ RETURN RPAREN RSQBRACKET SEASON_ANALYSIS SEMICOLON TO TREND_PREDICTION VAR VOID WHILEprogram : PROGRAM ID SEMICOLON program_libraries program_vars program_function program_main endend : END emptyempty : id_saver : ID empty int_const_saver : CTE_INT emptyrelease_exp : emptyprogram_libraries : from_library import_library \n                         | emptyfrom_library : FROM ID\n                    | emptyimport_library : IMPORT ID AS ID  program_librariesvar_type : var_c_type\n                | var_s_typeprogram_vars : VAR var_type  \n                    | emptys_type : INT \n              | FLOAT\n              | CHARc_type : DATAFRAME\n              | DATEvar_multiple : var_type\n                    | emptyvar_c_type : c_type id_saver add_c_var var_c_type2 SEMICOLON var_multiplevar_c_type2 : COMMA id_saver add_c_var var_c_type2\n                   | emptyadd_c_var : emptyvar_s_type : s_type id_saver var_s_array add_s_var var_s_type2 SEMICOLON var_multiplevar_s_type2 : COMMA id_saver var_s_array add_s_var var_s_type2\n                   | emptyadd_s_var : emptyvar_s_array : LSQBRACKET var_s_dimesions RSQBRACKET var_s_matrix \n                   | emptyvar_s_matrix : LSQBRACKET var_s_dimesions RSQBRACKET\n                    | emptyvar_s_dimesions : CTE_INT emptyvariable : id_saver variable_arrayvariable_array : LSQBRACKET exp RSQBRACKET variable_matrix\n                      | emptyvariable_matrix : LSQBRACKET exp RSQBRACKET\n                       | emptyprogram_function : FUNCTION f_type id_saver func_creator LPAREN param RPAREN LBRACKET program_vars inner_body return RBRACKET program_function\n                        | emptyf_type : INT \n              | FLOAT\n              | CHAR\n              | VOIDfunc_creator : emptyparam : s_type id_saver add_params param2param2 : COMMA s_type id_saver add_params param2\n              | emptyadd_params : emptyreturn : RETURN exp SEMICOLON\n              | emptyprogram_main : MAIN main_id LBRACKET program_vars inner_body RBRACKETmain_id : emptybody : LBRACKET inner_body RBRACKETinner_body :  statement inner_body\n                  | emptyassign : variable keep_assign specialf_assign end_assignspecialf_assign : exp\n                       | special_function\n                       | readkeep_assign : ASSIGN emptyend_assign : SEMICOLON emptycondition : IF LPAREN exp RPAREN condition_GOTOF body condition2 SEMICOLONcondition2 : ELSE body\n                 | emptycondition_GOTOF : emptyprint : PRINT LPAREN print_many RPAREN SEMICOLONprint_type : expprint_many : print_type print_many2 print_many2 : COMMA print_many\n                   | emptyread : READ LPAREN variable RPARENcycle : for\n             | whilewhile : DO body WHILE LPAREN exp RPAREN SEMICOLONfor : FOR LPAREN ID TO for_end RPAREN body SEMICOLONfor_end : int_const_saver\n               | IDcall_function : function_saver LPAREN exp exp_many RPAREN function_saver : ID emptyexp_many : COMMA exp exp_many\n                | emptystatement : assign\n                 | condition\n                 | print\n                 | cycle\n                 | call_functionspecial_function : exploration\n                        | financial_state\n                        | dummi_regression\n                        | season_analysis\n                        | trend_prediction\n                        | model_predictexploration : EXPLORATION LPAREN variable explore_var explor_cte RPARENexplore_var : COMMA variable\n                   | emptyexplor_cte : COMMA int_const_saver\n                  | emptyfinancial_state : FINANCIAL_STATE LPAREN variable COMMA variable COMMA variable COMMA variable RPARENseason_analysis : SEASON_ANALYSIS LPAREN variable RPARENtrend_prediction : TREND_PREDICTION LPAREN variable COMMA int_const_saver COMMA int_const_saver COMMA int_const_saver RPARENdummi_regression : DUMMI_REGRESSION LPAREN variable COMMA variable dr_array dr_int RPARENdr_array : COMMA LSQBRACKET CTE_CHAR dr_array_mp RSQBRACKET\n                | emptydr_array_mp : COMMA CTE_CHAR dr_array_mp\n                   | emptydr_int : COMMA int_const_saver\n              | emptymodel_predict : MODEL_PREDICT LPAREN variable COMMA variable COMMA RPARENexp : t_exp exp_orexp_or : exp_keep_or release_exp exp\n              | emptyexp_keep_or : ORt_exp : expression release_exp t_exp_andt_exp_and : AND keep_and t_exp\n                 | emptykeep_and : empty m_exp : term release_exp m_exp_srm_exp_sr : m_exp_sr_2 m_exp\n                | emptym_exp_sr_2 : PLUS\n                  | MINUSterm : sub_factor release_exp term_pcterm_pc : term_pc_2 term\n               | emptyterm_pc_2 : MULTIPLY\n                 | DIVIDE\n                 | MODULEsub_factor : factor release_exp sub_factor_pcsub_factor_pc : sub_factor_pc_2 sub_factor\n                     | emptysub_factor_pc_2 : POWER emptyexpression : m_exp release_exp expression_compexpression_comp : expression_comp_2 m_exp\n                       | emptyexpression_comp_2 : GTHAN\n                         | EQUAL\n                         | NOTEQUAL\n                         | LTHAN\n                         factor : factor_exp\n              | factor_cte\n              | variable\n              | call_functionfactor_exp : false_button exp release_false_buttonfalse_button : LPARENrelease_false_button : RPARENfactor_cte : CTE_FLOAT\n                  | CTE_INT\n                  | CTE_CHAR'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,40,41,52,],[0,-1,-3,-2,]),'ID':([2,8,11,13,18,19,20,21,22,23,24,25,26,27,31,32,33,34,35,39,53,57,64,66,69,74,76,77,78,79,80,84,85,92,93,94,95,97,104,105,106,107,108,110,112,115,119,135,150,155,165,170,171,173,175,176,178,179,180,181,182,183,184,194,197,200,201,203,208,209,212,221,223,224,225,226,228,230,231,233,235,236,237,239,241,246,248,250,259,262,263,265,267,268,271,276,284,301,307,313,315,326,],[3,14,-15,28,-14,-12,-13,37,37,-19,-20,-16,-17,-18,37,-43,-44,-45,-46,51,-3,37,89,-3,37,89,-85,-86,-87,-88,-89,-75,-76,37,-23,-21,-22,-3,154,-3,154,154,154,154,162,89,-27,-147,154,-63,-3,-59,-3,-3,-115,37,-6,37,37,37,37,37,37,154,154,253,154,89,-64,154,-3,154,-138,-139,-140,-141,154,-123,-124,154,-128,-129,-130,154,-3,-69,-81,154,37,154,-119,37,37,37,37,-134,154,-77,37,-65,-78,37,]),'SEMICOLON':([3,36,37,38,45,46,47,48,50,56,58,59,60,67,68,70,71,87,96,98,100,101,109,111,118,120,122,123,124,125,126,127,128,129,130,131,132,133,136,143,144,145,146,147,148,149,151,152,153,154,168,169,172,174,177,178,185,186,187,188,190,192,199,202,207,211,213,220,222,227,229,232,234,238,240,242,243,248,251,252,260,261,269,272,273,274,275,277,282,287,296,298,299,300,303,305,314,325,329,336,339,],[4,-3,-3,-3,-3,-26,-4,-3,-32,66,-25,-3,-30,-3,97,-29,-3,-3,-3,-3,-31,-34,-36,-38,-24,-3,-144,171,-60,-61,-62,-3,-90,-91,-92,-93,-94,-95,-3,-3,-3,-3,-3,-142,-143,-145,-149,-150,-151,-3,-3,-33,-112,-114,-3,-6,-3,-3,-3,-3,-4,246,-3,-56,-28,-116,-118,-135,-137,-120,-122,-125,-127,-131,-133,-146,-148,-81,-37,-40,-113,-74,-102,-136,-121,-126,-132,-3,301,-117,313,-67,-39,315,317,-96,-66,-111,-104,-101,-103,]),'FROM':([4,51,],[8,8,]),'VAR':([4,5,7,12,51,53,63,165,],[-3,10,-8,-7,-3,10,-11,10,]),'FUNCTION':([4,5,7,9,11,12,18,19,20,51,63,66,93,94,95,97,119,302,],[-3,-3,-8,16,-15,-7,-14,-12,-13,-3,-11,-3,-23,-21,-22,-3,-27,16,]),'MAIN':([4,5,7,9,11,12,15,17,18,19,20,51,63,66,93,94,95,97,119,302,316,],[-3,-3,-8,-3,-15,-7,30,-42,-14,-12,-13,-3,-11,-3,-23,-21,-22,-3,-27,-3,-41,]),'IMPORT':([4,6,7,14,51,],[-3,13,-10,-9,-3,]),'DATAFRAME':([10,66,97,],[23,23,23,]),'DATE':([10,66,97,],[24,24,24,]),'INT':([10,16,65,66,97,205,],[25,32,25,25,25,25,]),'FLOAT':([10,16,65,66,97,205,],[26,33,26,26,26,26,]),'CHAR':([10,16,65,66,97,205,],[27,34,27,27,27,27,]),'IF':([11,18,19,20,53,64,66,74,76,77,78,79,80,84,85,93,94,95,97,115,119,165,170,171,203,208,246,248,301,313,315,],[-15,-14,-12,-13,-3,82,-3,82,-85,-86,-87,-88,-89,-75,-76,-23,-21,-22,-3,82,-27,-3,-59,-3,82,-64,-69,-81,-77,-65,-78,]),'PRINT':([11,18,19,20,53,64,66,74,76,77,78,79,80,84,85,93,94,95,97,115,119,165,170,171,203,208,246,248,301,313,315,],[-15,-14,-12,-13,-3,83,-3,83,-85,-86,-87,-88,-89,-75,-76,-23,-21,-22,-3,83,-27,-3,-59,-3,83,-64,-69,-81,-77,-65,-78,]),'FOR':([11,18,19,20,53,64,66,74,76,77,78,79,80,84,85,93,94,95,97,115,119,165,170,171,203,208,246,248,301,313,315,],[-15,-14,-12,-13,-3,88,-3,88,-85,-86,-87,-88,-89,-75,-76,-23,-21,-22,-3,88,-27,-3,-59,-3,88,-64,-69,-81,-77,-65,-78,]),'DO':([11,18,19,20,53,64,66,74,76,77,78,79,80,84,85,93,94,95,97,115,119,165,170,171,203,208,246,248,301,313,315,],[-15,-14,-12,-13,-3,90,-3,90,-85,-86,-87,-88,-89,-75,-76,-23,-21,-22,-3,90,-27,-3,-59,-3,90,-64,-69,-81,-77,-65,-78,]),'RBRACKET':([11,18,19,20,53,64,66,73,74,75,76,77,78,79,80,84,85,93,94,95,97,103,115,119,164,165,170,171,203,208,246,248,258,283,285,301,313,315,317,],[-15,-14,-12,-13,-3,-3,-3,102,-3,-58,-85,-86,-87,-88,-89,-75,-76,-23,-21,-22,-3,-57,-3,-27,202,-3,-59,-3,-3,-64,-69,-81,-3,302,-53,-77,-65,-78,-52,]),'RETURN':([11,18,19,20,66,74,75,76,77,78,79,80,84,85,93,94,95,97,103,119,165,170,171,203,208,246,248,258,301,313,315,],[-15,-14,-12,-13,-3,-3,-58,-85,-86,-87,-88,-89,-75,-76,-23,-21,-22,-3,-57,-27,-3,-59,-3,-3,-64,-69,-81,284,-77,-65,-78,]),'VOID':([16,],[35,]),'AS':([28,],[39,]),'END':([29,102,],[41,-54,]),'LBRACKET':([30,42,43,90,116,191,244,245,280,297,],[-3,53,-55,115,165,-3,115,-68,115,115,]),'COMMA':([36,37,38,45,46,47,48,50,59,60,67,71,87,96,98,100,101,109,111,117,120,122,127,136,143,144,145,146,147,148,149,151,152,153,154,158,159,160,166,167,168,169,172,174,177,178,185,186,187,188,190,199,211,213,214,215,216,218,219,220,222,227,229,232,234,238,240,242,243,248,249,251,252,256,260,264,266,272,273,274,275,281,286,287,291,292,293,294,295,299,304,309,310,319,324,327,337,338,],[-3,-3,-3,57,-26,-4,-3,-32,69,-30,-3,-3,-3,57,-3,-31,-34,-36,-38,-3,-3,-144,-3,-3,-3,-3,-3,-3,-142,-143,-145,-149,-150,-151,-3,194,-70,197,205,-51,69,-33,-112,-114,-3,-6,-3,-3,-3,-3,-4,-3,-116,-118,265,267,268,270,271,-135,-137,-120,-122,-125,-127,-131,-133,-146,-148,-81,197,-37,-40,-3,-113,289,-98,-136,-121,-126,-132,-5,-3,-117,-97,307,308,311,312,-39,205,321,-106,326,330,332,332,-105,]),'LSQBRACKET':([37,38,47,71,87,89,98,113,154,190,199,308,],[-3,49,-4,99,110,-3,49,-4,-3,-4,250,320,]),'LPAREN':([37,44,47,54,55,82,83,86,88,89,104,105,106,107,108,110,113,134,135,137,138,139,140,141,142,150,154,155,163,173,175,178,190,194,197,201,209,212,221,223,224,225,226,228,230,231,233,235,236,237,239,241,250,262,263,276,284,],[-3,-3,-4,65,-47,106,107,108,112,-3,135,-3,135,135,135,135,-82,176,-147,179,180,181,182,183,184,135,-3,-63,201,-3,-115,-6,-82,135,135,135,135,-3,135,-138,-139,-140,-141,135,-123,-124,135,-128,-129,-130,135,-3,135,135,-119,-134,135,]),'RPAREN':([37,47,87,91,109,111,117,122,127,136,143,144,145,146,147,148,149,151,152,153,154,156,157,158,159,160,166,167,172,174,177,178,185,186,187,188,189,190,193,195,196,198,199,204,206,210,211,213,214,217,220,222,227,229,232,234,238,240,242,243,247,248,249,251,252,253,254,255,256,257,260,264,266,272,273,274,275,278,281,286,287,288,290,291,293,299,304,306,309,310,312,318,322,323,328,331,335,338,],[-3,-4,-3,116,-36,-38,-3,-144,-3,-3,-3,-3,-3,-3,-142,-143,-145,-149,-150,-151,-3,191,192,-3,-70,-3,-3,-51,-112,-114,-3,-6,-3,-3,-3,-3,243,-4,-71,-73,248,-84,-3,-48,-50,261,-116,-118,-3,269,-135,-137,-120,-122,-125,-127,-131,-133,-146,-148,-72,-81,-3,-37,-40,-80,280,-79,-3,282,-113,-3,-98,-136,-121,-126,-132,-83,-5,-3,-117,305,-100,-97,-3,-39,-3,-99,-3,-106,325,-49,329,-110,-109,336,339,-105,]),'CTE_INT':([49,99,104,105,106,107,108,110,135,150,155,173,175,178,194,197,200,201,209,212,221,223,224,225,226,228,230,231,233,235,236,237,239,241,250,262,263,270,276,284,289,311,321,330,],[62,62,152,-3,152,152,152,152,-147,152,-63,-3,-115,-6,152,152,256,152,152,-3,152,-138,-139,-140,-141,152,-123,-124,152,-128,-129,-130,152,-3,152,152,-119,256,-134,152,256,256,256,256,]),'RSQBRACKET':([61,62,72,87,109,111,121,122,127,136,143,144,145,146,147,148,149,151,152,153,154,161,172,174,177,178,185,186,187,188,190,199,211,213,220,222,227,229,232,234,238,240,242,243,248,251,252,260,272,273,274,275,279,287,299,327,333,334,337,340,],[71,-3,-35,-3,-36,-38,169,-144,-3,-3,-3,-3,-3,-3,-142,-143,-145,-149,-150,-151,-3,199,-112,-114,-3,-6,-3,-3,-3,-3,-4,-3,-116,-118,-135,-137,-120,-122,-125,-127,-131,-133,-146,-148,-81,-37,-40,-113,-136,-121,-126,-132,299,-117,-39,-3,338,-108,-3,-107,]),'ASSIGN':([81,87,89,109,111,113,199,251,252,299,],[105,-3,-3,-36,-38,-4,-3,-37,-40,-39,]),'POWER':([87,109,111,122,146,147,148,149,151,152,153,154,178,188,190,199,242,243,248,251,252,299,],[-3,-36,-38,-144,-3,-142,-143,-145,-149,-150,-151,-3,-6,241,-4,-3,-146,-148,-81,-37,-40,-39,]),'MULTIPLY':([87,109,111,122,145,146,147,148,149,151,152,153,154,178,187,188,190,199,238,240,242,243,248,251,252,275,299,],[-3,-36,-38,-144,-3,-3,-142,-143,-145,-149,-150,-151,-3,-6,235,-3,-4,-3,-131,-133,-146,-148,-81,-37,-40,-132,-39,]),'DIVIDE':([87,109,111,122,145,146,147,148,149,151,152,153,154,178,187,188,190,199,238,240,242,243,248,251,252,275,299,],[-3,-36,-38,-144,-3,-3,-142,-143,-145,-149,-150,-151,-3,-6,236,-3,-4,-3,-131,-133,-146,-148,-81,-37,-40,-132,-39,]),'MODULE':([87,109,111,122,145,146,147,148,149,151,152,153,154,178,187,188,190,199,238,240,242,243,248,251,252,275,299,],[-3,-36,-38,-144,-3,-3,-142,-143,-145,-149,-150,-151,-3,-6,237,-3,-4,-3,-131,-133,-146,-148,-81,-37,-40,-132,-39,]),'PLUS':([87,109,111,122,144,145,146,147,148,149,151,152,153,154,178,186,187,188,190,199,232,234,238,240,242,243,248,251,252,274,275,299,],[-3,-36,-38,-144,-3,-3,-3,-142,-143,-145,-149,-150,-151,-3,-6,230,-3,-3,-4,-3,-125,-127,-131,-133,-146,-148,-81,-37,-40,-126,-132,-39,]),'MINUS':([87,109,111,122,144,145,146,147,148,149,151,152,153,154,178,186,187,188,190,199,232,234,238,240,242,243,248,251,252,274,275,299,],[-3,-36,-38,-144,-3,-3,-3,-142,-143,-145,-149,-150,-151,-3,-6,231,-3,-3,-4,-3,-125,-127,-131,-133,-146,-148,-81,-37,-40,-126,-132,-39,]),'GTHAN':([87,109,111,122,143,144,145,146,147,148,149,151,152,153,154,178,185,186,187,188,190,199,227,229,232,234,238,240,242,243,248,251,252,273,274,275,299,],[-3,-36,-38,-144,-3,-3,-3,-3,-142,-143,-145,-149,-150,-151,-3,-6,223,-3,-3,-3,-4,-3,-120,-122,-125,-127,-131,-133,-146,-148,-81,-37,-40,-121,-126,-132,-39,]),'EQUAL':([87,109,111,122,143,144,145,146,147,148,149,151,152,153,154,178,185,186,187,188,190,199,227,229,232,234,238,240,242,243,248,251,252,273,274,275,299,],[-3,-36,-38,-144,-3,-3,-3,-3,-142,-143,-145,-149,-150,-151,-3,-6,224,-3,-3,-3,-4,-3,-120,-122,-125,-127,-131,-133,-146,-148,-81,-37,-40,-121,-126,-132,-39,]),'NOTEQUAL':([87,109,111,122,143,144,145,146,147,148,149,151,152,153,154,178,185,186,187,188,190,199,227,229,232,234,238,240,242,243,248,251,252,273,274,275,299,],[-3,-36,-38,-144,-3,-3,-3,-3,-142,-143,-145,-149,-150,-151,-3,-6,225,-3,-3,-3,-4,-3,-120,-122,-125,-127,-131,-133,-146,-148,-81,-37,-40,-121,-126,-132,-39,]),'LTHAN':([87,109,111,122,143,144,145,146,147,148,149,151,152,153,154,178,185,186,187,188,190,199,227,229,232,234,238,240,242,243,248,251,252,273,274,275,299,],[-3,-36,-38,-144,-3,-3,-3,-3,-142,-143,-145,-149,-150,-151,-3,-6,226,-3,-3,-3,-4,-3,-120,-122,-125,-127,-131,-133,-146,-148,-81,-37,-40,-121,-126,-132,-39,]),'AND':([87,109,111,122,136,143,144,145,146,147,148,149,151,152,153,154,177,178,185,186,187,188,190,199,220,222,227,229,232,234,238,240,242,243,248,251,252,272,273,274,275,299,],[-3,-36,-38,-144,-3,-3,-3,-3,-3,-142,-143,-145,-149,-150,-151,-3,212,-6,-3,-3,-3,-3,-4,-3,-135,-137,-120,-122,-125,-127,-131,-133,-146,-148,-81,-37,-40,-136,-121,-126,-132,-39,]),'OR':([87,109,111,122,127,136,143,144,145,146,147,148,149,151,152,153,154,177,178,185,186,187,188,190,199,211,213,220,222,227,229,232,234,238,240,242,243,248,251,252,272,273,274,275,287,299,],[-3,-36,-38,-144,175,-3,-3,-3,-3,-3,-142,-143,-145,-149,-150,-151,-3,-3,-6,-3,-3,-3,-3,-4,-3,-116,-118,-135,-137,-120,-122,-125,-127,-131,-133,-146,-148,-81,-37,-40,-136,-121,-126,-132,-117,-39,]),'READ':([104,105,155,],[134,-3,-63,]),'EXPLORATION':([104,105,155,],[137,-3,-63,]),'FINANCIAL_STATE':([104,105,155,],[138,-3,-63,]),'DUMMI_REGRESSION':([104,105,155,],[139,-3,-63,]),'SEASON_ANALYSIS':([104,105,155,],[140,-3,-63,]),'TREND_PREDICTION':([104,105,155,],[141,-3,-63,]),'MODEL_PREDICT':([104,105,155,],[142,-3,-63,]),'CTE_FLOAT':([104,105,106,107,108,110,135,150,155,173,175,178,194,197,201,209,212,221,223,224,225,226,228,230,231,233,235,236,237,239,241,250,262,263,276,284,],[151,-3,151,151,151,151,-147,151,-63,-3,-115,-6,151,151,151,151,-3,151,-138,-139,-140,-141,151,-123,-124,151,-128,-129,-130,151,-3,151,151,-119,-134,151,]),'CTE_CHAR':([104,105,106,107,108,110,135,150,155,173,175,178,194,197,201,209,212,221,223,224,225,226,228,230,231,233,235,236,237,239,241,250,262,263,276,284,320,332,],[153,-3,153,153,153,153,-147,153,-63,-3,-115,-6,153,153,153,153,-3,153,-138,-139,-140,-141,153,-123,-124,153,-128,-129,-130,153,-3,153,153,-119,-134,153,327,337,]),'WHILE':([114,202,],[163,-56,]),'TO':([162,],[200,]),'ELSE':([202,277,],[-56,297,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_libraries':([4,51,],[5,63,]),'from_library':([4,51,],[6,6,]),'empty':([4,5,9,30,36,37,38,41,44,45,48,51,53,59,62,64,66,67,71,74,87,89,96,97,98,105,115,117,120,127,136,143,144,145,146,154,158,160,165,166,168,171,173,177,185,186,187,188,191,199,203,212,214,241,249,256,258,264,277,286,293,302,304,309,327,337,],[7,11,17,43,46,47,50,52,55,58,60,7,11,70,72,75,95,46,101,75,111,113,58,95,50,155,75,167,60,174,178,178,178,178,178,190,195,198,11,206,70,208,178,213,222,229,234,240,245,252,75,263,266,276,198,281,285,290,298,167,310,17,206,323,334,334,]),'program_vars':([5,53,165,],[9,64,203,]),'import_library':([6,],[12,]),'program_function':([9,302,],[15,316,]),'var_type':([10,66,97,],[18,94,94,]),'var_c_type':([10,66,97,],[19,19,19,]),'var_s_type':([10,66,97,],[20,20,20,]),'c_type':([10,66,97,],[21,21,21,]),'s_type':([10,65,66,97,205,],[22,92,22,22,259,]),'program_main':([15,],[29,]),'f_type':([16,],[31,]),'id_saver':([21,22,31,57,64,69,74,92,104,106,107,108,110,115,150,176,179,180,181,182,183,184,194,197,201,203,209,221,228,233,239,250,259,262,265,267,268,271,284,307,326,],[36,38,44,67,87,98,87,117,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,286,87,87,87,87,87,87,87,87,]),'end':([29,],[40,]),'main_id':([30,],[42,]),'add_c_var':([36,67,],[45,96,]),'var_s_array':([38,98,],[48,120,]),'func_creator':([44,],[54,]),'var_c_type2':([45,96,],[56,118,]),'add_s_var':([48,120,],[59,168,]),'var_s_dimesions':([49,99,],[61,121,]),'var_s_type2':([59,168,],[68,207,]),'inner_body':([64,74,115,203,],[73,103,164,258,]),'statement':([64,74,115,203,],[74,74,74,74,]),'assign':([64,74,115,203,],[76,76,76,76,]),'condition':([64,74,115,203,],[77,77,77,77,]),'print':([64,74,115,203,],[78,78,78,78,]),'cycle':([64,74,115,203,],[79,79,79,79,]),'call_function':([64,74,104,106,107,108,110,115,150,194,197,201,203,209,221,228,233,239,250,262,284,],[80,80,149,149,149,149,149,80,149,149,149,149,80,149,149,149,149,149,149,149,149,]),'variable':([64,74,104,106,107,108,110,115,150,176,179,180,181,182,183,184,194,197,201,203,209,221,228,233,239,250,262,265,267,268,271,284,307,326,],[81,81,122,122,122,122,122,81,122,210,214,215,216,217,218,219,122,122,122,81,122,122,122,122,122,122,122,291,292,293,295,122,319,331,]),'for':([64,74,115,203,],[84,84,84,84,]),'while':([64,74,115,203,],[85,85,85,85,]),'function_saver':([64,74,104,106,107,108,110,115,150,194,197,201,203,209,221,228,233,239,250,262,284,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'param':([65,],[91,]),'var_multiple':([66,97,],[93,119,]),'var_s_matrix':([71,],[100,]),'keep_assign':([81,],[104,]),'variable_array':([87,],[109,]),'body':([90,244,280,297,],[114,277,300,314,]),'specialf_assign':([104,],[123,]),'exp':([104,106,107,108,110,150,194,197,201,209,250,284,],[124,156,159,160,161,189,159,249,257,260,279,303,]),'special_function':([104,],[125,]),'read':([104,],[126,]),'t_exp':([104,106,107,108,110,150,194,197,201,209,250,262,284,],[127,127,127,127,127,127,127,127,127,127,127,287,127,]),'exploration':([104,],[128,]),'financial_state':([104,],[129,]),'dummi_regression':([104,],[130,]),'season_analysis':([104,],[131,]),'trend_prediction':([104,],[132,]),'model_predict':([104,],[133,]),'expression':([104,106,107,108,110,150,194,197,201,209,250,262,284,],[136,136,136,136,136,136,136,136,136,136,136,136,136,]),'m_exp':([104,106,107,108,110,150,194,197,201,209,221,228,250,262,284,],[143,143,143,143,143,143,143,143,143,143,272,273,143,143,143,]),'term':([104,106,107,108,110,150,194,197,201,209,221,228,233,250,262,284,],[144,144,144,144,144,144,144,144,144,144,144,144,274,144,144,144,]),'sub_factor':([104,106,107,108,110,150,194,197,201,209,221,228,233,239,250,262,284,],[145,145,145,145,145,145,145,145,145,145,145,145,145,275,145,145,145,]),'factor':([104,106,107,108,110,150,194,197,201,209,221,228,233,239,250,262,284,],[146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,]),'factor_exp':([104,106,107,108,110,150,194,197,201,209,221,228,233,239,250,262,284,],[147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,]),'factor_cte':([104,106,107,108,110,150,194,197,201,209,221,228,233,239,250,262,284,],[148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,]),'false_button':([104,106,107,108,110,150,194,197,201,209,221,228,233,239,250,262,284,],[150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,]),'print_many':([107,194,],[157,247,]),'print_type':([107,194,],[158,158,]),'add_params':([117,286,],[166,304,]),'end_assign':([123,],[170,]),'exp_or':([127,],[172,]),'exp_keep_or':([127,],[173,]),'release_exp':([136,143,144,145,146,173,],[177,185,186,187,188,209,]),'print_many2':([158,],[193,]),'exp_many':([160,249,],[196,278,]),'param2':([166,304,],[204,318,]),'t_exp_and':([177,],[211,]),'expression_comp':([185,],[220,]),'expression_comp_2':([185,],[221,]),'m_exp_sr':([186,],[227,]),'m_exp_sr_2':([186,],[228,]),'term_pc':([187,],[232,]),'term_pc_2':([187,],[233,]),'sub_factor_pc':([188,],[238,]),'sub_factor_pc_2':([188,],[239,]),'release_false_button':([189,],[242,]),'condition_GOTOF':([191,],[244,]),'variable_matrix':([199,],[251,]),'for_end':([200,],[254,]),'int_const_saver':([200,270,289,311,321,330,],[255,294,306,324,328,335,]),'keep_and':([212,],[262,]),'explore_var':([214,],[264,]),'return':([258,],[283,]),'explor_cte':([264,],[288,]),'condition2':([277,],[296,]),'dr_array':([293,],[309,]),'dr_int':([309,],[322,]),'dr_array_mp':([327,337,],[333,340,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON program_libraries program_vars program_function program_main end','program',8,'p_program','parser.py',32),
  ('end -> END empty','end',2,'p_end','parser.py',36),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',40),
  ('id_saver -> ID empty','id_saver',2,'p_id_saver','parser.py',47),
  ('int_const_saver -> CTE_INT empty','int_const_saver',2,'p_int_const_saver','parser.py',55),
  ('release_exp -> empty','release_exp',1,'p_release_exp','parser.py',60),
  ('program_libraries -> from_library import_library','program_libraries',2,'p_program_libraries','parser.py',69),
  ('program_libraries -> empty','program_libraries',1,'p_program_libraries','parser.py',70),
  ('from_library -> FROM ID','from_library',2,'p_from_library','parser.py',73),
  ('from_library -> empty','from_library',1,'p_from_library','parser.py',74),
  ('import_library -> IMPORT ID AS ID program_libraries','import_library',5,'p_import_library','parser.py',77),
  ('var_type -> var_c_type','var_type',1,'p_var_type','parser.py',82),
  ('var_type -> var_s_type','var_type',1,'p_var_type','parser.py',83),
  ('program_vars -> VAR var_type','program_vars',2,'p_program_vars','parser.py',86),
  ('program_vars -> empty','program_vars',1,'p_program_vars','parser.py',87),
  ('s_type -> INT','s_type',1,'p_s_type','parser.py',97),
  ('s_type -> FLOAT','s_type',1,'p_s_type','parser.py',98),
  ('s_type -> CHAR','s_type',1,'p_s_type','parser.py',99),
  ('c_type -> DATAFRAME','c_type',1,'p_c_type','parser.py',106),
  ('c_type -> DATE','c_type',1,'p_c_type','parser.py',107),
  ('var_multiple -> var_type','var_multiple',1,'p_var_multiple','parser.py',114),
  ('var_multiple -> empty','var_multiple',1,'p_var_multiple','parser.py',115),
  ('var_c_type -> c_type id_saver add_c_var var_c_type2 SEMICOLON var_multiple','var_c_type',6,'p_var_c_type','parser.py',118),
  ('var_c_type2 -> COMMA id_saver add_c_var var_c_type2','var_c_type2',4,'p_var_c_type2','parser.py',121),
  ('var_c_type2 -> empty','var_c_type2',1,'p_var_c_type2','parser.py',122),
  ('add_c_var -> empty','add_c_var',1,'p_add_c_var','parser.py',125),
  ('var_s_type -> s_type id_saver var_s_array add_s_var var_s_type2 SEMICOLON var_multiple','var_s_type',7,'p_var_s_type','parser.py',131),
  ('var_s_type2 -> COMMA id_saver var_s_array add_s_var var_s_type2','var_s_type2',5,'p_var_s_type2','parser.py',134),
  ('var_s_type2 -> empty','var_s_type2',1,'p_var_s_type2','parser.py',135),
  ('add_s_var -> empty','add_s_var',1,'p_add_s_var','parser.py',139),
  ('var_s_array -> LSQBRACKET var_s_dimesions RSQBRACKET var_s_matrix','var_s_array',4,'p_var_s_array','parser.py',147),
  ('var_s_array -> empty','var_s_array',1,'p_var_s_array','parser.py',148),
  ('var_s_matrix -> LSQBRACKET var_s_dimesions RSQBRACKET','var_s_matrix',3,'p_var_s_matrix','parser.py',151),
  ('var_s_matrix -> empty','var_s_matrix',1,'p_var_s_matrix','parser.py',152),
  ('var_s_dimesions -> CTE_INT empty','var_s_dimesions',2,'p_var_s_dimesions','parser.py',156),
  ('variable -> id_saver variable_array','variable',2,'p_variable','parser.py',173),
  ('variable_array -> LSQBRACKET exp RSQBRACKET variable_matrix','variable_array',4,'p_variable_array','parser.py',182),
  ('variable_array -> empty','variable_array',1,'p_variable_array','parser.py',183),
  ('variable_matrix -> LSQBRACKET exp RSQBRACKET','variable_matrix',3,'p_variable_matrix','parser.py',186),
  ('variable_matrix -> empty','variable_matrix',1,'p_variable_matrix','parser.py',187),
  ('program_function -> FUNCTION f_type id_saver func_creator LPAREN param RPAREN LBRACKET program_vars inner_body return RBRACKET program_function','program_function',13,'p_program_function','parser.py',193),
  ('program_function -> empty','program_function',1,'p_program_function','parser.py',194),
  ('f_type -> INT','f_type',1,'p_f_type','parser.py',199),
  ('f_type -> FLOAT','f_type',1,'p_f_type','parser.py',200),
  ('f_type -> CHAR','f_type',1,'p_f_type','parser.py',201),
  ('f_type -> VOID','f_type',1,'p_f_type','parser.py',202),
  ('func_creator -> empty','func_creator',1,'p_func_creator','parser.py',210),
  ('param -> s_type id_saver add_params param2','param',4,'p_param','parser.py',218),
  ('param2 -> COMMA s_type id_saver add_params param2','param2',5,'p_param2','parser.py',221),
  ('param2 -> empty','param2',1,'p_param2','parser.py',222),
  ('add_params -> empty','add_params',1,'p_add_params','parser.py',226),
  ('return -> RETURN exp SEMICOLON','return',3,'p_return','parser.py',233),
  ('return -> empty','return',1,'p_return','parser.py',234),
  ('program_main -> MAIN main_id LBRACKET program_vars inner_body RBRACKET','program_main',6,'p_program_main','parser.py',238),
  ('main_id -> empty','main_id',1,'p_main_id','parser.py',241),
  ('body -> LBRACKET inner_body RBRACKET','body',3,'p_body','parser.py',248),
  ('inner_body -> statement inner_body','inner_body',2,'p_inner_body','parser.py',252),
  ('inner_body -> empty','inner_body',1,'p_inner_body','parser.py',253),
  ('assign -> variable keep_assign specialf_assign end_assign','assign',4,'p_assign','parser.py',258),
  ('specialf_assign -> exp','specialf_assign',1,'p_specialf_assign','parser.py',262),
  ('specialf_assign -> special_function','specialf_assign',1,'p_specialf_assign','parser.py',263),
  ('specialf_assign -> read','specialf_assign',1,'p_specialf_assign','parser.py',264),
  ('keep_assign -> ASSIGN empty','keep_assign',2,'p_keep_assign','parser.py',268),
  ('end_assign -> SEMICOLON empty','end_assign',2,'p_end_assign','parser.py',284),
  ('condition -> IF LPAREN exp RPAREN condition_GOTOF body condition2 SEMICOLON','condition',8,'p_condition','parser.py',289),
  ('condition2 -> ELSE body','condition2',2,'p_condition2','parser.py',292),
  ('condition2 -> empty','condition2',1,'p_condition2','parser.py',293),
  ('condition_GOTOF -> empty','condition_GOTOF',1,'p_condition_GOTOF','parser.py',297),
  ('print -> PRINT LPAREN print_many RPAREN SEMICOLON','print',5,'p_print','parser.py',305),
  ('print_type -> exp','print_type',1,'p_print_type','parser.py',309),
  ('print_many -> print_type print_many2','print_many',2,'p_print_many','parser.py',312),
  ('print_many2 -> COMMA print_many','print_many2',2,'p_print_many2','parser.py',315),
  ('print_many2 -> empty','print_many2',1,'p_print_many2','parser.py',316),
  ('read -> READ LPAREN variable RPAREN','read',4,'p_read','parser.py',322),
  ('cycle -> for','cycle',1,'p_cycle','parser.py',326),
  ('cycle -> while','cycle',1,'p_cycle','parser.py',327),
  ('while -> DO body WHILE LPAREN exp RPAREN SEMICOLON','while',7,'p_while','parser.py',331),
  ('for -> FOR LPAREN ID TO for_end RPAREN body SEMICOLON','for',8,'p_for','parser.py',335),
  ('for_end -> int_const_saver','for_end',1,'p_for_end','parser.py',338),
  ('for_end -> ID','for_end',1,'p_for_end','parser.py',339),
  ('call_function -> function_saver LPAREN exp exp_many RPAREN','call_function',5,'p_call_function','parser.py',344),
  ('function_saver -> ID empty','function_saver',2,'p_function_saver','parser.py',349),
  ('exp_many -> COMMA exp exp_many','exp_many',3,'p_exp_many','parser.py',356),
  ('exp_many -> empty','exp_many',1,'p_exp_many','parser.py',357),
  ('statement -> assign','statement',1,'p_statement','parser.py',361),
  ('statement -> condition','statement',1,'p_statement','parser.py',362),
  ('statement -> print','statement',1,'p_statement','parser.py',363),
  ('statement -> cycle','statement',1,'p_statement','parser.py',364),
  ('statement -> call_function','statement',1,'p_statement','parser.py',365),
  ('special_function -> exploration','special_function',1,'p_special_function','parser.py',369),
  ('special_function -> financial_state','special_function',1,'p_special_function','parser.py',370),
  ('special_function -> dummi_regression','special_function',1,'p_special_function','parser.py',371),
  ('special_function -> season_analysis','special_function',1,'p_special_function','parser.py',372),
  ('special_function -> trend_prediction','special_function',1,'p_special_function','parser.py',373),
  ('special_function -> model_predict','special_function',1,'p_special_function','parser.py',374),
  ('exploration -> EXPLORATION LPAREN variable explore_var explor_cte RPAREN','exploration',6,'p_exploration','parser.py',380),
  ('explore_var -> COMMA variable','explore_var',2,'p_explore_var','parser.py',383),
  ('explore_var -> empty','explore_var',1,'p_explore_var','parser.py',384),
  ('explor_cte -> COMMA int_const_saver','explor_cte',2,'p_explor_cte','parser.py',387),
  ('explor_cte -> empty','explor_cte',1,'p_explor_cte','parser.py',388),
  ('financial_state -> FINANCIAL_STATE LPAREN variable COMMA variable COMMA variable COMMA variable RPAREN','financial_state',10,'p_financial_state','parser.py',392),
  ('season_analysis -> SEASON_ANALYSIS LPAREN variable RPAREN','season_analysis',4,'p_season_analysis','parser.py',396),
  ('trend_prediction -> TREND_PREDICTION LPAREN variable COMMA int_const_saver COMMA int_const_saver COMMA int_const_saver RPAREN','trend_prediction',10,'p_trend_prediction','parser.py',402),
  ('dummi_regression -> DUMMI_REGRESSION LPAREN variable COMMA variable dr_array dr_int RPAREN','dummi_regression',8,'p_dummi_regression','parser.py',406),
  ('dr_array -> COMMA LSQBRACKET CTE_CHAR dr_array_mp RSQBRACKET','dr_array',5,'p_dr_array','parser.py',409),
  ('dr_array -> empty','dr_array',1,'p_dr_array','parser.py',410),
  ('dr_array_mp -> COMMA CTE_CHAR dr_array_mp','dr_array_mp',3,'p_dr_array_mp','parser.py',413),
  ('dr_array_mp -> empty','dr_array_mp',1,'p_dr_array_mp','parser.py',414),
  ('dr_int -> COMMA int_const_saver','dr_int',2,'p_dr_int','parser.py',417),
  ('dr_int -> empty','dr_int',1,'p_dr_int','parser.py',418),
  ('model_predict -> MODEL_PREDICT LPAREN variable COMMA variable COMMA RPAREN','model_predict',7,'p_model_predict','parser.py',422),
  ('exp -> t_exp exp_or','exp',2,'p_exp','parser.py',427),
  ('exp_or -> exp_keep_or release_exp exp','exp_or',3,'p_exp_or','parser.py',430),
  ('exp_or -> empty','exp_or',1,'p_exp_or','parser.py',431),
  ('exp_keep_or -> OR','exp_keep_or',1,'p_exp_keep_or','parser.py',434),
  ('t_exp -> expression release_exp t_exp_and','t_exp',3,'p_t_exp','parser.py',440),
  ('t_exp_and -> AND keep_and t_exp','t_exp_and',3,'p_t_exp_and','parser.py',445),
  ('t_exp_and -> empty','t_exp_and',1,'p_t_exp_and','parser.py',446),
  ('keep_and -> empty','keep_and',1,'p_keep_and','parser.py',449),
  ('m_exp -> term release_exp m_exp_sr','m_exp',3,'p_m_exp','parser.py',455),
  ('m_exp_sr -> m_exp_sr_2 m_exp','m_exp_sr',2,'p_m_exp_sr','parser.py',462),
  ('m_exp_sr -> empty','m_exp_sr',1,'p_m_exp_sr','parser.py',463),
  ('m_exp_sr_2 -> PLUS','m_exp_sr_2',1,'p_m_exp_sr_2','parser.py',466),
  ('m_exp_sr_2 -> MINUS','m_exp_sr_2',1,'p_m_exp_sr_2','parser.py',467),
  ('term -> sub_factor release_exp term_pc','term',3,'p_term','parser.py',474),
  ('term_pc -> term_pc_2 term','term_pc',2,'p_term_pc','parser.py',480),
  ('term_pc -> empty','term_pc',1,'p_term_pc','parser.py',481),
  ('term_pc_2 -> MULTIPLY','term_pc_2',1,'p_term_pc_2','parser.py',484),
  ('term_pc_2 -> DIVIDE','term_pc_2',1,'p_term_pc_2','parser.py',485),
  ('term_pc_2 -> MODULE','term_pc_2',1,'p_term_pc_2','parser.py',486),
  ('sub_factor -> factor release_exp sub_factor_pc','sub_factor',3,'p_sub_factor','parser.py',491),
  ('sub_factor_pc -> sub_factor_pc_2 sub_factor','sub_factor_pc',2,'p_sub_factor_pc','parser.py',497),
  ('sub_factor_pc -> empty','sub_factor_pc',1,'p_sub_factor_pc','parser.py',498),
  ('sub_factor_pc_2 -> POWER empty','sub_factor_pc_2',2,'p_sub_factor_pc_2','parser.py',501),
  ('expression -> m_exp release_exp expression_comp','expression',3,'p_expression','parser.py',507),
  ('expression_comp -> expression_comp_2 m_exp','expression_comp',2,'p_expression_comp','parser.py',513),
  ('expression_comp -> empty','expression_comp',1,'p_expression_comp','parser.py',514),
  ('expression_comp_2 -> GTHAN','expression_comp_2',1,'p_expression_comp_2','parser.py',517),
  ('expression_comp_2 -> EQUAL','expression_comp_2',1,'p_expression_comp_2','parser.py',518),
  ('expression_comp_2 -> NOTEQUAL','expression_comp_2',1,'p_expression_comp_2','parser.py',519),
  ('expression_comp_2 -> LTHAN','expression_comp_2',1,'p_expression_comp_2','parser.py',520),
  ('factor -> factor_exp','factor',1,'p_factor','parser.py',530),
  ('factor -> factor_cte','factor',1,'p_factor','parser.py',531),
  ('factor -> variable','factor',1,'p_factor','parser.py',532),
  ('factor -> call_function','factor',1,'p_factor','parser.py',533),
  ('factor_exp -> false_button exp release_false_button','factor_exp',3,'p_factor_exp','parser.py',539),
  ('false_button -> LPAREN','false_button',1,'p_false_button','parser.py',544),
  ('release_false_button -> RPAREN','release_false_button',1,'p_release_false_button','parser.py',550),
  ('factor_cte -> CTE_FLOAT','factor_cte',1,'p_factor_cte','parser.py',557),
  ('factor_cte -> CTE_INT','factor_cte',1,'p_factor_cte','parser.py',558),
  ('factor_cte -> CTE_CHAR','factor_cte',1,'p_factor_cte','parser.py',559),
]
