
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS ASSIGN CHAR COLON COMMA CTE_CHAR CTE_FLOAT CTE_INT DATAFRAME DATE DIVIDE DO DUMMI_REGRESSION ELSE END EQUAL EXPLORATION FINANCIAL_STATE FLOAT FOR FROM FUNCTION GTHAN ID IF IMPORT INT LBRACKET LPAREN LSQBRACKET LTHAN MAIN MINUS MODEL_PREDICT MODULE MULTIPLY NOTEQUAL OR PLUS POWER PRINT PROGRAM RBRACKET READ RETURN RPAREN RSQBRACKET SEASON_ANALYSIS SEMICOLON TO TREND_PREDICTION VAR VOID WHILEprogram : PROGRAM ID SEMICOLON program_libraries program_vars program_function program_main ENDempty : id_saver : ID empty program_libraries : from_library import_library \n                         | emptyfrom_library : FROM ID\n                    | emptyimport_library : IMPORT ID AS ID  program_librariesvar_type : var_c_type\n                | var_s_typeprogram_vars : VAR var_type  \n                    | emptys_type : INT \n              | FLOAT\n              | CHARc_type : DATAFRAME\n              | DATEvar_multiple : var_type\n                    | emptyvar_c_type : c_type id_saver add_c_var var_c_type2 SEMICOLON var_multiplevar_c_type2 : COMMA id_saver add_c_var var_c_type2\n                   | emptyadd_c_var : emptyvar_s_type : s_type id_saver var_s_array add_s_var var_s_type2 SEMICOLON var_multiplevar_s_type2 : COMMA id_saver var_s_array add_s_var var_s_type2\n                   | emptyadd_s_var : emptyvar_s_array : LSQBRACKET var_s_dimesions RSQBRACKET var_s_matrix \n                   | emptyvar_s_matrix : LSQBRACKET var_s_dimesions RSQBRACKET\n                    | emptyvar_s_dimesions : CTE_INT emptyvariable : id_saver variable_arrayvariable_array : LSQBRACKET exp RSQBRACKET variable_matrix\n                      | emptyvariable_matrix : LSQBRACKET exp RSQBRACKET\n                       | emptyprogram_function : FUNCTION f_type id_saver func_creator LPAREN param RPAREN LBRACKET program_vars inner_body return RBRACKET program_function\n                        | emptyf_type : INT \n              | FLOAT\n              | CHAR\n              | VOIDfunc_creator : emptyparam : s_type id_saver add_params param2param2 : COMMA s_type id_saver add_params param2\n              | emptyadd_params : emptyreturn : RETURN exp SEMICOLON\n              | emptyprogram_main : MAIN main_id LBRACKET program_vars inner_body RBRACKETmain_id : emptybody : LBRACKET inner_body RBRACKETinner_body :  statement inner_body\n                  | emptyassign : variable ASSIGN specialf_assign SEMICOLONspecialf_assign : exp\n                       | special_function\n                       | readcondition : IF LPAREN exp RPAREN body condition2 SEMICOLONcondition2 : ELSE body\n                 | emptyprint : PRINT LPAREN print_many RPAREN SEMICOLONprint_type : expprint_many : print_type print_many2 print_many2 : COMMA print_type print_many2\n                   | emptyread : READ LPAREN variable RPARENcycle : for\n             | whilewhile : DO body WHILE LPAREN exp RPAREN SEMICOLONfor : FOR LPAREN ID TO for_end RPAREN body SEMICOLONfor_end : CTE_INT\n               | IDcall_function : ID LPAREN exp exp_many RPAREN exp_many : COMMA exp exp_many\n                | emptystatement : assign\n                 | condition\n                 | print\n                 | cycle\n                 | call_functionspecial_function : exploration\n                        | financial_state\n                        | dummi_regression\n                        | season_analysis\n                        | trend_prediction\n                        | model_predictexploration : EXPLORATION LPAREN variable explore_var explor_cte RPARENexplore_var : COMMA variable\n                   | emptyexplor_cte : COMMA CTE_INT\n                  | emptyfinancial_state : FINANCIAL_STATE LPAREN variable COMMA variable COMMA variable COMMA variable RPARENseason_analysis : SEASON_ANALYSIS LPAREN variable RPARENtrend_prediction : TREND_PREDICTION LPAREN variable COMMA CTE_INT COMMA CTE_INT COMMA CTE_INT RPARENdummi_regression : DUMMI_REGRESSION LPAREN variable COMMA variable dr_array dr_int RPARENdr_array : COMMA LSQBRACKET CTE_CHAR dr_array_mp RSQBRACKET\n                | emptydr_array_mp : COMMA CTE_CHAR dr_array_mp\n                   | emptydr_int : COMMA CTE_INT\n              | emptymodel_predict : MODEL_PREDICT LPAREN variable COMMA variable COMMA RPARENexp : t_exp exp_orexp_or : OR exp\n              | emptyt_exp : expression t_exp_andt_exp_and : AND t_exp\n                 | emptyexpression : m_exp expression_compexpression_comp : expression_comp_2 m_exp\n                       | emptyexpression_comp_2 : EQUAL\n                         | NOTEQUAL\n                         | LTHAN\n                         | GTHANm_exp : term m_exp_srm_exp_sr : m_exp_sr_2 m_exp\n                | emptym_exp_sr_2 : PLUS\n                  | MINUSterm : sub_factor term_pcterm_pc : term_pc_2 term\n               | emptyterm_pc_2 : MULTIPLY\n                 | DIVIDE\n                 | MODULEsub_factor : factor sub_factor_pcsub_factor_pc : MODULE sub_factor\n                     | emptyfactor : factor_exp\n              | factor_cte\n              | variable\n              | call_functionfactor_exp : LPAREN exp RPARENfactor_cte : CTE_INT\n                  | CTE_FLOAT\n                  | CTE_CHAR'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,40,],[0,-1,]),'ID':([2,8,11,13,18,19,20,21,22,23,24,25,26,27,31,32,33,34,35,39,51,55,62,64,67,72,74,75,76,77,78,82,83,89,90,91,92,94,101,102,103,104,106,108,110,114,130,157,162,164,166,169,171,172,173,174,175,176,178,180,181,182,183,185,187,188,190,192,193,194,196,201,204,207,208,210,230,232,234,242,245,247,248,251,261,272,276,282,288,299,],[3,14,-12,28,-11,-9,-10,37,37,-16,-17,-13,-14,-15,37,-40,-41,-42,-43,50,-2,37,84,-2,37,84,-78,-79,-80,-81,-82,-69,-70,37,-20,-18,-19,-2,84,84,84,84,84,154,84,-24,84,-2,-56,84,37,84,37,37,37,37,37,37,84,-114,-115,-116,-117,84,-121,-122,84,-126,-127,-128,84,84,84,237,84,84,-63,-75,84,37,37,37,37,37,84,-60,-71,37,-72,37,]),'SEMICOLON':([3,36,37,38,44,45,46,47,49,54,56,57,58,65,66,68,69,84,85,93,95,97,98,105,107,113,115,117,118,119,120,121,122,123,124,125,126,127,128,131,137,139,140,141,142,143,144,145,146,147,160,161,163,165,168,170,177,179,184,186,189,191,195,197,199,206,209,214,215,217,218,225,226,227,228,229,232,235,236,243,249,252,254,259,273,274,275,278,280,298,302,309,312,],[4,-2,-2,-2,-2,-23,-3,-2,-29,64,-22,-2,-27,-2,94,-26,-2,-2,-2,-2,-2,-28,-31,-33,-35,-21,-2,-134,162,-57,-58,-59,-2,-83,-84,-85,-86,-87,-88,-2,-137,-2,-2,-2,-2,-132,-133,-135,-138,-139,-2,-30,-105,-107,-108,-110,-111,-113,-118,-120,-123,-125,-129,-131,230,-2,-53,-25,-106,-136,-109,-112,-119,-124,-130,-2,-75,-34,-37,-68,-95,272,-62,276,-61,-36,288,290,-89,-104,-97,-94,-96,]),'FROM':([4,50,],[8,8,]),'VAR':([4,5,7,12,50,51,61,157,],[-2,10,-5,-4,-2,10,-8,10,]),'FUNCTION':([4,5,7,9,11,12,18,19,20,50,61,64,90,91,92,94,114,277,],[-2,-2,-5,16,-12,-4,-11,-9,-10,-2,-8,-2,-20,-18,-19,-2,-24,16,]),'MAIN':([4,5,7,9,11,12,15,17,18,19,20,50,61,64,90,91,92,94,114,277,289,],[-2,-2,-5,-2,-12,-4,30,-39,-11,-9,-10,-2,-8,-2,-20,-18,-19,-2,-24,-2,-38,]),'IMPORT':([4,6,7,14,50,],[-2,13,-7,-6,-2,]),'DATAFRAME':([10,64,94,],[23,23,23,]),'DATE':([10,64,94,],[24,24,24,]),'INT':([10,16,63,64,94,212,],[25,32,25,25,25,25,]),'FLOAT':([10,16,63,64,94,212,],[26,33,26,26,26,26,]),'CHAR':([10,16,63,64,94,212,],[27,34,27,27,27,27,]),'IF':([11,18,19,20,51,62,64,72,74,75,76,77,78,82,83,90,91,92,94,110,114,157,162,210,230,232,272,276,288,],[-12,-11,-9,-10,-2,80,-2,80,-78,-79,-80,-81,-82,-69,-70,-20,-18,-19,-2,80,-24,-2,-56,80,-63,-75,-60,-71,-72,]),'PRINT':([11,18,19,20,51,62,64,72,74,75,76,77,78,82,83,90,91,92,94,110,114,157,162,210,230,232,272,276,288,],[-12,-11,-9,-10,-2,81,-2,81,-78,-79,-80,-81,-82,-69,-70,-20,-18,-19,-2,81,-24,-2,-56,81,-63,-75,-60,-71,-72,]),'FOR':([11,18,19,20,51,62,64,72,74,75,76,77,78,82,83,90,91,92,94,110,114,157,162,210,230,232,272,276,288,],[-12,-11,-9,-10,-2,86,-2,86,-78,-79,-80,-81,-82,-69,-70,-20,-18,-19,-2,86,-24,-2,-56,86,-63,-75,-60,-71,-72,]),'DO':([11,18,19,20,51,62,64,72,74,75,76,77,78,82,83,90,91,92,94,110,114,157,162,210,230,232,272,276,288,],[-12,-11,-9,-10,-2,87,-2,87,-78,-79,-80,-81,-82,-69,-70,-20,-18,-19,-2,87,-24,-2,-56,87,-63,-75,-60,-71,-72,]),'RBRACKET':([11,18,19,20,51,62,64,71,72,73,74,75,76,77,78,82,83,90,91,92,94,100,110,114,156,157,162,210,230,232,241,260,262,272,276,288,290,],[-12,-11,-9,-10,-2,-2,-2,99,-2,-55,-78,-79,-80,-81,-82,-69,-70,-20,-18,-19,-2,-54,-2,-24,209,-2,-56,-2,-63,-75,-2,277,-50,-60,-71,-72,-49,]),'RETURN':([11,18,19,20,64,72,73,74,75,76,77,78,82,83,90,91,92,94,100,114,157,162,210,230,232,241,272,276,288,],[-12,-11,-9,-10,-2,-2,-55,-78,-79,-80,-81,-82,-69,-70,-20,-18,-19,-2,-54,-24,-2,-56,-2,-63,-75,261,-60,-71,-72,]),'VOID':([16,],[35,]),'AS':([28,],[39,]),'END':([29,99,],[40,-51,]),'LBRACKET':([30,41,42,87,111,198,253,258,],[-2,51,-52,110,157,110,110,110,]),'COMMA':([36,37,38,44,45,46,47,49,57,58,65,69,84,85,93,95,97,98,105,107,112,115,117,122,131,137,139,140,141,142,143,144,145,146,147,150,151,152,158,159,160,161,163,165,168,170,177,179,184,186,189,191,195,197,206,215,217,218,219,220,221,223,224,225,226,227,228,231,232,233,235,236,244,246,263,267,268,269,270,271,274,279,284,285,292,297,300,310,311,],[-2,-2,-2,55,-23,-3,-2,-29,67,-27,-2,-2,-2,-2,55,-2,-28,-31,-33,-35,-2,-2,-134,-2,-2,-137,-2,-2,-2,-2,-132,-133,-135,-138,-139,201,-64,204,212,-48,67,-30,-105,-107,-108,-110,-111,-113,-118,-120,-123,-125,-129,-131,-2,-106,-136,-109,245,247,248,250,251,-112,-119,-124,-130,201,-75,204,-34,-37,265,-91,-2,-90,282,283,286,287,-36,212,294,-99,299,303,305,305,-98,]),'LSQBRACKET':([37,38,46,69,84,85,95,206,283,],[-2,48,-3,96,-2,106,48,234,293,]),'LPAREN':([37,43,46,52,53,80,81,84,86,101,102,103,104,106,129,130,132,133,134,135,136,138,155,164,169,178,180,181,182,183,185,187,188,190,192,193,194,196,201,204,208,234,261,],[-2,-2,-3,63,-44,102,103,104,108,130,130,130,130,130,166,130,171,172,173,174,175,176,208,130,130,130,-114,-115,-116,-117,130,-121,-122,130,-126,-127,-128,130,130,130,130,130,130,]),'RPAREN':([37,46,84,85,88,105,107,112,117,122,131,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,158,159,163,165,167,168,170,177,179,184,186,189,191,195,197,200,202,203,205,206,211,213,215,216,217,218,219,222,225,226,227,228,231,232,233,235,236,237,238,239,240,244,246,255,256,263,264,266,267,269,274,279,281,284,285,287,291,295,296,301,304,308,311,],[-2,-3,-2,-2,111,-33,-35,-2,-134,-2,-2,-137,-2,-2,-2,-2,-132,-133,-135,-138,-139,198,199,-2,-64,-2,-2,-48,-105,-107,217,-108,-110,-111,-113,-118,-120,-123,-125,-129,-131,-65,-67,232,-77,-2,-45,-47,-106,243,-136,-109,-2,249,-112,-119,-124,-130,-2,-75,-2,-34,-37,-74,258,-73,259,-2,-91,-66,-76,-2,280,-93,-90,-2,-36,-2,-92,-2,-99,298,-46,302,-103,-102,309,312,-98,]),'ASSIGN':([46,79,84,85,105,107,206,235,236,274,],[-3,101,-2,-2,-33,-35,-2,-34,-37,-36,]),'MODULE':([46,84,85,105,107,117,137,141,142,143,144,145,146,147,195,197,206,217,228,232,235,236,274,],[-3,-2,-2,-33,-35,-134,-137,194,196,-132,-133,-135,-138,-139,-129,-131,-2,-136,-130,-75,-34,-37,-36,]),'MULTIPLY':([46,84,85,105,107,117,137,141,142,143,144,145,146,147,195,197,206,217,228,232,235,236,274,],[-3,-2,-2,-33,-35,-134,-137,192,-2,-132,-133,-135,-138,-139,-129,-131,-2,-136,-130,-75,-34,-37,-36,]),'DIVIDE':([46,84,85,105,107,117,137,141,142,143,144,145,146,147,195,197,206,217,228,232,235,236,274,],[-3,-2,-2,-33,-35,-134,-137,193,-2,-132,-133,-135,-138,-139,-129,-131,-2,-136,-130,-75,-34,-37,-36,]),'PLUS':([46,84,85,105,107,117,137,140,141,142,143,144,145,146,147,189,191,195,197,206,217,227,228,232,235,236,274,],[-3,-2,-2,-33,-35,-134,-137,187,-2,-2,-132,-133,-135,-138,-139,-123,-125,-129,-131,-2,-136,-124,-130,-75,-34,-37,-36,]),'MINUS':([46,84,85,105,107,117,137,140,141,142,143,144,145,146,147,189,191,195,197,206,217,227,228,232,235,236,274,],[-3,-2,-2,-33,-35,-134,-137,188,-2,-2,-132,-133,-135,-138,-139,-123,-125,-129,-131,-2,-136,-124,-130,-75,-34,-37,-36,]),'EQUAL':([46,84,85,105,107,117,137,139,140,141,142,143,144,145,146,147,184,186,189,191,195,197,206,217,226,227,228,232,235,236,274,],[-3,-2,-2,-33,-35,-134,-137,180,-2,-2,-2,-132,-133,-135,-138,-139,-118,-120,-123,-125,-129,-131,-2,-136,-119,-124,-130,-75,-34,-37,-36,]),'NOTEQUAL':([46,84,85,105,107,117,137,139,140,141,142,143,144,145,146,147,184,186,189,191,195,197,206,217,226,227,228,232,235,236,274,],[-3,-2,-2,-33,-35,-134,-137,181,-2,-2,-2,-132,-133,-135,-138,-139,-118,-120,-123,-125,-129,-131,-2,-136,-119,-124,-130,-75,-34,-37,-36,]),'LTHAN':([46,84,85,105,107,117,137,139,140,141,142,143,144,145,146,147,184,186,189,191,195,197,206,217,226,227,228,232,235,236,274,],[-3,-2,-2,-33,-35,-134,-137,182,-2,-2,-2,-132,-133,-135,-138,-139,-118,-120,-123,-125,-129,-131,-2,-136,-119,-124,-130,-75,-34,-37,-36,]),'GTHAN':([46,84,85,105,107,117,137,139,140,141,142,143,144,145,146,147,184,186,189,191,195,197,206,217,226,227,228,232,235,236,274,],[-3,-2,-2,-33,-35,-134,-137,183,-2,-2,-2,-132,-133,-135,-138,-139,-118,-120,-123,-125,-129,-131,-2,-136,-119,-124,-130,-75,-34,-37,-36,]),'AND':([46,84,85,105,107,117,131,137,139,140,141,142,143,144,145,146,147,177,179,184,186,189,191,195,197,206,217,225,226,227,228,232,235,236,274,],[-3,-2,-2,-33,-35,-134,169,-137,-2,-2,-2,-2,-132,-133,-135,-138,-139,-111,-113,-118,-120,-123,-125,-129,-131,-2,-136,-112,-119,-124,-130,-75,-34,-37,-36,]),'OR':([46,84,85,105,107,117,122,131,137,139,140,141,142,143,144,145,146,147,168,170,177,179,184,186,189,191,195,197,206,217,218,225,226,227,228,232,235,236,274,],[-3,-2,-2,-33,-35,-134,164,-2,-137,-2,-2,-2,-2,-132,-133,-135,-138,-139,-108,-110,-111,-113,-118,-120,-123,-125,-129,-131,-2,-136,-109,-112,-119,-124,-130,-75,-34,-37,-36,]),'RSQBRACKET':([46,59,60,70,84,85,105,107,116,117,122,131,137,139,140,141,142,143,144,145,146,147,153,163,165,168,170,177,179,184,186,189,191,195,197,206,215,217,218,225,226,227,228,232,235,236,257,274,300,306,307,310,313,],[-3,69,-2,-32,-2,-2,-33,-35,161,-134,-2,-2,-137,-2,-2,-2,-2,-132,-133,-135,-138,-139,206,-105,-107,-108,-110,-111,-113,-118,-120,-123,-125,-129,-131,-2,-106,-136,-109,-112,-119,-124,-130,-75,-34,-37,274,-36,-2,311,-101,-2,-100,]),'CTE_INT':([48,96,101,102,103,104,106,130,164,169,178,180,181,182,183,185,187,188,190,192,193,194,196,201,204,207,208,234,250,261,265,286,294,303,],[60,60,137,137,137,137,137,137,137,137,137,-114,-115,-116,-117,137,-121,-122,137,-126,-127,-128,137,137,137,239,137,137,270,137,281,297,301,308,]),'READ':([101,],[129,]),'EXPLORATION':([101,],[132,]),'FINANCIAL_STATE':([101,],[133,]),'DUMMI_REGRESSION':([101,],[134,]),'SEASON_ANALYSIS':([101,],[135,]),'TREND_PREDICTION':([101,],[136,]),'MODEL_PREDICT':([101,],[138,]),'CTE_FLOAT':([101,102,103,104,106,130,164,169,178,180,181,182,183,185,187,188,190,192,193,194,196,201,204,208,234,261,],[146,146,146,146,146,146,146,146,146,-114,-115,-116,-117,146,-121,-122,146,-126,-127,-128,146,146,146,146,146,146,]),'CTE_CHAR':([101,102,103,104,106,130,164,169,178,180,181,182,183,185,187,188,190,192,193,194,196,201,204,208,234,261,293,305,],[147,147,147,147,147,147,147,147,147,-114,-115,-116,-117,147,-121,-122,147,-126,-127,-128,147,147,147,147,147,147,300,310,]),'WHILE':([109,209,],[155,-53,]),'TO':([154,],[207,]),'ELSE':([209,229,],[-53,253,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_libraries':([4,50,],[5,61,]),'from_library':([4,50,],[6,6,]),'empty':([4,5,9,30,36,37,38,43,44,47,50,51,57,60,62,64,65,69,72,84,85,93,94,95,110,112,115,122,131,139,140,141,142,150,152,157,158,160,206,210,219,229,231,233,241,244,263,269,277,279,284,300,310,],[7,11,17,42,45,46,49,53,56,58,7,11,68,70,73,92,45,98,73,46,107,56,92,49,73,159,58,165,170,179,186,191,197,202,205,11,213,68,236,73,246,254,202,205,262,266,159,285,17,213,296,307,307,]),'program_vars':([5,51,157,],[9,62,210,]),'import_library':([6,],[12,]),'program_function':([9,277,],[15,289,]),'var_type':([10,64,94,],[18,91,91,]),'var_c_type':([10,64,94,],[19,19,19,]),'var_s_type':([10,64,94,],[20,20,20,]),'c_type':([10,64,94,],[21,21,21,]),'s_type':([10,63,64,94,212,],[22,89,22,22,242,]),'program_main':([15,],[29,]),'f_type':([16,],[31,]),'id_saver':([21,22,31,55,62,67,72,89,101,102,103,104,106,110,130,164,166,169,171,172,173,174,175,176,178,185,190,196,201,204,208,210,234,242,245,247,248,251,261,282,299,],[36,38,43,65,85,95,85,112,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,263,85,85,85,85,85,85,85,]),'main_id':([30,],[41,]),'add_c_var':([36,65,],[44,93,]),'var_s_array':([38,95,],[47,115,]),'func_creator':([43,],[52,]),'var_c_type2':([44,93,],[54,113,]),'add_s_var':([47,115,],[57,160,]),'var_s_dimesions':([48,96,],[59,116,]),'var_s_type2':([57,160,],[66,214,]),'inner_body':([62,72,110,210,],[71,100,156,241,]),'statement':([62,72,110,210,],[72,72,72,72,]),'assign':([62,72,110,210,],[74,74,74,74,]),'condition':([62,72,110,210,],[75,75,75,75,]),'print':([62,72,110,210,],[76,76,76,76,]),'cycle':([62,72,110,210,],[77,77,77,77,]),'call_function':([62,72,101,102,103,104,106,110,130,164,169,178,185,190,196,201,204,208,210,234,261,],[78,78,145,145,145,145,145,78,145,145,145,145,145,145,145,145,145,145,78,145,145,]),'variable':([62,72,101,102,103,104,106,110,130,164,166,169,171,172,173,174,175,176,178,185,190,196,201,204,208,210,234,245,247,248,251,261,282,299,],[79,79,117,117,117,117,117,79,117,117,216,117,219,220,221,222,223,224,117,117,117,117,117,117,117,79,117,267,268,269,271,117,292,304,]),'for':([62,72,110,210,],[82,82,82,82,]),'while':([62,72,110,210,],[83,83,83,83,]),'param':([63,],[88,]),'var_multiple':([64,94,],[90,114,]),'var_s_matrix':([69,],[97,]),'variable_array':([85,],[105,]),'body':([87,198,253,258,],[109,229,273,275,]),'specialf_assign':([101,],[118,]),'exp':([101,102,103,104,106,130,164,201,204,208,234,261,],[119,148,151,152,153,167,215,151,233,240,257,278,]),'special_function':([101,],[120,]),'read':([101,],[121,]),'t_exp':([101,102,103,104,106,130,164,169,201,204,208,234,261,],[122,122,122,122,122,122,122,218,122,122,122,122,122,]),'exploration':([101,],[123,]),'financial_state':([101,],[124,]),'dummi_regression':([101,],[125,]),'season_analysis':([101,],[126,]),'trend_prediction':([101,],[127,]),'model_predict':([101,],[128,]),'expression':([101,102,103,104,106,130,164,169,201,204,208,234,261,],[131,131,131,131,131,131,131,131,131,131,131,131,131,]),'m_exp':([101,102,103,104,106,130,164,169,178,185,201,204,208,234,261,],[139,139,139,139,139,139,139,139,225,226,139,139,139,139,139,]),'term':([101,102,103,104,106,130,164,169,178,185,190,201,204,208,234,261,],[140,140,140,140,140,140,140,140,140,140,227,140,140,140,140,140,]),'sub_factor':([101,102,103,104,106,130,164,169,178,185,190,196,201,204,208,234,261,],[141,141,141,141,141,141,141,141,141,141,141,228,141,141,141,141,141,]),'factor':([101,102,103,104,106,130,164,169,178,185,190,196,201,204,208,234,261,],[142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,]),'factor_exp':([101,102,103,104,106,130,164,169,178,185,190,196,201,204,208,234,261,],[143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,]),'factor_cte':([101,102,103,104,106,130,164,169,178,185,190,196,201,204,208,234,261,],[144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,]),'print_many':([103,],[149,]),'print_type':([103,201,],[150,231,]),'add_params':([112,263,],[158,279,]),'exp_or':([122,],[163,]),'t_exp_and':([131,],[168,]),'expression_comp':([139,],[177,]),'expression_comp_2':([139,],[178,]),'m_exp_sr':([140,],[184,]),'m_exp_sr_2':([140,],[185,]),'term_pc':([141,],[189,]),'term_pc_2':([141,],[190,]),'sub_factor_pc':([142,],[195,]),'print_many2':([150,231,],[200,255,]),'exp_many':([152,233,],[203,256,]),'param2':([158,279,],[211,291,]),'variable_matrix':([206,],[235,]),'for_end':([207,],[238,]),'explore_var':([219,],[244,]),'condition2':([229,],[252,]),'return':([241,],[260,]),'explor_cte':([244,],[264,]),'dr_array':([269,],[284,]),'dr_int':([284,],[295,]),'dr_array_mp':([300,310,],[306,313,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON program_libraries program_vars program_function program_main END','program',8,'p_program','parser.py',25),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',30),
  ('id_saver -> ID empty','id_saver',2,'p_id_saver','parser.py',37),
  ('program_libraries -> from_library import_library','program_libraries',2,'p_program_libraries','parser.py',46),
  ('program_libraries -> empty','program_libraries',1,'p_program_libraries','parser.py',47),
  ('from_library -> FROM ID','from_library',2,'p_from_library','parser.py',50),
  ('from_library -> empty','from_library',1,'p_from_library','parser.py',51),
  ('import_library -> IMPORT ID AS ID program_libraries','import_library',5,'p_import_library','parser.py',54),
  ('var_type -> var_c_type','var_type',1,'p_var_type','parser.py',59),
  ('var_type -> var_s_type','var_type',1,'p_var_type','parser.py',60),
  ('program_vars -> VAR var_type','program_vars',2,'p_program_vars','parser.py',63),
  ('program_vars -> empty','program_vars',1,'p_program_vars','parser.py',64),
  ('s_type -> INT','s_type',1,'p_s_type','parser.py',74),
  ('s_type -> FLOAT','s_type',1,'p_s_type','parser.py',75),
  ('s_type -> CHAR','s_type',1,'p_s_type','parser.py',76),
  ('c_type -> DATAFRAME','c_type',1,'p_c_type','parser.py',83),
  ('c_type -> DATE','c_type',1,'p_c_type','parser.py',84),
  ('var_multiple -> var_type','var_multiple',1,'p_var_multiple','parser.py',91),
  ('var_multiple -> empty','var_multiple',1,'p_var_multiple','parser.py',92),
  ('var_c_type -> c_type id_saver add_c_var var_c_type2 SEMICOLON var_multiple','var_c_type',6,'p_var_c_type','parser.py',95),
  ('var_c_type2 -> COMMA id_saver add_c_var var_c_type2','var_c_type2',4,'p_var_c_type2','parser.py',98),
  ('var_c_type2 -> empty','var_c_type2',1,'p_var_c_type2','parser.py',99),
  ('add_c_var -> empty','add_c_var',1,'p_add_c_var','parser.py',102),
  ('var_s_type -> s_type id_saver var_s_array add_s_var var_s_type2 SEMICOLON var_multiple','var_s_type',7,'p_var_s_type','parser.py',108),
  ('var_s_type2 -> COMMA id_saver var_s_array add_s_var var_s_type2','var_s_type2',5,'p_var_s_type2','parser.py',111),
  ('var_s_type2 -> empty','var_s_type2',1,'p_var_s_type2','parser.py',112),
  ('add_s_var -> empty','add_s_var',1,'p_add_s_var','parser.py',116),
  ('var_s_array -> LSQBRACKET var_s_dimesions RSQBRACKET var_s_matrix','var_s_array',4,'p_var_s_array','parser.py',122),
  ('var_s_array -> empty','var_s_array',1,'p_var_s_array','parser.py',123),
  ('var_s_matrix -> LSQBRACKET var_s_dimesions RSQBRACKET','var_s_matrix',3,'p_var_s_matrix','parser.py',126),
  ('var_s_matrix -> empty','var_s_matrix',1,'p_var_s_matrix','parser.py',127),
  ('var_s_dimesions -> CTE_INT empty','var_s_dimesions',2,'p_var_s_dimesions','parser.py',131),
  ('variable -> id_saver variable_array','variable',2,'p_variable','parser.py',141),
  ('variable_array -> LSQBRACKET exp RSQBRACKET variable_matrix','variable_array',4,'p_variable_array','parser.py',144),
  ('variable_array -> empty','variable_array',1,'p_variable_array','parser.py',145),
  ('variable_matrix -> LSQBRACKET exp RSQBRACKET','variable_matrix',3,'p_variable_matrix','parser.py',148),
  ('variable_matrix -> empty','variable_matrix',1,'p_variable_matrix','parser.py',149),
  ('program_function -> FUNCTION f_type id_saver func_creator LPAREN param RPAREN LBRACKET program_vars inner_body return RBRACKET program_function','program_function',13,'p_program_function','parser.py',155),
  ('program_function -> empty','program_function',1,'p_program_function','parser.py',156),
  ('f_type -> INT','f_type',1,'p_f_type','parser.py',159),
  ('f_type -> FLOAT','f_type',1,'p_f_type','parser.py',160),
  ('f_type -> CHAR','f_type',1,'p_f_type','parser.py',161),
  ('f_type -> VOID','f_type',1,'p_f_type','parser.py',162),
  ('func_creator -> empty','func_creator',1,'p_func_creator','parser.py',170),
  ('param -> s_type id_saver add_params param2','param',4,'p_param','parser.py',178),
  ('param2 -> COMMA s_type id_saver add_params param2','param2',5,'p_param2','parser.py',181),
  ('param2 -> empty','param2',1,'p_param2','parser.py',182),
  ('add_params -> empty','add_params',1,'p_add_params','parser.py',186),
  ('return -> RETURN exp SEMICOLON','return',3,'p_return','parser.py',193),
  ('return -> empty','return',1,'p_return','parser.py',194),
  ('program_main -> MAIN main_id LBRACKET program_vars inner_body RBRACKET','program_main',6,'p_program_main','parser.py',198),
  ('main_id -> empty','main_id',1,'p_main_id','parser.py',201),
  ('body -> LBRACKET inner_body RBRACKET','body',3,'p_body','parser.py',208),
  ('inner_body -> statement inner_body','inner_body',2,'p_inner_body','parser.py',212),
  ('inner_body -> empty','inner_body',1,'p_inner_body','parser.py',213),
  ('assign -> variable ASSIGN specialf_assign SEMICOLON','assign',4,'p_assign','parser.py',218),
  ('specialf_assign -> exp','specialf_assign',1,'p_specialf_assign','parser.py',221),
  ('specialf_assign -> special_function','specialf_assign',1,'p_specialf_assign','parser.py',222),
  ('specialf_assign -> read','specialf_assign',1,'p_specialf_assign','parser.py',223),
  ('condition -> IF LPAREN exp RPAREN body condition2 SEMICOLON','condition',7,'p_condition','parser.py',227),
  ('condition2 -> ELSE body','condition2',2,'p_condition2','parser.py',230),
  ('condition2 -> empty','condition2',1,'p_condition2','parser.py',231),
  ('print -> PRINT LPAREN print_many RPAREN SEMICOLON','print',5,'p_print','parser.py',235),
  ('print_type -> exp','print_type',1,'p_print_type','parser.py',239),
  ('print_many -> print_type print_many2','print_many',2,'p_print_many','parser.py',242),
  ('print_many2 -> COMMA print_type print_many2','print_many2',3,'p_print_many2','parser.py',245),
  ('print_many2 -> empty','print_many2',1,'p_print_many2','parser.py',246),
  ('read -> READ LPAREN variable RPAREN','read',4,'p_read','parser.py',252),
  ('cycle -> for','cycle',1,'p_cycle','parser.py',256),
  ('cycle -> while','cycle',1,'p_cycle','parser.py',257),
  ('while -> DO body WHILE LPAREN exp RPAREN SEMICOLON','while',7,'p_while','parser.py',261),
  ('for -> FOR LPAREN ID TO for_end RPAREN body SEMICOLON','for',8,'p_for','parser.py',265),
  ('for_end -> CTE_INT','for_end',1,'p_for_end','parser.py',268),
  ('for_end -> ID','for_end',1,'p_for_end','parser.py',269),
  ('call_function -> ID LPAREN exp exp_many RPAREN','call_function',5,'p_call_function','parser.py',273),
  ('exp_many -> COMMA exp exp_many','exp_many',3,'p_exp_many','parser.py',278),
  ('exp_many -> empty','exp_many',1,'p_exp_many','parser.py',279),
  ('statement -> assign','statement',1,'p_statement','parser.py',283),
  ('statement -> condition','statement',1,'p_statement','parser.py',284),
  ('statement -> print','statement',1,'p_statement','parser.py',285),
  ('statement -> cycle','statement',1,'p_statement','parser.py',286),
  ('statement -> call_function','statement',1,'p_statement','parser.py',287),
  ('special_function -> exploration','special_function',1,'p_special_function','parser.py',291),
  ('special_function -> financial_state','special_function',1,'p_special_function','parser.py',292),
  ('special_function -> dummi_regression','special_function',1,'p_special_function','parser.py',293),
  ('special_function -> season_analysis','special_function',1,'p_special_function','parser.py',294),
  ('special_function -> trend_prediction','special_function',1,'p_special_function','parser.py',295),
  ('special_function -> model_predict','special_function',1,'p_special_function','parser.py',296),
  ('exploration -> EXPLORATION LPAREN variable explore_var explor_cte RPAREN','exploration',6,'p_exploration','parser.py',302),
  ('explore_var -> COMMA variable','explore_var',2,'p_explore_var','parser.py',305),
  ('explore_var -> empty','explore_var',1,'p_explore_var','parser.py',306),
  ('explor_cte -> COMMA CTE_INT','explor_cte',2,'p_explor_cte','parser.py',309),
  ('explor_cte -> empty','explor_cte',1,'p_explor_cte','parser.py',310),
  ('financial_state -> FINANCIAL_STATE LPAREN variable COMMA variable COMMA variable COMMA variable RPAREN','financial_state',10,'p_financial_state','parser.py',314),
  ('season_analysis -> SEASON_ANALYSIS LPAREN variable RPAREN','season_analysis',4,'p_season_analysis','parser.py',318),
  ('trend_prediction -> TREND_PREDICTION LPAREN variable COMMA CTE_INT COMMA CTE_INT COMMA CTE_INT RPAREN','trend_prediction',10,'p_trend_prediction','parser.py',324),
  ('dummi_regression -> DUMMI_REGRESSION LPAREN variable COMMA variable dr_array dr_int RPAREN','dummi_regression',8,'p_dummi_regression','parser.py',328),
  ('dr_array -> COMMA LSQBRACKET CTE_CHAR dr_array_mp RSQBRACKET','dr_array',5,'p_dr_array','parser.py',331),
  ('dr_array -> empty','dr_array',1,'p_dr_array','parser.py',332),
  ('dr_array_mp -> COMMA CTE_CHAR dr_array_mp','dr_array_mp',3,'p_dr_array_mp','parser.py',335),
  ('dr_array_mp -> empty','dr_array_mp',1,'p_dr_array_mp','parser.py',336),
  ('dr_int -> COMMA CTE_INT','dr_int',2,'p_dr_int','parser.py',339),
  ('dr_int -> empty','dr_int',1,'p_dr_int','parser.py',340),
  ('model_predict -> MODEL_PREDICT LPAREN variable COMMA variable COMMA RPAREN','model_predict',7,'p_model_predict','parser.py',344),
  ('exp -> t_exp exp_or','exp',2,'p_exp','parser.py',349),
  ('exp_or -> OR exp','exp_or',2,'p_exp_or','parser.py',352),
  ('exp_or -> empty','exp_or',1,'p_exp_or','parser.py',353),
  ('t_exp -> expression t_exp_and','t_exp',2,'p_t_exp','parser.py',357),
  ('t_exp_and -> AND t_exp','t_exp_and',2,'p_t_exp_and','parser.py',360),
  ('t_exp_and -> empty','t_exp_and',1,'p_t_exp_and','parser.py',361),
  ('expression -> m_exp expression_comp','expression',2,'p_expression','parser.py',365),
  ('expression_comp -> expression_comp_2 m_exp','expression_comp',2,'p_expression_comp','parser.py',368),
  ('expression_comp -> empty','expression_comp',1,'p_expression_comp','parser.py',369),
  ('expression_comp_2 -> EQUAL','expression_comp_2',1,'p_expression_comp_2','parser.py',372),
  ('expression_comp_2 -> NOTEQUAL','expression_comp_2',1,'p_expression_comp_2','parser.py',373),
  ('expression_comp_2 -> LTHAN','expression_comp_2',1,'p_expression_comp_2','parser.py',374),
  ('expression_comp_2 -> GTHAN','expression_comp_2',1,'p_expression_comp_2','parser.py',375),
  ('m_exp -> term m_exp_sr','m_exp',2,'p_m_exp','parser.py',380),
  ('m_exp_sr -> m_exp_sr_2 m_exp','m_exp_sr',2,'p_m_exp_sr','parser.py',383),
  ('m_exp_sr -> empty','m_exp_sr',1,'p_m_exp_sr','parser.py',384),
  ('m_exp_sr_2 -> PLUS','m_exp_sr_2',1,'p_m_exp_sr_2','parser.py',387),
  ('m_exp_sr_2 -> MINUS','m_exp_sr_2',1,'p_m_exp_sr_2','parser.py',388),
  ('term -> sub_factor term_pc','term',2,'p_term','parser.py',392),
  ('term_pc -> term_pc_2 term','term_pc',2,'p_term_pc','parser.py',395),
  ('term_pc -> empty','term_pc',1,'p_term_pc','parser.py',396),
  ('term_pc_2 -> MULTIPLY','term_pc_2',1,'p_term_pc_2','parser.py',399),
  ('term_pc_2 -> DIVIDE','term_pc_2',1,'p_term_pc_2','parser.py',400),
  ('term_pc_2 -> MODULE','term_pc_2',1,'p_term_pc_2','parser.py',401),
  ('sub_factor -> factor sub_factor_pc','sub_factor',2,'p_sub_factor','parser.py',405),
  ('sub_factor_pc -> MODULE sub_factor','sub_factor_pc',2,'p_sub_factor_pc','parser.py',408),
  ('sub_factor_pc -> empty','sub_factor_pc',1,'p_sub_factor_pc','parser.py',409),
  ('factor -> factor_exp','factor',1,'p_factor','parser.py',415),
  ('factor -> factor_cte','factor',1,'p_factor','parser.py',416),
  ('factor -> variable','factor',1,'p_factor','parser.py',417),
  ('factor -> call_function','factor',1,'p_factor','parser.py',418),
  ('factor_exp -> LPAREN exp RPAREN','factor_exp',3,'p_factor_exp','parser.py',421),
  ('factor_cte -> CTE_INT','factor_cte',1,'p_factor_cte','parser.py',424),
  ('factor_cte -> CTE_FLOAT','factor_cte',1,'p_factor_cte','parser.py',425),
  ('factor_cte -> CTE_CHAR','factor_cte',1,'p_factor_cte','parser.py',426),
]
