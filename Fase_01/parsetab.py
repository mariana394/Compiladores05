
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS ASSIGN CHAR COLON COMMA CTE_CHAR CTE_FLOAT CTE_INT DATAFRAME DATE DIVIDE DO DUMMI_REGRESSION ELSE END EQUAL EXPLORATION FINANCIAL_STATE FLOAT FOR FROM FUNCTION GTHAN ID IF IMPORT INT LBRACKET LPAREN LSQBRACKET LTHAN MAIN MINUS MODEL_PREDICT MODULE MULTIPLY NOTEQUAL OR PLUS POWER PRINT PROGRAM RBRACKET READ RETURN RPAREN RSQBRACKET SEASON_ANALYSIS SEMICOLON TO TREND_PREDICTION VAR VOID WHILEprogram : PROGRAM ID SEMICOLON program_libraries program_vars program_function program_main ENDempty : id_saver : ID empty program_libraries : from_library import_library \n                         | emptyfrom_library : FROM ID\n                    | emptyimport_library : IMPORT ID AS ID  program_librariesvar_type : var_c_type\n                | var_s_typeprogram_vars : VAR var_type  \n                    | emptys_type : INT \n              | FLOAT\n              | CHARc_type : DATAFRAME\n              | DATEvar_multiple : var_type\n                    | emptyvar_c_type : c_type id_saver add_c_var var_c_type2 SEMICOLON var_multiplevar_c_type2 : COMMA id_saver add_c_var var_c_type2\n                   | emptyadd_c_var : emptyvar_s_type : s_type id_saver var_s_array add_s_var var_s_type2 SEMICOLON var_multiplevar_s_type2 : COMMA id_saver var_s_array add_s_var var_s_type2\n                   | emptyadd_s_var : emptyvar_s_array : LSQBRACKET var_s_dimesions RSQBRACKET var_s_matrix \n                   | emptyvar_s_matrix : LSQBRACKET var_s_dimesions RSQBRACKET\n                    | emptyvar_s_dimesions : CTE_INT emptyvariable : id_saver variable_arrayvariable_array : LSQBRACKET exp RSQBRACKET variable_matrix\n                      | emptyvariable_matrix : LSQBRACKET exp RSQBRACKET\n                       | emptyprogram_function : FUNCTION f_type id_saver func_creator LPAREN param RPAREN LBRACKET program_vars inner_body return RBRACKET program_function\n                        | emptyf_type : INT \n              | FLOAT\n              | CHAR\n              | VOIDfunc_creator : emptyparam : s_type id_saver add_params param2param2 : COMMA s_type id_saver add_params param2\n              | emptyadd_params : emptyreturn : RETURN exp SEMICOLON\n              | emptyprogram_main : MAIN LBRACKET program_vars inner_body RBRACKETbody : LBRACKET inner_body RBRACKETinner_body :  statement inner_body\n                  | emptyassign : variable ASSIGN specialf_assign SEMICOLONspecialf_assign : exp\n                       | special_function\n                       | readcondition : IF LPAREN exp RPAREN body condition2 SEMICOLONcondition2 : ELSE body\n                 | emptyprint : PRINT LPAREN print_many RPAREN SEMICOLONprint_type : expprint_many : print_type print_many2 print_many2 : COMMA print_type print_many2\n                   | emptyread : READ LPAREN variable RPARENcycle : for\n             | whilewhile : DO body WHILE LPAREN exp RPAREN SEMICOLONfor : FOR LPAREN ID TO for_end RPAREN body SEMICOLONfor_end : CTE_INT\n               | IDcall_function : ID LPAREN exp exp_many RPAREN exp_many : COMMA exp exp_many\n                | emptystatement : assign\n                 | condition\n                 | print\n                 | cycle\n                 | call_functionspecial_function : exploration\n                        | financial_state\n                        | dummi_regression\n                        | season_analysis\n                        | trend_prediction\n                        | model_predictexploration : EXPLORATION LPAREN variable explore_var explor_cte RPARENexplore_var : COMMA variable\n                   | emptyexplor_cte : COMMA CTE_INT\n                  | emptyfinancial_state : FINANCIAL_STATE LPAREN variable COMMA variable COMMA variable COMMA variable RPARENseason_analysis : SEASON_ANALYSIS LPAREN variable RPARENtrend_prediction : TREND_PREDICTION LPAREN variable COMMA CTE_INT COMMA CTE_INT COMMA CTE_INT RPARENdummi_regression : DUMMI_REGRESSION LPAREN variable COMMA variable dr_array dr_int RPARENdr_array : COMMA LSQBRACKET CTE_CHAR dr_array_mp RSQBRACKET\n                | emptydr_array_mp : COMMA CTE_CHAR dr_array_mp\n                   | emptydr_int : COMMA CTE_INT\n              | emptymodel_predict : MODEL_PREDICT LPAREN variable COMMA variable COMMA RPARENexp : t_exp exp_orexp_or : OR exp\n              | emptyt_exp : expression t_exp_andt_exp_and : AND t_exp\n                 | emptyexpression : m_exp expression_compexpression_comp : expression_comp_2 m_exp\n                       | emptyexpression_comp_2 : EQUAL\n                         | NOTEQUAL\n                         | LTHAN\n                         | GTHANm_exp : term m_exp_srm_exp_sr : m_exp_sr_2 m_exp\n                | emptym_exp_sr_2 : PLUS\n                  | MINUSterm : sub_factor term_pcterm_pc : term_pc_2 term\n               | emptyterm_pc_2 : MULTIPLY\n                 | DIVIDE\n                 | MODULEsub_factor : factor sub_factor_pcsub_factor_pc : MODULE sub_factor\n                     | emptyfactor : factor_exp\n              | factor_cte\n              | variable\n              | call_functionfactor_exp : LPAREN exp RPARENfactor_cte : CTE_INT\n                  | CTE_FLOAT\n                  | CTE_CHAR'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,40,],[0,-1,]),'ID':([2,8,11,13,18,19,20,21,22,23,24,25,26,27,31,32,33,34,35,39,41,50,54,62,64,65,66,67,68,72,73,79,82,88,89,90,91,93,95,97,99,100,101,102,104,122,152,155,157,159,162,164,165,166,167,168,169,171,173,174,175,176,178,180,181,183,185,186,187,189,194,197,200,201,203,223,225,227,234,241,243,244,247,257,266,270,272,277,283,297,],[3,14,-12,28,-11,-9,-10,37,37,-16,-17,-13,-14,-15,37,-40,-41,-42,-43,49,-2,74,37,74,-77,-78,-79,-80,-81,-68,-69,-2,37,74,74,74,74,74,146,74,37,-20,-18,-19,-2,74,-24,-55,74,37,74,37,37,37,37,37,37,74,-113,-114,-115,-116,74,-120,-121,74,-125,-126,-127,74,74,74,230,74,-2,-62,-74,74,74,37,37,37,37,37,-59,-70,74,37,-71,37,]),'SEMICOLON':([3,36,37,38,43,44,45,46,48,53,55,56,57,74,75,80,81,83,84,92,94,103,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,129,131,132,133,134,135,136,137,138,139,151,153,156,158,161,163,170,172,177,179,182,184,188,190,192,199,202,206,207,208,210,211,218,219,220,221,222,225,228,229,238,239,245,248,250,255,267,268,269,275,285,293,300,307,310,],[4,-2,-2,-2,-2,-23,-3,-2,-29,79,-22,-2,-27,-2,-2,-2,104,-26,-2,-33,-35,-2,-2,-28,-31,-133,155,-56,-57,-58,-2,-82,-83,-84,-85,-86,-87,-2,-136,-2,-2,-2,-2,-131,-132,-134,-137,-138,-21,-2,-104,-106,-107,-109,-110,-112,-117,-119,-122,-124,-128,-130,223,-2,-52,-2,-30,-105,-135,-108,-111,-118,-123,-129,-2,-74,-34,-37,-25,-67,-94,266,-61,270,-60,-36,283,-88,295,-103,-96,-93,-95,]),'FROM':([4,49,],[8,8,]),'VAR':([4,5,7,12,41,49,60,203,],[-2,10,-5,-4,10,-2,-8,10,]),'FUNCTION':([4,5,7,9,11,12,18,19,20,49,60,79,100,101,102,104,152,284,],[-2,-2,-5,16,-12,-4,-11,-9,-10,-2,-8,-2,-20,-18,-19,-2,-24,16,]),'MAIN':([4,5,7,9,11,12,15,17,18,19,20,49,60,79,100,101,102,104,152,284,294,],[-2,-2,-5,-2,-12,-4,30,-39,-11,-9,-10,-2,-8,-2,-20,-18,-19,-2,-24,-2,-38,]),'IMPORT':([4,6,7,14,49,],[-2,13,-7,-6,-2,]),'DATAFRAME':([10,79,104,],[23,23,23,]),'DATE':([10,79,104,],[24,24,24,]),'INT':([10,16,78,79,104,236,],[25,32,25,25,25,25,]),'FLOAT':([10,16,78,79,104,236,],[26,33,26,26,26,26,]),'CHAR':([10,16,78,79,104,236,],[27,34,27,27,27,27,]),'IF':([11,18,19,20,41,50,62,64,65,66,67,68,72,73,79,97,100,101,102,104,152,155,203,223,225,234,266,270,283,],[-12,-11,-9,-10,-2,70,70,-77,-78,-79,-80,-81,-68,-69,-2,70,-20,-18,-19,-2,-24,-55,-2,-62,-74,70,-59,-70,-71,]),'PRINT':([11,18,19,20,41,50,62,64,65,66,67,68,72,73,79,97,100,101,102,104,152,155,203,223,225,234,266,270,283,],[-12,-11,-9,-10,-2,71,71,-77,-78,-79,-80,-81,-68,-69,-2,71,-20,-18,-19,-2,-24,-55,-2,-62,-74,71,-59,-70,-71,]),'FOR':([11,18,19,20,41,50,62,64,65,66,67,68,72,73,79,97,100,101,102,104,152,155,203,223,225,234,266,270,283,],[-12,-11,-9,-10,-2,76,76,-77,-78,-79,-80,-81,-68,-69,-2,76,-20,-18,-19,-2,-24,-55,-2,-62,-74,76,-59,-70,-71,]),'DO':([11,18,19,20,41,50,62,64,65,66,67,68,72,73,79,97,100,101,102,104,152,155,203,223,225,234,266,270,283,],[-12,-11,-9,-10,-2,77,77,-77,-78,-79,-80,-81,-68,-69,-2,77,-20,-18,-19,-2,-24,-55,-2,-62,-74,77,-59,-70,-71,]),'RBRACKET':([11,18,19,20,41,50,61,62,63,64,65,66,67,68,72,73,79,87,97,100,101,102,104,148,152,155,203,223,225,234,256,266,270,271,273,283,295,],[-12,-11,-9,-10,-2,-2,86,-2,-54,-77,-78,-79,-80,-81,-68,-69,-2,-53,-2,-20,-18,-19,-2,202,-24,-55,-2,-62,-74,-2,-2,-59,-70,284,-50,-71,-49,]),'RETURN':([11,18,19,20,62,63,64,65,66,67,68,72,73,79,87,100,101,102,104,152,155,203,223,225,234,256,266,270,283,],[-12,-11,-9,-10,-2,-54,-77,-78,-79,-80,-81,-68,-69,-2,-53,-20,-18,-19,-2,-24,-55,-2,-62,-74,-2,272,-59,-70,-71,]),'VOID':([16,],[35,]),'AS':([28,],[39,]),'END':([29,86,],[40,-51,]),'LBRACKET':([30,77,149,191,249,254,],[41,97,203,97,97,97,]),'COMMA':([36,37,38,43,44,45,46,48,56,57,74,75,80,84,92,94,103,105,107,108,109,114,123,129,131,132,133,134,135,136,137,138,139,142,143,144,150,153,156,158,161,163,170,172,177,179,182,184,188,190,199,204,205,206,207,208,210,211,212,213,214,216,217,218,219,220,221,224,225,226,228,229,240,242,261,262,263,264,265,268,274,279,280,286,287,292,298,308,309,],[-2,-2,-2,54,-23,-3,-2,-29,82,-27,-2,-2,-2,-2,-33,-35,54,-2,-28,-31,-133,-2,-2,-136,-2,-2,-2,-2,-131,-132,-134,-137,-138,194,-63,197,-2,-2,-104,-106,-107,-109,-110,-112,-117,-119,-122,-124,-128,-130,-2,236,-48,82,-30,-105,-135,-108,241,243,244,246,247,-111,-118,-123,-129,194,-74,197,-34,-37,259,-90,-89,277,278,281,282,-36,-2,289,-98,236,297,301,303,303,-97,]),'LSQBRACKET':([37,38,45,74,75,84,105,199,278,],[-2,47,-3,-2,93,106,47,227,288,]),'LPAREN':([37,42,45,51,52,70,71,74,76,88,89,90,91,93,121,122,124,125,126,127,128,130,147,157,162,171,173,174,175,176,178,180,181,183,185,186,187,189,194,197,201,227,272,],[-2,-2,-3,78,-44,89,90,91,95,122,122,122,122,122,159,122,164,165,166,167,168,169,201,122,122,122,-113,-114,-115,-116,122,-120,-121,122,-125,-126,-127,122,122,122,122,122,122,]),'RPAREN':([37,45,74,75,92,94,98,109,114,123,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,150,156,158,160,161,163,170,172,177,179,182,184,188,190,193,195,196,198,199,204,205,208,209,210,211,212,215,218,219,220,221,224,225,226,228,229,230,231,232,233,235,237,240,242,251,252,258,260,261,263,268,274,276,279,280,282,286,290,291,296,299,302,306,309,],[-2,-3,-2,-2,-33,-35,149,-133,-2,-2,-136,-2,-2,-2,-2,-131,-132,-134,-137,-138,191,192,-2,-63,-2,-2,-104,-106,210,-107,-109,-110,-112,-117,-119,-122,-124,-128,-130,-64,-66,225,-76,-2,-2,-48,-105,239,-135,-108,-2,245,-111,-118,-123,-129,-2,-74,-2,-34,-37,-73,254,-72,255,-45,-47,-2,-90,-65,-75,275,-92,-89,-2,-36,-2,-91,-2,-98,293,-2,300,-102,-46,-101,307,310,-97,]),'ASSIGN':([45,69,74,75,92,94,199,228,229,268,],[-3,88,-2,-2,-33,-35,-2,-34,-37,-36,]),'MODULE':([45,74,75,92,94,109,129,133,134,135,136,137,138,139,188,190,199,210,221,225,228,229,268,],[-3,-2,-2,-33,-35,-133,-136,187,189,-131,-132,-134,-137,-138,-128,-130,-2,-135,-129,-74,-34,-37,-36,]),'MULTIPLY':([45,74,75,92,94,109,129,133,134,135,136,137,138,139,188,190,199,210,221,225,228,229,268,],[-3,-2,-2,-33,-35,-133,-136,185,-2,-131,-132,-134,-137,-138,-128,-130,-2,-135,-129,-74,-34,-37,-36,]),'DIVIDE':([45,74,75,92,94,109,129,133,134,135,136,137,138,139,188,190,199,210,221,225,228,229,268,],[-3,-2,-2,-33,-35,-133,-136,186,-2,-131,-132,-134,-137,-138,-128,-130,-2,-135,-129,-74,-34,-37,-36,]),'PLUS':([45,74,75,92,94,109,129,132,133,134,135,136,137,138,139,182,184,188,190,199,210,220,221,225,228,229,268,],[-3,-2,-2,-33,-35,-133,-136,180,-2,-2,-131,-132,-134,-137,-138,-122,-124,-128,-130,-2,-135,-123,-129,-74,-34,-37,-36,]),'MINUS':([45,74,75,92,94,109,129,132,133,134,135,136,137,138,139,182,184,188,190,199,210,220,221,225,228,229,268,],[-3,-2,-2,-33,-35,-133,-136,181,-2,-2,-131,-132,-134,-137,-138,-122,-124,-128,-130,-2,-135,-123,-129,-74,-34,-37,-36,]),'EQUAL':([45,74,75,92,94,109,129,131,132,133,134,135,136,137,138,139,177,179,182,184,188,190,199,210,219,220,221,225,228,229,268,],[-3,-2,-2,-33,-35,-133,-136,173,-2,-2,-2,-131,-132,-134,-137,-138,-117,-119,-122,-124,-128,-130,-2,-135,-118,-123,-129,-74,-34,-37,-36,]),'NOTEQUAL':([45,74,75,92,94,109,129,131,132,133,134,135,136,137,138,139,177,179,182,184,188,190,199,210,219,220,221,225,228,229,268,],[-3,-2,-2,-33,-35,-133,-136,174,-2,-2,-2,-131,-132,-134,-137,-138,-117,-119,-122,-124,-128,-130,-2,-135,-118,-123,-129,-74,-34,-37,-36,]),'LTHAN':([45,74,75,92,94,109,129,131,132,133,134,135,136,137,138,139,177,179,182,184,188,190,199,210,219,220,221,225,228,229,268,],[-3,-2,-2,-33,-35,-133,-136,175,-2,-2,-2,-131,-132,-134,-137,-138,-117,-119,-122,-124,-128,-130,-2,-135,-118,-123,-129,-74,-34,-37,-36,]),'GTHAN':([45,74,75,92,94,109,129,131,132,133,134,135,136,137,138,139,177,179,182,184,188,190,199,210,219,220,221,225,228,229,268,],[-3,-2,-2,-33,-35,-133,-136,176,-2,-2,-2,-131,-132,-134,-137,-138,-117,-119,-122,-124,-128,-130,-2,-135,-118,-123,-129,-74,-34,-37,-36,]),'AND':([45,74,75,92,94,109,123,129,131,132,133,134,135,136,137,138,139,170,172,177,179,182,184,188,190,199,210,218,219,220,221,225,228,229,268,],[-3,-2,-2,-33,-35,-133,162,-136,-2,-2,-2,-2,-131,-132,-134,-137,-138,-110,-112,-117,-119,-122,-124,-128,-130,-2,-135,-111,-118,-123,-129,-74,-34,-37,-36,]),'OR':([45,74,75,92,94,109,114,123,129,131,132,133,134,135,136,137,138,139,161,163,170,172,177,179,182,184,188,190,199,210,211,218,219,220,221,225,228,229,268,],[-3,-2,-2,-33,-35,-133,157,-2,-136,-2,-2,-2,-2,-131,-132,-134,-137,-138,-107,-109,-110,-112,-117,-119,-122,-124,-128,-130,-2,-135,-108,-111,-118,-123,-129,-74,-34,-37,-36,]),'RSQBRACKET':([45,58,59,74,75,85,92,94,109,114,123,129,131,132,133,134,135,136,137,138,139,145,154,156,158,161,163,170,172,177,179,182,184,188,190,199,208,210,211,218,219,220,221,225,228,229,253,268,298,304,305,308,311,],[-3,84,-2,-2,-2,-32,-33,-35,-133,-2,-2,-136,-2,-2,-2,-2,-131,-132,-134,-137,-138,199,207,-104,-106,-107,-109,-110,-112,-117,-119,-122,-124,-128,-130,-2,-105,-135,-108,-111,-118,-123,-129,-74,-34,-37,268,-36,-2,309,-100,-2,-99,]),'CTE_INT':([47,88,89,90,91,93,106,122,157,162,171,173,174,175,176,178,180,181,183,185,186,187,189,194,197,200,201,227,246,259,272,281,289,301,],[59,129,129,129,129,129,59,129,129,129,129,-113,-114,-115,-116,129,-120,-121,129,-125,-126,-127,129,129,129,232,129,129,264,276,129,292,299,306,]),'READ':([88,],[121,]),'EXPLORATION':([88,],[124,]),'FINANCIAL_STATE':([88,],[125,]),'DUMMI_REGRESSION':([88,],[126,]),'SEASON_ANALYSIS':([88,],[127,]),'TREND_PREDICTION':([88,],[128,]),'MODEL_PREDICT':([88,],[130,]),'CTE_FLOAT':([88,89,90,91,93,122,157,162,171,173,174,175,176,178,180,181,183,185,186,187,189,194,197,201,227,272,],[138,138,138,138,138,138,138,138,138,-113,-114,-115,-116,138,-120,-121,138,-125,-126,-127,138,138,138,138,138,138,]),'CTE_CHAR':([88,89,90,91,93,122,157,162,171,173,174,175,176,178,180,181,183,185,186,187,189,194,197,201,227,272,288,303,],[139,139,139,139,139,139,139,139,139,-113,-114,-115,-116,139,-120,-121,139,-125,-126,-127,139,139,139,139,139,139,298,308,]),'WHILE':([96,202,],[147,-52,]),'TO':([146,],[200,]),'ELSE':([202,222,],[-52,249,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_libraries':([4,49,],[5,60,]),'from_library':([4,49,],[6,6,]),'empty':([4,5,9,36,37,38,41,42,43,46,49,50,56,59,62,74,75,79,80,84,97,103,104,105,114,123,131,132,133,134,142,144,150,153,199,203,204,206,212,222,224,226,234,240,256,263,274,279,284,286,298,308,],[7,11,17,44,45,48,11,52,55,57,7,63,83,85,63,45,94,102,44,108,63,55,102,48,158,163,172,179,184,190,195,198,205,57,229,11,237,83,242,250,195,198,63,260,273,280,205,291,17,237,305,305,]),'program_vars':([5,41,203,],[9,50,234,]),'import_library':([6,],[12,]),'program_function':([9,284,],[15,294,]),'var_type':([10,79,104,],[18,101,101,]),'var_c_type':([10,79,104,],[19,19,19,]),'var_s_type':([10,79,104,],[20,20,20,]),'c_type':([10,79,104,],[21,21,21,]),'s_type':([10,78,79,104,236,],[22,99,22,22,257,]),'program_main':([15,],[29,]),'f_type':([16,],[31,]),'id_saver':([21,22,31,50,54,62,82,88,89,90,91,93,97,99,122,157,159,162,164,165,166,167,168,169,171,178,183,189,194,197,201,227,234,241,243,244,247,257,272,277,297,],[36,38,42,75,80,75,105,75,75,75,75,75,75,150,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,274,75,75,75,]),'add_c_var':([36,80,],[43,103,]),'var_s_array':([38,105,],[46,153,]),'func_creator':([42,],[51,]),'var_c_type2':([43,103,],[53,151,]),'add_s_var':([46,153,],[56,206,]),'var_s_dimesions':([47,106,],[58,154,]),'inner_body':([50,62,97,234,],[61,87,148,256,]),'statement':([50,62,97,234,],[62,62,62,62,]),'assign':([50,62,97,234,],[64,64,64,64,]),'condition':([50,62,97,234,],[65,65,65,65,]),'print':([50,62,97,234,],[66,66,66,66,]),'cycle':([50,62,97,234,],[67,67,67,67,]),'call_function':([50,62,88,89,90,91,93,97,122,157,162,171,178,183,189,194,197,201,227,234,272,],[68,68,137,137,137,137,137,68,137,137,137,137,137,137,137,137,137,137,137,68,137,]),'variable':([50,62,88,89,90,91,93,97,122,157,159,162,164,165,166,167,168,169,171,178,183,189,194,197,201,227,234,241,243,244,247,272,277,297,],[69,69,109,109,109,109,109,69,109,109,209,109,212,213,214,215,216,217,109,109,109,109,109,109,109,109,69,261,262,263,265,109,287,302,]),'for':([50,62,97,234,],[72,72,72,72,]),'while':([50,62,97,234,],[73,73,73,73,]),'var_s_type2':([56,206,],[81,238,]),'variable_array':([75,],[92,]),'body':([77,191,249,254,],[96,222,267,269,]),'param':([78,],[98,]),'var_multiple':([79,104,],[100,152,]),'var_s_matrix':([84,],[107,]),'specialf_assign':([88,],[110,]),'exp':([88,89,90,91,93,122,157,194,197,201,227,272,],[111,140,143,144,145,160,208,143,226,233,253,285,]),'special_function':([88,],[112,]),'read':([88,],[113,]),'t_exp':([88,89,90,91,93,122,157,162,194,197,201,227,272,],[114,114,114,114,114,114,114,211,114,114,114,114,114,]),'exploration':([88,],[115,]),'financial_state':([88,],[116,]),'dummi_regression':([88,],[117,]),'season_analysis':([88,],[118,]),'trend_prediction':([88,],[119,]),'model_predict':([88,],[120,]),'expression':([88,89,90,91,93,122,157,162,194,197,201,227,272,],[123,123,123,123,123,123,123,123,123,123,123,123,123,]),'m_exp':([88,89,90,91,93,122,157,162,171,178,194,197,201,227,272,],[131,131,131,131,131,131,131,131,218,219,131,131,131,131,131,]),'term':([88,89,90,91,93,122,157,162,171,178,183,194,197,201,227,272,],[132,132,132,132,132,132,132,132,132,132,220,132,132,132,132,132,]),'sub_factor':([88,89,90,91,93,122,157,162,171,178,183,189,194,197,201,227,272,],[133,133,133,133,133,133,133,133,133,133,133,221,133,133,133,133,133,]),'factor':([88,89,90,91,93,122,157,162,171,178,183,189,194,197,201,227,272,],[134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'factor_exp':([88,89,90,91,93,122,157,162,171,178,183,189,194,197,201,227,272,],[135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,]),'factor_cte':([88,89,90,91,93,122,157,162,171,178,183,189,194,197,201,227,272,],[136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,]),'print_many':([90,],[141,]),'print_type':([90,194,],[142,224,]),'exp_or':([114,],[156,]),'t_exp_and':([123,],[161,]),'expression_comp':([131,],[170,]),'expression_comp_2':([131,],[171,]),'m_exp_sr':([132,],[177,]),'m_exp_sr_2':([132,],[178,]),'term_pc':([133,],[182,]),'term_pc_2':([133,],[183,]),'sub_factor_pc':([134,],[188,]),'print_many2':([142,224,],[193,251,]),'exp_many':([144,226,],[196,252,]),'add_params':([150,274,],[204,286,]),'variable_matrix':([199,],[228,]),'for_end':([200,],[231,]),'param2':([204,286,],[235,296,]),'explore_var':([212,],[240,]),'condition2':([222,],[248,]),'explor_cte':([240,],[258,]),'return':([256,],[271,]),'dr_array':([263,],[279,]),'dr_int':([279,],[290,]),'dr_array_mp':([298,308,],[304,311,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON program_libraries program_vars program_function program_main END','program',8,'p_program','parser.py',25),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',30),
  ('id_saver -> ID empty','id_saver',2,'p_id_saver','parser.py',37),
  ('program_libraries -> from_library import_library','program_libraries',2,'p_program_libraries','parser.py',46),
  ('program_libraries -> empty','program_libraries',1,'p_program_libraries','parser.py',47),
  ('from_library -> FROM ID','from_library',2,'p_from_library','parser.py',50),
  ('from_library -> empty','from_library',1,'p_from_library','parser.py',51),
  ('import_library -> IMPORT ID AS ID program_libraries','import_library',5,'p_import_library','parser.py',54),
  ('var_type -> var_c_type','var_type',1,'p_var_type','parser.py',59),
  ('var_type -> var_s_type','var_type',1,'p_var_type','parser.py',60),
  ('program_vars -> VAR var_type','program_vars',2,'p_program_vars','parser.py',63),
  ('program_vars -> empty','program_vars',1,'p_program_vars','parser.py',64),
  ('s_type -> INT','s_type',1,'p_s_type','parser.py',74),
  ('s_type -> FLOAT','s_type',1,'p_s_type','parser.py',75),
  ('s_type -> CHAR','s_type',1,'p_s_type','parser.py',76),
  ('c_type -> DATAFRAME','c_type',1,'p_c_type','parser.py',83),
  ('c_type -> DATE','c_type',1,'p_c_type','parser.py',84),
  ('var_multiple -> var_type','var_multiple',1,'p_var_multiple','parser.py',91),
  ('var_multiple -> empty','var_multiple',1,'p_var_multiple','parser.py',92),
  ('var_c_type -> c_type id_saver add_c_var var_c_type2 SEMICOLON var_multiple','var_c_type',6,'p_var_c_type','parser.py',95),
  ('var_c_type2 -> COMMA id_saver add_c_var var_c_type2','var_c_type2',4,'p_var_c_type2','parser.py',98),
  ('var_c_type2 -> empty','var_c_type2',1,'p_var_c_type2','parser.py',99),
  ('add_c_var -> empty','add_c_var',1,'p_add_c_var','parser.py',102),
  ('var_s_type -> s_type id_saver var_s_array add_s_var var_s_type2 SEMICOLON var_multiple','var_s_type',7,'p_var_s_type','parser.py',108),
  ('var_s_type2 -> COMMA id_saver var_s_array add_s_var var_s_type2','var_s_type2',5,'p_var_s_type2','parser.py',111),
  ('var_s_type2 -> empty','var_s_type2',1,'p_var_s_type2','parser.py',112),
  ('add_s_var -> empty','add_s_var',1,'p_add_s_var','parser.py',115),
  ('var_s_array -> LSQBRACKET var_s_dimesions RSQBRACKET var_s_matrix','var_s_array',4,'p_var_s_array','parser.py',120),
  ('var_s_array -> empty','var_s_array',1,'p_var_s_array','parser.py',121),
  ('var_s_matrix -> LSQBRACKET var_s_dimesions RSQBRACKET','var_s_matrix',3,'p_var_s_matrix','parser.py',124),
  ('var_s_matrix -> empty','var_s_matrix',1,'p_var_s_matrix','parser.py',125),
  ('var_s_dimesions -> CTE_INT empty','var_s_dimesions',2,'p_var_s_dimesions','parser.py',128),
  ('variable -> id_saver variable_array','variable',2,'p_variable','parser.py',138),
  ('variable_array -> LSQBRACKET exp RSQBRACKET variable_matrix','variable_array',4,'p_variable_array','parser.py',141),
  ('variable_array -> empty','variable_array',1,'p_variable_array','parser.py',142),
  ('variable_matrix -> LSQBRACKET exp RSQBRACKET','variable_matrix',3,'p_variable_matrix','parser.py',145),
  ('variable_matrix -> empty','variable_matrix',1,'p_variable_matrix','parser.py',146),
  ('program_function -> FUNCTION f_type id_saver func_creator LPAREN param RPAREN LBRACKET program_vars inner_body return RBRACKET program_function','program_function',13,'p_program_function','parser.py',152),
  ('program_function -> empty','program_function',1,'p_program_function','parser.py',153),
  ('f_type -> INT','f_type',1,'p_f_type','parser.py',156),
  ('f_type -> FLOAT','f_type',1,'p_f_type','parser.py',157),
  ('f_type -> CHAR','f_type',1,'p_f_type','parser.py',158),
  ('f_type -> VOID','f_type',1,'p_f_type','parser.py',159),
  ('func_creator -> empty','func_creator',1,'p_func_creator','parser.py',167),
  ('param -> s_type id_saver add_params param2','param',4,'p_param','parser.py',175),
  ('param2 -> COMMA s_type id_saver add_params param2','param2',5,'p_param2','parser.py',178),
  ('param2 -> empty','param2',1,'p_param2','parser.py',179),
  ('add_params -> empty','add_params',1,'p_add_params','parser.py',183),
  ('return -> RETURN exp SEMICOLON','return',3,'p_return','parser.py',190),
  ('return -> empty','return',1,'p_return','parser.py',191),
  ('program_main -> MAIN LBRACKET program_vars inner_body RBRACKET','program_main',5,'p_program_main','parser.py',195),
  ('body -> LBRACKET inner_body RBRACKET','body',3,'p_body','parser.py',199),
  ('inner_body -> statement inner_body','inner_body',2,'p_inner_body','parser.py',203),
  ('inner_body -> empty','inner_body',1,'p_inner_body','parser.py',204),
  ('assign -> variable ASSIGN specialf_assign SEMICOLON','assign',4,'p_assign','parser.py',209),
  ('specialf_assign -> exp','specialf_assign',1,'p_specialf_assign','parser.py',212),
  ('specialf_assign -> special_function','specialf_assign',1,'p_specialf_assign','parser.py',213),
  ('specialf_assign -> read','specialf_assign',1,'p_specialf_assign','parser.py',214),
  ('condition -> IF LPAREN exp RPAREN body condition2 SEMICOLON','condition',7,'p_condition','parser.py',218),
  ('condition2 -> ELSE body','condition2',2,'p_condition2','parser.py',221),
  ('condition2 -> empty','condition2',1,'p_condition2','parser.py',222),
  ('print -> PRINT LPAREN print_many RPAREN SEMICOLON','print',5,'p_print','parser.py',226),
  ('print_type -> exp','print_type',1,'p_print_type','parser.py',230),
  ('print_many -> print_type print_many2','print_many',2,'p_print_many','parser.py',233),
  ('print_many2 -> COMMA print_type print_many2','print_many2',3,'p_print_many2','parser.py',236),
  ('print_many2 -> empty','print_many2',1,'p_print_many2','parser.py',237),
  ('read -> READ LPAREN variable RPAREN','read',4,'p_read','parser.py',243),
  ('cycle -> for','cycle',1,'p_cycle','parser.py',247),
  ('cycle -> while','cycle',1,'p_cycle','parser.py',248),
  ('while -> DO body WHILE LPAREN exp RPAREN SEMICOLON','while',7,'p_while','parser.py',252),
  ('for -> FOR LPAREN ID TO for_end RPAREN body SEMICOLON','for',8,'p_for','parser.py',256),
  ('for_end -> CTE_INT','for_end',1,'p_for_end','parser.py',259),
  ('for_end -> ID','for_end',1,'p_for_end','parser.py',260),
  ('call_function -> ID LPAREN exp exp_many RPAREN','call_function',5,'p_call_function','parser.py',264),
  ('exp_many -> COMMA exp exp_many','exp_many',3,'p_exp_many','parser.py',269),
  ('exp_many -> empty','exp_many',1,'p_exp_many','parser.py',270),
  ('statement -> assign','statement',1,'p_statement','parser.py',274),
  ('statement -> condition','statement',1,'p_statement','parser.py',275),
  ('statement -> print','statement',1,'p_statement','parser.py',276),
  ('statement -> cycle','statement',1,'p_statement','parser.py',277),
  ('statement -> call_function','statement',1,'p_statement','parser.py',278),
  ('special_function -> exploration','special_function',1,'p_special_function','parser.py',282),
  ('special_function -> financial_state','special_function',1,'p_special_function','parser.py',283),
  ('special_function -> dummi_regression','special_function',1,'p_special_function','parser.py',284),
  ('special_function -> season_analysis','special_function',1,'p_special_function','parser.py',285),
  ('special_function -> trend_prediction','special_function',1,'p_special_function','parser.py',286),
  ('special_function -> model_predict','special_function',1,'p_special_function','parser.py',287),
  ('exploration -> EXPLORATION LPAREN variable explore_var explor_cte RPAREN','exploration',6,'p_exploration','parser.py',293),
  ('explore_var -> COMMA variable','explore_var',2,'p_explore_var','parser.py',296),
  ('explore_var -> empty','explore_var',1,'p_explore_var','parser.py',297),
  ('explor_cte -> COMMA CTE_INT','explor_cte',2,'p_explor_cte','parser.py',300),
  ('explor_cte -> empty','explor_cte',1,'p_explor_cte','parser.py',301),
  ('financial_state -> FINANCIAL_STATE LPAREN variable COMMA variable COMMA variable COMMA variable RPAREN','financial_state',10,'p_financial_state','parser.py',305),
  ('season_analysis -> SEASON_ANALYSIS LPAREN variable RPAREN','season_analysis',4,'p_season_analysis','parser.py',309),
  ('trend_prediction -> TREND_PREDICTION LPAREN variable COMMA CTE_INT COMMA CTE_INT COMMA CTE_INT RPAREN','trend_prediction',10,'p_trend_prediction','parser.py',315),
  ('dummi_regression -> DUMMI_REGRESSION LPAREN variable COMMA variable dr_array dr_int RPAREN','dummi_regression',8,'p_dummi_regression','parser.py',319),
  ('dr_array -> COMMA LSQBRACKET CTE_CHAR dr_array_mp RSQBRACKET','dr_array',5,'p_dr_array','parser.py',322),
  ('dr_array -> empty','dr_array',1,'p_dr_array','parser.py',323),
  ('dr_array_mp -> COMMA CTE_CHAR dr_array_mp','dr_array_mp',3,'p_dr_array_mp','parser.py',326),
  ('dr_array_mp -> empty','dr_array_mp',1,'p_dr_array_mp','parser.py',327),
  ('dr_int -> COMMA CTE_INT','dr_int',2,'p_dr_int','parser.py',330),
  ('dr_int -> empty','dr_int',1,'p_dr_int','parser.py',331),
  ('model_predict -> MODEL_PREDICT LPAREN variable COMMA variable COMMA RPAREN','model_predict',7,'p_model_predict','parser.py',335),
  ('exp -> t_exp exp_or','exp',2,'p_exp','parser.py',340),
  ('exp_or -> OR exp','exp_or',2,'p_exp_or','parser.py',343),
  ('exp_or -> empty','exp_or',1,'p_exp_or','parser.py',344),
  ('t_exp -> expression t_exp_and','t_exp',2,'p_t_exp','parser.py',348),
  ('t_exp_and -> AND t_exp','t_exp_and',2,'p_t_exp_and','parser.py',351),
  ('t_exp_and -> empty','t_exp_and',1,'p_t_exp_and','parser.py',352),
  ('expression -> m_exp expression_comp','expression',2,'p_expression','parser.py',356),
  ('expression_comp -> expression_comp_2 m_exp','expression_comp',2,'p_expression_comp','parser.py',359),
  ('expression_comp -> empty','expression_comp',1,'p_expression_comp','parser.py',360),
  ('expression_comp_2 -> EQUAL','expression_comp_2',1,'p_expression_comp_2','parser.py',363),
  ('expression_comp_2 -> NOTEQUAL','expression_comp_2',1,'p_expression_comp_2','parser.py',364),
  ('expression_comp_2 -> LTHAN','expression_comp_2',1,'p_expression_comp_2','parser.py',365),
  ('expression_comp_2 -> GTHAN','expression_comp_2',1,'p_expression_comp_2','parser.py',366),
  ('m_exp -> term m_exp_sr','m_exp',2,'p_m_exp','parser.py',371),
  ('m_exp_sr -> m_exp_sr_2 m_exp','m_exp_sr',2,'p_m_exp_sr','parser.py',374),
  ('m_exp_sr -> empty','m_exp_sr',1,'p_m_exp_sr','parser.py',375),
  ('m_exp_sr_2 -> PLUS','m_exp_sr_2',1,'p_m_exp_sr_2','parser.py',378),
  ('m_exp_sr_2 -> MINUS','m_exp_sr_2',1,'p_m_exp_sr_2','parser.py',379),
  ('term -> sub_factor term_pc','term',2,'p_term','parser.py',383),
  ('term_pc -> term_pc_2 term','term_pc',2,'p_term_pc','parser.py',386),
  ('term_pc -> empty','term_pc',1,'p_term_pc','parser.py',387),
  ('term_pc_2 -> MULTIPLY','term_pc_2',1,'p_term_pc_2','parser.py',390),
  ('term_pc_2 -> DIVIDE','term_pc_2',1,'p_term_pc_2','parser.py',391),
  ('term_pc_2 -> MODULE','term_pc_2',1,'p_term_pc_2','parser.py',392),
  ('sub_factor -> factor sub_factor_pc','sub_factor',2,'p_sub_factor','parser.py',396),
  ('sub_factor_pc -> MODULE sub_factor','sub_factor_pc',2,'p_sub_factor_pc','parser.py',399),
  ('sub_factor_pc -> empty','sub_factor_pc',1,'p_sub_factor_pc','parser.py',400),
  ('factor -> factor_exp','factor',1,'p_factor','parser.py',406),
  ('factor -> factor_cte','factor',1,'p_factor','parser.py',407),
  ('factor -> variable','factor',1,'p_factor','parser.py',408),
  ('factor -> call_function','factor',1,'p_factor','parser.py',409),
  ('factor_exp -> LPAREN exp RPAREN','factor_exp',3,'p_factor_exp','parser.py',412),
  ('factor_cte -> CTE_INT','factor_cte',1,'p_factor_cte','parser.py',415),
  ('factor_cte -> CTE_FLOAT','factor_cte',1,'p_factor_cte','parser.py',416),
  ('factor_cte -> CTE_CHAR','factor_cte',1,'p_factor_cte','parser.py',417),
]
