
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS ASSIGN CHAR COLON COMMA CTE_CHAR CTE_FLOAT CTE_INT DATAFRAME DATE DIVIDE DO DUMMI_REGRESSION ELSE END EQUAL EXPLORATION FINANCIAL_STATE FLOAT FOR FROM FUNCTION GTHAN ID IF IMPORT INT LBRACKET LPAREN LSQBRACKET LTHAN MAIN MINUS MODEL_PREDICT MODULE MULTIPLY NOTEQUAL OR PLUS POWER PRINT PROGRAM RBRACKET READ RETURN RPAREN RSQBRACKET SEASON_ANALYSIS SEMICOLON TO TREND_PREDICTION VAR VOID WHILEprogram : PROGRAM ID SEMICOLON program_libraries program_vars program_function program_main ENDempty : id_saver : ID empty program_libraries : from_library import_library \n                         | emptyfrom_library : FROM ID\n                    | emptyimport_library : IMPORT ID AS ID  program_librariesvar_type : var_c_type\n                | var_s_typeprogram_vars : VAR var_type  \n                    | emptys_type : INT \n              | FLOAT\n              | CHARc_type : DATAFRAME\n              | DATEvar_multiple : var_type\n                    | emptyvar_c_type : c_type ID var_c_type2 SEMICOLON var_multiplevar_c_type2 : COMMA ID var_c_type2\n                   | emptyvar_s_type : s_type ID var_s_array var_s_type2 SEMICOLON var_multiplevar_s_type2 : COMMA ID var_s_array var_s_type2\n                   | emptyvar_s_array : LSQBRACKET CTE_INT RSQBRACKET var_s_matrix\n                   | emptyvar_s_matrix : LSQBRACKET CTE_INT RSQBRACKET\n                    | emptyvariable : ID variable_arrayvariable_array : LSQBRACKET exp RSQBRACKET variable_matrix\n                      | emptyvariable_matrix : LSQBRACKET exp RSQBRACKET\n                       | emptyprogram_function : FUNCTION f_type id_saver func_creator LPAREN param RPAREN LBRACKET program_vars inner_body return RBRACKET program_function\n                        | emptyf_type : INT \n              | FLOAT\n              | CHAR\n              | VOIDfunc_creator : emptyparam : s_type id_saver test param2param2 : COMMA s_type id_saver test param2\n              | emptytest : emptyreturn : RETURN exp SEMICOLON\n              | emptyprogram_main : MAIN LBRACKET program_vars inner_body RBRACKETbody : LBRACKET inner_body RBRACKETinner_body :  statement inner_body\n                  | emptyassign : variable ASSIGN specialf_assign SEMICOLONspecialf_assign : exp\n                       | special_function\n                       | readcondition : IF LPAREN exp RPAREN body condition2 SEMICOLONcondition2 : ELSE body\n                 | emptyprint : PRINT LPAREN print_many RPAREN SEMICOLONprint_type : expprint_many : print_type print_many2 print_many2 : COMMA print_type print_many2\n                   | emptyread : READ LPAREN variable RPARENcycle : for\n             | whilewhile : DO body WHILE LPAREN exp RPAREN SEMICOLONfor : FOR LPAREN ID TO for_end RPAREN body SEMICOLONfor_end : CTE_INT\n               | IDcall_function : ID LPAREN exp exp_many RPAREN exp_many : COMMA exp exp_many\n                | emptystatement : assign\n                 | condition\n                 | print\n                 | cycle\n                 | call_functionspecial_function : exploration\n                        | financial_state\n                        | dummi_regression\n                        | season_analysis\n                        | trend_prediction\n                        | model_predictexploration : EXPLORATION LPAREN variable explore_var explor_cte RPARENexplore_var : COMMA variable\n                   | emptyexplor_cte : COMMA CTE_INT\n                  | emptyfinancial_state : FINANCIAL_STATE LPAREN variable COMMA variable COMMA variable COMMA variable RPARENseason_analysis : SEASON_ANALYSIS LPAREN variable RPARENtrend_prediction : TREND_PREDICTION LPAREN variable COMMA CTE_INT COMMA CTE_INT COMMA CTE_INT RPARENdummi_regression : DUMMI_REGRESSION LPAREN variable COMMA variable dr_array dr_int RPARENdr_array : COMMA LSQBRACKET CTE_CHAR dr_array_mp RSQBRACKET\n                | emptydr_array_mp : COMMA CTE_CHAR dr_array_mp\n                   | emptydr_int : COMMA CTE_INT\n              | emptymodel_predict : MODEL_PREDICT LPAREN variable COMMA variable COMMA RPARENexp : t_exp exp_orexp_or : OR exp\n              | emptyt_exp : expression t_exp_andt_exp_and : AND t_exp\n                 | emptyexpression : m_exp expression_compexpression_comp : expression_comp_2 m_exp\n                       | emptyexpression_comp_2 : EQUAL\n                         | NOTEQUAL\n                         | LTHAN\n                         | GTHANm_exp : term m_exp_srm_exp_sr : m_exp_sr_2 m_exp\n                | emptym_exp_sr_2 : PLUS\n                  | MINUSterm : sub_factor term_pcterm_pc : term_pc_2 term\n               | emptyterm_pc_2 : MULTIPLY\n                 | DIVIDE\n                 | MODULEsub_factor : factor sub_factor_pcsub_factor_pc : MODULE sub_factor\n                     | emptyfactor : factor_exp\n              | factor_cte\n              | variable\n              | call_functionfactor_exp : LPAREN exp RPARENfactor_cte : CTE_INT\n                  | CTE_FLOAT\n                  | CTE_CHAR'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,39,],[0,-1,]),'ID':([2,8,11,13,18,19,20,21,22,23,24,25,26,27,31,32,33,34,35,38,40,44,50,54,57,62,64,65,66,67,68,72,73,78,79,80,82,87,88,89,90,92,94,96,98,99,117,149,151,153,156,158,159,160,161,162,163,165,167,168,169,170,172,174,175,177,179,180,181,183,188,191,194,195,197,217,219,221,228,234,236,237,240,250,259,263,265,270,276,290,],[3,14,-12,28,-11,-9,-10,36,37,-16,-17,-13,-14,-15,42,-37,-38,-39,-40,49,-2,55,74,-2,83,74,-74,-75,-76,-77,-78,-65,-66,-20,-18,-19,-2,135,135,135,135,135,142,74,42,-23,135,-52,135,203,135,203,203,203,203,203,203,135,-110,-111,-112,-113,135,-117,-118,135,-122,-123,-124,135,135,135,224,135,-2,-59,-71,135,74,203,203,203,203,42,-56,-67,135,203,-68,203,]),'SEMICOLON':([3,36,37,43,45,46,48,55,56,58,81,83,84,91,93,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,118,124,126,127,128,129,130,131,132,133,134,135,147,150,152,155,157,164,166,171,173,176,178,182,184,186,193,196,200,201,204,205,212,213,214,215,216,219,222,223,232,238,241,243,248,260,261,262,268,278,286,293,300,303,],[4,-2,-2,54,-22,-2,-27,-2,82,-25,-21,-2,-2,-30,-32,-2,-26,-29,-130,149,-53,-54,-55,-2,-79,-80,-81,-82,-83,-84,-2,-133,-2,-2,-2,-2,-128,-129,-131,-134,-135,-2,-24,-101,-103,-104,-106,-107,-109,-114,-116,-119,-121,-125,-127,217,-2,-49,-28,-102,-132,-105,-108,-115,-120,-126,-2,-71,-31,-34,-64,-91,259,-58,263,-57,-33,276,-85,288,-100,-93,-90,-92,]),'FROM':([4,49,],[8,8,]),'VAR':([4,5,7,12,40,49,60,197,],[-2,10,-5,-4,10,-2,-8,10,]),'FUNCTION':([4,5,7,9,11,12,18,19,20,49,54,60,78,79,80,82,99,277,],[-2,-2,-5,16,-12,-4,-11,-9,-10,-2,-2,-8,-20,-18,-19,-2,-23,16,]),'MAIN':([4,5,7,9,11,12,15,17,18,19,20,49,54,60,78,79,80,82,99,277,287,],[-2,-2,-5,-2,-12,-4,30,-36,-11,-9,-10,-2,-2,-8,-20,-18,-19,-2,-23,-2,-35,]),'IMPORT':([4,6,7,14,49,],[-2,13,-7,-6,-2,]),'DATAFRAME':([10,54,82,],[23,23,23,]),'DATE':([10,54,82,],[24,24,24,]),'INT':([10,16,54,77,82,230,],[25,32,25,25,25,25,]),'FLOAT':([10,16,54,77,82,230,],[26,33,26,26,26,26,]),'CHAR':([10,16,54,77,82,230,],[27,34,27,27,27,27,]),'IF':([11,18,19,20,40,50,54,62,64,65,66,67,68,72,73,78,79,80,82,96,99,149,197,217,219,228,259,263,276,],[-12,-11,-9,-10,-2,70,-2,70,-74,-75,-76,-77,-78,-65,-66,-20,-18,-19,-2,70,-23,-52,-2,-59,-71,70,-56,-67,-68,]),'PRINT':([11,18,19,20,40,50,54,62,64,65,66,67,68,72,73,78,79,80,82,96,99,149,197,217,219,228,259,263,276,],[-12,-11,-9,-10,-2,71,-2,71,-74,-75,-76,-77,-78,-65,-66,-20,-18,-19,-2,71,-23,-52,-2,-59,-71,71,-56,-67,-68,]),'FOR':([11,18,19,20,40,50,54,62,64,65,66,67,68,72,73,78,79,80,82,96,99,149,197,217,219,228,259,263,276,],[-12,-11,-9,-10,-2,75,-2,75,-74,-75,-76,-77,-78,-65,-66,-20,-18,-19,-2,75,-23,-52,-2,-59,-71,75,-56,-67,-68,]),'DO':([11,18,19,20,40,50,54,62,64,65,66,67,68,72,73,78,79,80,82,96,99,149,197,217,219,228,259,263,276,],[-12,-11,-9,-10,-2,76,-2,76,-74,-75,-76,-77,-78,-65,-66,-20,-18,-19,-2,76,-23,-52,-2,-59,-71,76,-56,-67,-68,]),'RBRACKET':([11,18,19,20,40,50,54,61,62,63,64,65,66,67,68,72,73,78,79,80,82,86,96,99,144,149,197,217,219,228,249,259,263,264,266,276,288,],[-12,-11,-9,-10,-2,-2,-2,85,-2,-51,-74,-75,-76,-77,-78,-65,-66,-20,-18,-19,-2,-50,-2,-23,196,-52,-2,-59,-71,-2,-2,-56,-67,277,-47,-68,-46,]),'RETURN':([11,18,19,20,54,62,63,64,65,66,67,68,72,73,78,79,80,82,86,99,149,197,217,219,228,249,259,263,276,],[-12,-11,-9,-10,-2,-2,-51,-74,-75,-76,-77,-78,-65,-66,-20,-18,-19,-2,-50,-23,-52,-2,-59,-71,-2,265,-56,-67,-68,]),'VOID':([16,],[35,]),'AS':([28,],[38,]),'END':([29,85,],[39,-48,]),'LBRACKET':([30,76,145,185,242,247,],[40,96,197,96,96,96,]),'COMMA':([36,37,42,46,48,53,55,83,84,91,93,100,102,103,104,109,118,124,126,127,128,129,130,131,132,133,134,135,138,139,140,146,150,152,155,157,164,166,171,173,176,178,182,184,193,198,199,200,201,203,204,205,206,207,208,210,211,212,213,214,215,218,219,220,222,223,233,235,254,255,256,257,258,261,267,272,273,279,280,285,291,301,302,],[44,-2,-2,57,-27,-3,44,-2,-2,-30,-32,57,-26,-29,-130,-2,-2,-133,-2,-2,-2,-2,-128,-129,-131,-134,-135,-2,188,-60,191,-2,-101,-103,-104,-106,-107,-109,-114,-116,-119,-121,-125,-127,-2,230,-45,-28,-102,-2,-132,-105,234,236,237,239,240,-108,-115,-120,-126,188,-71,191,-31,-34,252,-87,-86,270,271,274,275,-33,-2,282,-95,230,290,294,296,296,-94,]),'LSQBRACKET':([37,74,83,84,135,193,203,271,],[47,92,47,101,92,221,92,281,]),'LPAREN':([41,42,51,52,53,70,71,74,75,87,88,89,90,92,116,117,119,120,121,122,123,125,135,143,151,156,165,167,168,169,170,172,174,175,177,179,180,181,183,188,191,195,221,265,],[-2,-2,77,-41,-3,88,89,90,94,117,117,117,117,117,153,117,158,159,160,161,162,163,90,195,117,117,117,-110,-111,-112,-113,117,-117,-118,117,-122,-123,-124,117,117,117,117,117,117,]),'RPAREN':([42,53,91,93,97,104,109,118,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,146,150,152,154,155,157,164,166,171,173,176,178,182,184,187,189,190,192,193,198,199,201,202,203,204,205,206,209,212,213,214,215,218,219,220,222,223,224,225,226,227,229,231,233,235,244,245,251,253,254,256,261,267,269,272,273,275,279,283,284,289,292,295,299,302,],[-2,-3,-30,-32,145,-130,-2,-2,-133,-2,-2,-2,-2,-128,-129,-131,-134,-135,-2,185,186,-2,-60,-2,-2,-101,-103,204,-104,-106,-107,-109,-114,-116,-119,-121,-125,-127,-61,-63,219,-73,-2,-2,-45,-102,232,-2,-132,-105,-2,238,-108,-115,-120,-126,-2,-71,-2,-31,-34,-70,247,-69,248,-42,-44,-2,-87,-62,-72,268,-89,-86,-2,-33,-2,-88,-2,-95,286,-2,293,-99,-43,-98,300,303,-94,]),'CTE_INT':([47,87,88,89,90,92,101,117,151,156,165,167,168,169,170,172,174,175,177,179,180,181,183,188,191,194,195,221,239,252,265,274,282,294,],[59,124,124,124,124,124,148,124,124,124,124,-110,-111,-112,-113,124,-117,-118,124,-122,-123,-124,124,124,124,226,124,124,257,269,124,285,292,299,]),'RSQBRACKET':([59,91,93,104,109,118,124,126,127,128,129,130,131,132,133,134,135,141,148,150,152,155,157,164,166,171,173,176,178,182,184,193,201,204,205,212,213,214,215,219,222,223,246,261,291,297,298,301,304,],[84,-30,-32,-130,-2,-2,-133,-2,-2,-2,-2,-128,-129,-131,-134,-135,-2,193,200,-101,-103,-104,-106,-107,-109,-114,-116,-119,-121,-125,-127,-2,-102,-132,-105,-108,-115,-120,-126,-71,-31,-34,261,-33,-2,302,-97,-2,-96,]),'ASSIGN':([69,74,91,93,193,222,223,261,],[87,-2,-30,-32,-2,-31,-34,-33,]),'READ':([87,],[116,]),'EXPLORATION':([87,],[119,]),'FINANCIAL_STATE':([87,],[120,]),'DUMMI_REGRESSION':([87,],[121,]),'SEASON_ANALYSIS':([87,],[122,]),'TREND_PREDICTION':([87,],[123,]),'MODEL_PREDICT':([87,],[125,]),'CTE_FLOAT':([87,88,89,90,92,117,151,156,165,167,168,169,170,172,174,175,177,179,180,181,183,188,191,195,221,265,],[133,133,133,133,133,133,133,133,133,-110,-111,-112,-113,133,-117,-118,133,-122,-123,-124,133,133,133,133,133,133,]),'CTE_CHAR':([87,88,89,90,92,117,151,156,165,167,168,169,170,172,174,175,177,179,180,181,183,188,191,195,221,265,281,296,],[134,134,134,134,134,134,134,134,134,-110,-111,-112,-113,134,-117,-118,134,-122,-123,-124,134,134,134,134,134,134,291,301,]),'MODULE':([91,93,104,124,128,129,130,131,132,133,134,135,182,184,193,204,215,219,222,223,261,],[-30,-32,-130,-133,181,183,-128,-129,-131,-134,-135,-2,-125,-127,-2,-132,-126,-71,-31,-34,-33,]),'MULTIPLY':([91,93,104,124,128,129,130,131,132,133,134,135,182,184,193,204,215,219,222,223,261,],[-30,-32,-130,-133,179,-2,-128,-129,-131,-134,-135,-2,-125,-127,-2,-132,-126,-71,-31,-34,-33,]),'DIVIDE':([91,93,104,124,128,129,130,131,132,133,134,135,182,184,193,204,215,219,222,223,261,],[-30,-32,-130,-133,180,-2,-128,-129,-131,-134,-135,-2,-125,-127,-2,-132,-126,-71,-31,-34,-33,]),'PLUS':([91,93,104,124,127,128,129,130,131,132,133,134,135,176,178,182,184,193,204,214,215,219,222,223,261,],[-30,-32,-130,-133,174,-2,-2,-128,-129,-131,-134,-135,-2,-119,-121,-125,-127,-2,-132,-120,-126,-71,-31,-34,-33,]),'MINUS':([91,93,104,124,127,128,129,130,131,132,133,134,135,176,178,182,184,193,204,214,215,219,222,223,261,],[-30,-32,-130,-133,175,-2,-2,-128,-129,-131,-134,-135,-2,-119,-121,-125,-127,-2,-132,-120,-126,-71,-31,-34,-33,]),'EQUAL':([91,93,104,124,126,127,128,129,130,131,132,133,134,135,171,173,176,178,182,184,193,204,213,214,215,219,222,223,261,],[-30,-32,-130,-133,167,-2,-2,-2,-128,-129,-131,-134,-135,-2,-114,-116,-119,-121,-125,-127,-2,-132,-115,-120,-126,-71,-31,-34,-33,]),'NOTEQUAL':([91,93,104,124,126,127,128,129,130,131,132,133,134,135,171,173,176,178,182,184,193,204,213,214,215,219,222,223,261,],[-30,-32,-130,-133,168,-2,-2,-2,-128,-129,-131,-134,-135,-2,-114,-116,-119,-121,-125,-127,-2,-132,-115,-120,-126,-71,-31,-34,-33,]),'LTHAN':([91,93,104,124,126,127,128,129,130,131,132,133,134,135,171,173,176,178,182,184,193,204,213,214,215,219,222,223,261,],[-30,-32,-130,-133,169,-2,-2,-2,-128,-129,-131,-134,-135,-2,-114,-116,-119,-121,-125,-127,-2,-132,-115,-120,-126,-71,-31,-34,-33,]),'GTHAN':([91,93,104,124,126,127,128,129,130,131,132,133,134,135,171,173,176,178,182,184,193,204,213,214,215,219,222,223,261,],[-30,-32,-130,-133,170,-2,-2,-2,-128,-129,-131,-134,-135,-2,-114,-116,-119,-121,-125,-127,-2,-132,-115,-120,-126,-71,-31,-34,-33,]),'AND':([91,93,104,118,124,126,127,128,129,130,131,132,133,134,135,164,166,171,173,176,178,182,184,193,204,212,213,214,215,219,222,223,261,],[-30,-32,-130,156,-133,-2,-2,-2,-2,-128,-129,-131,-134,-135,-2,-107,-109,-114,-116,-119,-121,-125,-127,-2,-132,-108,-115,-120,-126,-71,-31,-34,-33,]),'OR':([91,93,104,109,118,124,126,127,128,129,130,131,132,133,134,135,155,157,164,166,171,173,176,178,182,184,193,204,205,212,213,214,215,219,222,223,261,],[-30,-32,-130,151,-2,-133,-2,-2,-2,-2,-128,-129,-131,-134,-135,-2,-104,-106,-107,-109,-114,-116,-119,-121,-125,-127,-2,-132,-105,-108,-115,-120,-126,-71,-31,-34,-33,]),'WHILE':([95,196,],[143,-49,]),'TO':([142,],[194,]),'ELSE':([196,216,],[-49,242,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_libraries':([4,49,],[5,60,]),'from_library':([4,49,],[6,6,]),'empty':([4,5,9,36,37,40,41,42,46,49,50,54,55,62,74,82,83,84,96,100,109,118,126,127,128,129,135,138,140,146,193,197,198,203,206,216,218,220,228,233,249,256,267,272,277,279,291,301,],[7,11,17,45,48,11,52,53,58,7,63,80,45,63,93,80,48,103,63,58,152,157,166,173,178,184,93,189,192,199,223,11,231,93,235,243,189,192,63,253,266,273,199,284,17,231,298,298,]),'program_vars':([5,40,197,],[9,50,228,]),'import_library':([6,],[12,]),'program_function':([9,277,],[15,287,]),'var_type':([10,54,82,],[18,79,79,]),'var_c_type':([10,54,82,],[19,19,19,]),'var_s_type':([10,54,82,],[20,20,20,]),'c_type':([10,54,82,],[21,21,21,]),'s_type':([10,54,77,82,230,],[22,22,98,22,250,]),'program_main':([15,],[29,]),'f_type':([16,],[31,]),'id_saver':([31,98,250,],[41,146,267,]),'var_c_type2':([36,55,],[43,81,]),'var_s_array':([37,83,],[46,100,]),'func_creator':([41,],[51,]),'var_s_type2':([46,100,],[56,147,]),'inner_body':([50,62,96,228,],[61,86,144,249,]),'statement':([50,62,96,228,],[62,62,62,62,]),'assign':([50,62,96,228,],[64,64,64,64,]),'condition':([50,62,96,228,],[65,65,65,65,]),'print':([50,62,96,228,],[66,66,66,66,]),'cycle':([50,62,96,228,],[67,67,67,67,]),'call_function':([50,62,87,88,89,90,92,96,117,151,156,165,172,177,183,188,191,195,221,228,265,],[68,68,132,132,132,132,132,68,132,132,132,132,132,132,132,132,132,132,132,68,132,]),'variable':([50,62,87,88,89,90,92,96,117,151,153,156,158,159,160,161,162,163,165,172,177,183,188,191,195,221,228,234,236,237,240,265,270,290,],[69,69,104,104,104,104,104,69,104,104,202,104,206,207,208,209,210,211,104,104,104,104,104,104,104,104,69,254,255,256,258,104,280,295,]),'for':([50,62,96,228,],[72,72,72,72,]),'while':([50,62,96,228,],[73,73,73,73,]),'var_multiple':([54,82,],[78,99,]),'variable_array':([74,135,203,],[91,91,91,]),'body':([76,185,242,247,],[95,216,260,262,]),'param':([77,],[97,]),'var_s_matrix':([84,],[102,]),'specialf_assign':([87,],[105,]),'exp':([87,88,89,90,92,117,151,188,191,195,221,265,],[106,136,139,140,141,154,201,139,220,227,246,278,]),'special_function':([87,],[107,]),'read':([87,],[108,]),'t_exp':([87,88,89,90,92,117,151,156,188,191,195,221,265,],[109,109,109,109,109,109,109,205,109,109,109,109,109,]),'exploration':([87,],[110,]),'financial_state':([87,],[111,]),'dummi_regression':([87,],[112,]),'season_analysis':([87,],[113,]),'trend_prediction':([87,],[114,]),'model_predict':([87,],[115,]),'expression':([87,88,89,90,92,117,151,156,188,191,195,221,265,],[118,118,118,118,118,118,118,118,118,118,118,118,118,]),'m_exp':([87,88,89,90,92,117,151,156,165,172,188,191,195,221,265,],[126,126,126,126,126,126,126,126,212,213,126,126,126,126,126,]),'term':([87,88,89,90,92,117,151,156,165,172,177,188,191,195,221,265,],[127,127,127,127,127,127,127,127,127,127,214,127,127,127,127,127,]),'sub_factor':([87,88,89,90,92,117,151,156,165,172,177,183,188,191,195,221,265,],[128,128,128,128,128,128,128,128,128,128,128,215,128,128,128,128,128,]),'factor':([87,88,89,90,92,117,151,156,165,172,177,183,188,191,195,221,265,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'factor_exp':([87,88,89,90,92,117,151,156,165,172,177,183,188,191,195,221,265,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),'factor_cte':([87,88,89,90,92,117,151,156,165,172,177,183,188,191,195,221,265,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'print_many':([89,],[137,]),'print_type':([89,188,],[138,218,]),'exp_or':([109,],[150,]),'t_exp_and':([118,],[155,]),'expression_comp':([126,],[164,]),'expression_comp_2':([126,],[165,]),'m_exp_sr':([127,],[171,]),'m_exp_sr_2':([127,],[172,]),'term_pc':([128,],[176,]),'term_pc_2':([128,],[177,]),'sub_factor_pc':([129,],[182,]),'print_many2':([138,218,],[187,244,]),'exp_many':([140,220,],[190,245,]),'test':([146,267,],[198,279,]),'variable_matrix':([193,],[222,]),'for_end':([194,],[225,]),'param2':([198,279,],[229,289,]),'explore_var':([206,],[233,]),'condition2':([216,],[241,]),'explor_cte':([233,],[251,]),'return':([249,],[264,]),'dr_array':([256,],[272,]),'dr_int':([272,],[283,]),'dr_array_mp':([291,301,],[297,304,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON program_libraries program_vars program_function program_main END','program',8,'p_program','parser.py',22),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',27),
  ('id_saver -> ID empty','id_saver',2,'p_id_saver','parser.py',34),
  ('program_libraries -> from_library import_library','program_libraries',2,'p_program_libraries','parser.py',43),
  ('program_libraries -> empty','program_libraries',1,'p_program_libraries','parser.py',44),
  ('from_library -> FROM ID','from_library',2,'p_from_library','parser.py',47),
  ('from_library -> empty','from_library',1,'p_from_library','parser.py',48),
  ('import_library -> IMPORT ID AS ID program_libraries','import_library',5,'p_import_library','parser.py',51),
  ('var_type -> var_c_type','var_type',1,'p_var_type','parser.py',56),
  ('var_type -> var_s_type','var_type',1,'p_var_type','parser.py',57),
  ('program_vars -> VAR var_type','program_vars',2,'p_program_vars','parser.py',60),
  ('program_vars -> empty','program_vars',1,'p_program_vars','parser.py',61),
  ('s_type -> INT','s_type',1,'p_s_type','parser.py',71),
  ('s_type -> FLOAT','s_type',1,'p_s_type','parser.py',72),
  ('s_type -> CHAR','s_type',1,'p_s_type','parser.py',73),
  ('c_type -> DATAFRAME','c_type',1,'p_c_type','parser.py',79),
  ('c_type -> DATE','c_type',1,'p_c_type','parser.py',80),
  ('var_multiple -> var_type','var_multiple',1,'p_var_multiple','parser.py',87),
  ('var_multiple -> empty','var_multiple',1,'p_var_multiple','parser.py',88),
  ('var_c_type -> c_type ID var_c_type2 SEMICOLON var_multiple','var_c_type',5,'p_var_c_type','parser.py',91),
  ('var_c_type2 -> COMMA ID var_c_type2','var_c_type2',3,'p_var_c_type2','parser.py',94),
  ('var_c_type2 -> empty','var_c_type2',1,'p_var_c_type2','parser.py',95),
  ('var_s_type -> s_type ID var_s_array var_s_type2 SEMICOLON var_multiple','var_s_type',6,'p_var_s_type','parser.py',98),
  ('var_s_type2 -> COMMA ID var_s_array var_s_type2','var_s_type2',4,'p_var_s_type2','parser.py',101),
  ('var_s_type2 -> empty','var_s_type2',1,'p_var_s_type2','parser.py',102),
  ('var_s_array -> LSQBRACKET CTE_INT RSQBRACKET var_s_matrix','var_s_array',4,'p_var_s_array','parser.py',105),
  ('var_s_array -> empty','var_s_array',1,'p_var_s_array','parser.py',106),
  ('var_s_matrix -> LSQBRACKET CTE_INT RSQBRACKET','var_s_matrix',3,'p_var_s_matrix','parser.py',109),
  ('var_s_matrix -> empty','var_s_matrix',1,'p_var_s_matrix','parser.py',110),
  ('variable -> ID variable_array','variable',2,'p_variable','parser.py',113),
  ('variable_array -> LSQBRACKET exp RSQBRACKET variable_matrix','variable_array',4,'p_variable_array','parser.py',116),
  ('variable_array -> empty','variable_array',1,'p_variable_array','parser.py',117),
  ('variable_matrix -> LSQBRACKET exp RSQBRACKET','variable_matrix',3,'p_variable_matrix','parser.py',120),
  ('variable_matrix -> empty','variable_matrix',1,'p_variable_matrix','parser.py',121),
  ('program_function -> FUNCTION f_type id_saver func_creator LPAREN param RPAREN LBRACKET program_vars inner_body return RBRACKET program_function','program_function',13,'p_program_function','parser.py',127),
  ('program_function -> empty','program_function',1,'p_program_function','parser.py',128),
  ('f_type -> INT','f_type',1,'p_f_type','parser.py',131),
  ('f_type -> FLOAT','f_type',1,'p_f_type','parser.py',132),
  ('f_type -> CHAR','f_type',1,'p_f_type','parser.py',133),
  ('f_type -> VOID','f_type',1,'p_f_type','parser.py',134),
  ('func_creator -> empty','func_creator',1,'p_func_creator','parser.py',142),
  ('param -> s_type id_saver test param2','param',4,'p_param','parser.py',150),
  ('param2 -> COMMA s_type id_saver test param2','param2',5,'p_param2','parser.py',155),
  ('param2 -> empty','param2',1,'p_param2','parser.py',156),
  ('test -> empty','test',1,'p_test','parser.py',159),
  ('return -> RETURN exp SEMICOLON','return',3,'p_return','parser.py',166),
  ('return -> empty','return',1,'p_return','parser.py',167),
  ('program_main -> MAIN LBRACKET program_vars inner_body RBRACKET','program_main',5,'p_program_main','parser.py',171),
  ('body -> LBRACKET inner_body RBRACKET','body',3,'p_body','parser.py',176),
  ('inner_body -> statement inner_body','inner_body',2,'p_inner_body','parser.py',180),
  ('inner_body -> empty','inner_body',1,'p_inner_body','parser.py',181),
  ('assign -> variable ASSIGN specialf_assign SEMICOLON','assign',4,'p_assign','parser.py',186),
  ('specialf_assign -> exp','specialf_assign',1,'p_specialf_assign','parser.py',189),
  ('specialf_assign -> special_function','specialf_assign',1,'p_specialf_assign','parser.py',190),
  ('specialf_assign -> read','specialf_assign',1,'p_specialf_assign','parser.py',191),
  ('condition -> IF LPAREN exp RPAREN body condition2 SEMICOLON','condition',7,'p_condition','parser.py',195),
  ('condition2 -> ELSE body','condition2',2,'p_condition2','parser.py',198),
  ('condition2 -> empty','condition2',1,'p_condition2','parser.py',199),
  ('print -> PRINT LPAREN print_many RPAREN SEMICOLON','print',5,'p_print','parser.py',203),
  ('print_type -> exp','print_type',1,'p_print_type','parser.py',207),
  ('print_many -> print_type print_many2','print_many',2,'p_print_many','parser.py',210),
  ('print_many2 -> COMMA print_type print_many2','print_many2',3,'p_print_many2','parser.py',213),
  ('print_many2 -> empty','print_many2',1,'p_print_many2','parser.py',214),
  ('read -> READ LPAREN variable RPAREN','read',4,'p_read','parser.py',220),
  ('cycle -> for','cycle',1,'p_cycle','parser.py',224),
  ('cycle -> while','cycle',1,'p_cycle','parser.py',225),
  ('while -> DO body WHILE LPAREN exp RPAREN SEMICOLON','while',7,'p_while','parser.py',229),
  ('for -> FOR LPAREN ID TO for_end RPAREN body SEMICOLON','for',8,'p_for','parser.py',233),
  ('for_end -> CTE_INT','for_end',1,'p_for_end','parser.py',236),
  ('for_end -> ID','for_end',1,'p_for_end','parser.py',237),
  ('call_function -> ID LPAREN exp exp_many RPAREN','call_function',5,'p_call_function','parser.py',241),
  ('exp_many -> COMMA exp exp_many','exp_many',3,'p_exp_many','parser.py',246),
  ('exp_many -> empty','exp_many',1,'p_exp_many','parser.py',247),
  ('statement -> assign','statement',1,'p_statement','parser.py',251),
  ('statement -> condition','statement',1,'p_statement','parser.py',252),
  ('statement -> print','statement',1,'p_statement','parser.py',253),
  ('statement -> cycle','statement',1,'p_statement','parser.py',254),
  ('statement -> call_function','statement',1,'p_statement','parser.py',255),
  ('special_function -> exploration','special_function',1,'p_special_function','parser.py',259),
  ('special_function -> financial_state','special_function',1,'p_special_function','parser.py',260),
  ('special_function -> dummi_regression','special_function',1,'p_special_function','parser.py',261),
  ('special_function -> season_analysis','special_function',1,'p_special_function','parser.py',262),
  ('special_function -> trend_prediction','special_function',1,'p_special_function','parser.py',263),
  ('special_function -> model_predict','special_function',1,'p_special_function','parser.py',264),
  ('exploration -> EXPLORATION LPAREN variable explore_var explor_cte RPAREN','exploration',6,'p_exploration','parser.py',270),
  ('explore_var -> COMMA variable','explore_var',2,'p_explore_var','parser.py',273),
  ('explore_var -> empty','explore_var',1,'p_explore_var','parser.py',274),
  ('explor_cte -> COMMA CTE_INT','explor_cte',2,'p_explor_cte','parser.py',277),
  ('explor_cte -> empty','explor_cte',1,'p_explor_cte','parser.py',278),
  ('financial_state -> FINANCIAL_STATE LPAREN variable COMMA variable COMMA variable COMMA variable RPAREN','financial_state',10,'p_financial_state','parser.py',282),
  ('season_analysis -> SEASON_ANALYSIS LPAREN variable RPAREN','season_analysis',4,'p_season_analysis','parser.py',286),
  ('trend_prediction -> TREND_PREDICTION LPAREN variable COMMA CTE_INT COMMA CTE_INT COMMA CTE_INT RPAREN','trend_prediction',10,'p_trend_prediction','parser.py',292),
  ('dummi_regression -> DUMMI_REGRESSION LPAREN variable COMMA variable dr_array dr_int RPAREN','dummi_regression',8,'p_dummi_regression','parser.py',296),
  ('dr_array -> COMMA LSQBRACKET CTE_CHAR dr_array_mp RSQBRACKET','dr_array',5,'p_dr_array','parser.py',299),
  ('dr_array -> empty','dr_array',1,'p_dr_array','parser.py',300),
  ('dr_array_mp -> COMMA CTE_CHAR dr_array_mp','dr_array_mp',3,'p_dr_array_mp','parser.py',303),
  ('dr_array_mp -> empty','dr_array_mp',1,'p_dr_array_mp','parser.py',304),
  ('dr_int -> COMMA CTE_INT','dr_int',2,'p_dr_int','parser.py',307),
  ('dr_int -> empty','dr_int',1,'p_dr_int','parser.py',308),
  ('model_predict -> MODEL_PREDICT LPAREN variable COMMA variable COMMA RPAREN','model_predict',7,'p_model_predict','parser.py',312),
  ('exp -> t_exp exp_or','exp',2,'p_exp','parser.py',317),
  ('exp_or -> OR exp','exp_or',2,'p_exp_or','parser.py',320),
  ('exp_or -> empty','exp_or',1,'p_exp_or','parser.py',321),
  ('t_exp -> expression t_exp_and','t_exp',2,'p_t_exp','parser.py',325),
  ('t_exp_and -> AND t_exp','t_exp_and',2,'p_t_exp_and','parser.py',328),
  ('t_exp_and -> empty','t_exp_and',1,'p_t_exp_and','parser.py',329),
  ('expression -> m_exp expression_comp','expression',2,'p_expression','parser.py',333),
  ('expression_comp -> expression_comp_2 m_exp','expression_comp',2,'p_expression_comp','parser.py',336),
  ('expression_comp -> empty','expression_comp',1,'p_expression_comp','parser.py',337),
  ('expression_comp_2 -> EQUAL','expression_comp_2',1,'p_expression_comp_2','parser.py',340),
  ('expression_comp_2 -> NOTEQUAL','expression_comp_2',1,'p_expression_comp_2','parser.py',341),
  ('expression_comp_2 -> LTHAN','expression_comp_2',1,'p_expression_comp_2','parser.py',342),
  ('expression_comp_2 -> GTHAN','expression_comp_2',1,'p_expression_comp_2','parser.py',343),
  ('m_exp -> term m_exp_sr','m_exp',2,'p_m_exp','parser.py',348),
  ('m_exp_sr -> m_exp_sr_2 m_exp','m_exp_sr',2,'p_m_exp_sr','parser.py',351),
  ('m_exp_sr -> empty','m_exp_sr',1,'p_m_exp_sr','parser.py',352),
  ('m_exp_sr_2 -> PLUS','m_exp_sr_2',1,'p_m_exp_sr_2','parser.py',355),
  ('m_exp_sr_2 -> MINUS','m_exp_sr_2',1,'p_m_exp_sr_2','parser.py',356),
  ('term -> sub_factor term_pc','term',2,'p_term','parser.py',360),
  ('term_pc -> term_pc_2 term','term_pc',2,'p_term_pc','parser.py',363),
  ('term_pc -> empty','term_pc',1,'p_term_pc','parser.py',364),
  ('term_pc_2 -> MULTIPLY','term_pc_2',1,'p_term_pc_2','parser.py',367),
  ('term_pc_2 -> DIVIDE','term_pc_2',1,'p_term_pc_2','parser.py',368),
  ('term_pc_2 -> MODULE','term_pc_2',1,'p_term_pc_2','parser.py',369),
  ('sub_factor -> factor sub_factor_pc','sub_factor',2,'p_sub_factor','parser.py',373),
  ('sub_factor_pc -> MODULE sub_factor','sub_factor_pc',2,'p_sub_factor_pc','parser.py',376),
  ('sub_factor_pc -> empty','sub_factor_pc',1,'p_sub_factor_pc','parser.py',377),
  ('factor -> factor_exp','factor',1,'p_factor','parser.py',383),
  ('factor -> factor_cte','factor',1,'p_factor','parser.py',384),
  ('factor -> variable','factor',1,'p_factor','parser.py',385),
  ('factor -> call_function','factor',1,'p_factor','parser.py',386),
  ('factor_exp -> LPAREN exp RPAREN','factor_exp',3,'p_factor_exp','parser.py',389),
  ('factor_cte -> CTE_INT','factor_cte',1,'p_factor_cte','parser.py',392),
  ('factor_cte -> CTE_FLOAT','factor_cte',1,'p_factor_cte','parser.py',393),
  ('factor_cte -> CTE_CHAR','factor_cte',1,'p_factor_cte','parser.py',394),
]
