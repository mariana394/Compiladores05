
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS ASSIGN CHAR COLON COMMA CTE_CHAR CTE_FLOAT CTE_INT DATAFRAME DATE DIVIDE DO DUMMI_REGRESSION ELSE END EQUAL EXPLORATION FINANCIAL_STATE FLOAT FOR FROM FUNCTION GTHAN ID IF IMPORT INT LBRACKET LPAREN LSQBRACKET LTHAN MAIN MINUS MODEL_PREDICT MULTIPLY NOTEQUAL OR PLUS PRINT PROGRAM RBRACKET READ RETURN RPAREN RSQBRACKET SEASON_ANALYSIS SEMICOLON TO TREND_PREDICTION VAR VOID WHILEprogram : PROGRAM ID SEMICOLON program_libraries program_vars program_function program_main ENDempty : program_libraries : from_library import_library \n                         | emptyfrom_library : FROM ID\n                    | emptyimport_library : IMPORT ID AS ID  program_librariesvar_type : var_c_type\n                | var_s_typeprogram_vars : VAR var_type  \n            | emptyvar_cte : ID \n             | CTE_INT \n             | CTE_FLOAT\n             | CTE_CHARs_type : INT \n              | FLOAT\n              | CHARc_type : DATAFRAME\n              | DATEvar_multiple : var_type\n                    | emptyvar_c_type : c_type ID var_c_type2 SEMICOLON var_multiplevar_c_type2 : COMMA ID var_c_type2\n                   | emptyvar_s_type : s_type ID var_s_array var_s_type2 SEMICOLON var_multiplevar_s_type2 : COMMA ID var_s_array var_s_type2\n                   | emptyvar_s_array : LSQBRACKET CTE_INT RSQBRACKET var_s_matrix\n                   | emptyvar_s_matrix : LSQBRACKET CTE_INT RSQBRACKET\n                    | emptyvariable : ID variable_array\n                | emptyvariable_array : LSQBRACKET exp RSQBRACKET variable_matrix\n                      | emptyvariable_matrix : LSQBRACKET exp RSQBRACKET\n                       | emptyprogram_function : FUNCTION function_type ID LPAREN param RPAREN LBRACKET inner_body return RBRACKETfunction_type : s_type\n                    | VOIDparam : s_type ID param2param2 : COMMA s_type ID param2\n              | emptyreturn : RETURN var_cte SEMICOLON\n              | emptyprogram_main : MAIN LBRACKET inner_body RBRACKETbody : LBRACKET inner_body RBRACKETinner_body : program_vars inner_body2inner_body2 : statement inner_body2\n                   | emptyassign : variable ASSIGN exp SEMICOLONcondition : IF LPAREN exp RPAREN body condition2 SEMICOLONcondition2 : ELSE body\n                 | emptyprint : PRINT LPAREN print_many RPAREN SEMICOLONprint_type : ID\n                  | CTE_CHARprint_many : print_type print_many2 print_many2 : COMMA print_type print_many2\n                   | emptyread : READ LPAREN variable RPARENcycle : for\n             | whilewhile : DO body WHILE LPAREN exp RPAREN SEMICOLONfor : FOR LPAREN ID TO for_end RPAREN body SEMICOLONfor_end : CTE_INT\n               | IDcall_function : ID LPAREN exp exp_many RPARENexp_many : COMMA exp exp_many\n                | emptystatement : assign\n                 | condition\n                 | print\n                 | read\n                 | cycle\n                 | call_function\n                 | special_functionspecial_function : exploration\n                        | financial_state\n                        | dummi_regression\n                        | season_analysis\n                        | trend_prediction\n                        | model_predictexploration : EXPLORATION LPAREN variable explore_var explor_cte RPARENexplore_var : COMMA variable\n                   | emptyexplor_cte : COMMA CTE_INT\n                  | emptyfinancial_state : FINANCIAL_STATE LPAREN variable COMMA variable COMMA variable COMMA variable RPARENseason_analysis : SEASON_ANALYSIS LPAREN variable RPARENtrend_prediction : TREND_PREDICTION LPAREN variable COMMA CTE_INT COMMA CTE_INT COMMA CTE_INT RPARENdummi_regression : DUMMI_REGRESSION LPAREN variable COMMA variable dr_array dr_int RPARENdr_array : COMMA LSQBRACKET CTE_CHAR dr_array_mp RSQBRACKET\n                | emptydr_array_mp : COMMA CTE_CHAR dr_array_mp\n                   | emptydr_int : COMMA CTE_INT\n              | emptymodel_predict : MODEL_PREDICT LPAREN variable COMMA variable COMMA RPARENexp : t_exp exp_orexp_or : OR exp\n              | emptyt_exp : expression t_exp_andt_exp_and : AND t_exp\n                 | emptyexpression : m_exp expression_compexpression_comp : expression_comp_2 m_exp\n                       | emptyexpression_comp_2 : EQUAL\n                         | NOTEQUAL\n                         | LTHAN\n                         | GTHANm_exp : term m_exp_srm_exp_sr : m_exp_sr_2 m_exp\n                | emptym_exp_sr_2 : PLUS\n                  | MINUSterm : factor term_pcterm_pc : term_pc_2 term\n               | emptyterm_pc_2 : MULTIPLY\n                 | DIVIDEfactor : factor_exp\n              | factor_cte\n              | variable\n              | call_functionfactor_exp : LPAREN exp RPARENfactor_cte : CTE_INT\n                  | CTE_FLOAT\n                  | CTE_CHAR'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,36,],[0,-1,]),'ID':([2,8,11,13,17,18,19,20,21,22,23,24,25,26,30,31,32,35,37,40,47,49,52,58,60,61,62,63,64,65,66,71,72,74,75,76,77,78,79,89,90,91,92,94,98,99,100,101,102,104,106,108,109,110,111,112,113,114,117,132,156,162,164,167,170,172,173,174,175,177,179,180,182,184,185,190,192,194,197,198,201,203,204,205,207,209,218,220,222,238,249,251,264,268,275,277,278,281,288,291,],[3,14,-11,27,-10,-8,-9,33,34,-19,-20,-16,-17,-18,38,-40,-41,45,-2,50,73,-2,95,73,-72,-73,-74,-75,-76,-77,-78,-63,-64,-79,-80,-81,-82,-83,-84,116,-23,-21,-22,-2,136,136,141,144,136,136,147,-2,144,144,144,144,144,144,-26,136,-2,-52,136,136,136,-110,-111,-112,-113,136,-117,-118,136,-122,-123,141,-62,136,225,136,144,144,144,-91,144,240,-56,-69,136,259,-85,144,-53,-65,-100,-66,144,-93,-90,-92,]),'SEMICOLON':([3,33,34,39,41,42,44,50,51,53,93,95,96,98,103,105,118,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,160,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,188,196,199,210,211,212,213,214,215,216,217,220,223,224,241,243,248,258,259,260,261,262,265,266,267,],[4,-2,-2,49,-25,-2,-30,-2,94,-28,-24,-2,-2,-2,-33,-36,-2,-29,-32,-126,162,-2,-2,-2,-2,-2,-124,-125,-127,-129,-130,-131,-2,-34,-27,-101,-2,-103,-104,-2,-106,-107,-2,-109,-110,-111,-112,-113,-114,-2,-116,-117,-118,-119,-2,-121,-122,-123,218,-2,-48,-31,-102,-105,-108,-115,-120,-128,-2,-69,-35,-38,264,-55,268,276,-12,-13,-14,-15,-54,-37,277,]),'FROM':([4,45,],[8,8,]),'VAR':([4,5,7,12,37,45,55,108,156,],[-2,10,-4,-3,10,-2,-7,10,10,]),'FUNCTION':([4,5,7,9,11,12,17,18,19,45,49,55,90,91,92,94,117,],[-2,-2,-4,16,-11,-3,-10,-8,-9,-2,-2,-7,-23,-21,-22,-2,-26,]),'IMPORT':([4,6,7,14,45,],[-2,13,-6,-5,-2,]),'DATAFRAME':([10,49,94,],[22,22,22,]),'DATE':([10,49,94,],[23,23,23,]),'INT':([10,16,48,49,94,158,],[24,24,24,24,24,24,]),'FLOAT':([10,16,48,49,94,158,],[25,25,25,25,25,25,]),'CHAR':([10,16,48,49,94,158,],[26,26,26,26,26,26,]),'IF':([11,17,18,19,37,47,49,58,60,61,62,63,64,65,66,71,72,74,75,76,77,78,79,90,91,92,94,108,117,156,162,192,205,218,220,249,264,268,275,277,281,288,291,],[-11,-10,-8,-9,-2,68,-2,68,-72,-73,-74,-75,-76,-77,-78,-63,-64,-79,-80,-81,-82,-83,-84,-23,-21,-22,-2,-2,-26,-2,-52,-62,-91,-56,-69,-85,-53,-65,-100,-66,-93,-90,-92,]),'PRINT':([11,17,18,19,37,47,49,58,60,61,62,63,64,65,66,71,72,74,75,76,77,78,79,90,91,92,94,108,117,156,162,192,205,218,220,249,264,268,275,277,281,288,291,],[-11,-10,-8,-9,-2,69,-2,69,-72,-73,-74,-75,-76,-77,-78,-63,-64,-79,-80,-81,-82,-83,-84,-23,-21,-22,-2,-2,-26,-2,-52,-62,-91,-56,-69,-85,-53,-65,-100,-66,-93,-90,-92,]),'READ':([11,17,18,19,37,47,49,58,60,61,62,63,64,65,66,71,72,74,75,76,77,78,79,90,91,92,94,108,117,156,162,192,205,218,220,249,264,268,275,277,281,288,291,],[-11,-10,-8,-9,-2,70,-2,70,-72,-73,-74,-75,-76,-77,-78,-63,-64,-79,-80,-81,-82,-83,-84,-23,-21,-22,-2,-2,-26,-2,-52,-62,-91,-56,-69,-85,-53,-65,-100,-66,-93,-90,-92,]),'FOR':([11,17,18,19,37,47,49,58,60,61,62,63,64,65,66,71,72,74,75,76,77,78,79,90,91,92,94,108,117,156,162,192,205,218,220,249,264,268,275,277,281,288,291,],[-11,-10,-8,-9,-2,80,-2,80,-72,-73,-74,-75,-76,-77,-78,-63,-64,-79,-80,-81,-82,-83,-84,-23,-21,-22,-2,-2,-26,-2,-52,-62,-91,-56,-69,-85,-53,-65,-100,-66,-93,-90,-92,]),'DO':([11,17,18,19,37,47,49,58,60,61,62,63,64,65,66,71,72,74,75,76,77,78,79,90,91,92,94,108,117,156,162,192,205,218,220,249,264,268,275,277,281,288,291,],[-11,-10,-8,-9,-2,81,-2,81,-72,-73,-74,-75,-76,-77,-78,-63,-64,-79,-80,-81,-82,-83,-84,-23,-21,-22,-2,-2,-26,-2,-52,-62,-91,-56,-69,-85,-53,-65,-100,-66,-93,-90,-92,]),'EXPLORATION':([11,17,18,19,37,47,49,58,60,61,62,63,64,65,66,71,72,74,75,76,77,78,79,90,91,92,94,108,117,156,162,192,205,218,220,249,264,268,275,277,281,288,291,],[-11,-10,-8,-9,-2,82,-2,82,-72,-73,-74,-75,-76,-77,-78,-63,-64,-79,-80,-81,-82,-83,-84,-23,-21,-22,-2,-2,-26,-2,-52,-62,-91,-56,-69,-85,-53,-65,-100,-66,-93,-90,-92,]),'FINANCIAL_STATE':([11,17,18,19,37,47,49,58,60,61,62,63,64,65,66,71,72,74,75,76,77,78,79,90,91,92,94,108,117,156,162,192,205,218,220,249,264,268,275,277,281,288,291,],[-11,-10,-8,-9,-2,83,-2,83,-72,-73,-74,-75,-76,-77,-78,-63,-64,-79,-80,-81,-82,-83,-84,-23,-21,-22,-2,-2,-26,-2,-52,-62,-91,-56,-69,-85,-53,-65,-100,-66,-93,-90,-92,]),'DUMMI_REGRESSION':([11,17,18,19,37,47,49,58,60,61,62,63,64,65,66,71,72,74,75,76,77,78,79,90,91,92,94,108,117,156,162,192,205,218,220,249,264,268,275,277,281,288,291,],[-11,-10,-8,-9,-2,84,-2,84,-72,-73,-74,-75,-76,-77,-78,-63,-64,-79,-80,-81,-82,-83,-84,-23,-21,-22,-2,-2,-26,-2,-52,-62,-91,-56,-69,-85,-53,-65,-100,-66,-93,-90,-92,]),'SEASON_ANALYSIS':([11,17,18,19,37,47,49,58,60,61,62,63,64,65,66,71,72,74,75,76,77,78,79,90,91,92,94,108,117,156,162,192,205,218,220,249,264,268,275,277,281,288,291,],[-11,-10,-8,-9,-2,85,-2,85,-72,-73,-74,-75,-76,-77,-78,-63,-64,-79,-80,-81,-82,-83,-84,-23,-21,-22,-2,-2,-26,-2,-52,-62,-91,-56,-69,-85,-53,-65,-100,-66,-93,-90,-92,]),'TREND_PREDICTION':([11,17,18,19,37,47,49,58,60,61,62,63,64,65,66,71,72,74,75,76,77,78,79,90,91,92,94,108,117,156,162,192,205,218,220,249,264,268,275,277,281,288,291,],[-11,-10,-8,-9,-2,86,-2,86,-72,-73,-74,-75,-76,-77,-78,-63,-64,-79,-80,-81,-82,-83,-84,-23,-21,-22,-2,-2,-26,-2,-52,-62,-91,-56,-69,-85,-53,-65,-100,-66,-93,-90,-92,]),'MODEL_PREDICT':([11,17,18,19,37,47,49,58,60,61,62,63,64,65,66,71,72,74,75,76,77,78,79,90,91,92,94,108,117,156,162,192,205,218,220,249,264,268,275,277,281,288,291,],[-11,-10,-8,-9,-2,87,-2,87,-72,-73,-74,-75,-76,-77,-78,-63,-64,-79,-80,-81,-82,-83,-84,-23,-21,-22,-2,-2,-26,-2,-52,-62,-91,-56,-69,-85,-53,-65,-100,-66,-93,-90,-92,]),'ASSIGN':([11,17,18,19,37,47,49,58,59,60,61,62,63,64,65,66,67,71,72,73,74,75,76,77,78,79,90,91,92,94,103,105,108,117,156,162,192,196,205,218,220,223,224,249,264,266,268,275,277,281,288,291,],[-11,-10,-8,-9,-2,-2,-2,-2,-34,-72,-73,-74,-75,-76,-77,-78,98,-63,-64,-2,-79,-80,-81,-82,-83,-84,-23,-21,-22,-2,-33,-36,-2,-26,-2,-52,-62,-2,-91,-56,-69,-35,-38,-85,-53,-37,-65,-100,-66,-93,-90,-92,]),'RBRACKET':([11,17,18,19,37,46,47,49,57,58,59,60,61,62,63,64,65,66,71,72,74,75,76,77,78,79,90,91,92,94,97,108,117,149,156,162,192,205,208,218,220,237,239,249,264,268,275,276,277,281,288,291,],[-11,-10,-8,-9,-2,56,-2,-2,-49,-2,-51,-72,-73,-74,-75,-76,-77,-78,-63,-64,-79,-80,-81,-82,-83,-84,-23,-21,-22,-2,-50,-2,-26,199,-2,-52,-62,-91,-2,-56,-69,257,-46,-85,-53,-65,-100,-45,-66,-93,-90,-92,]),'RETURN':([11,17,18,19,47,49,57,58,59,60,61,62,63,64,65,66,71,72,74,75,76,77,78,79,90,91,92,94,97,117,156,162,192,205,208,218,220,249,264,268,275,277,281,288,291,],[-11,-10,-8,-9,-2,-2,-49,-2,-51,-72,-73,-74,-75,-76,-77,-78,-63,-64,-79,-80,-81,-82,-83,-84,-23,-21,-22,-2,-50,-26,-2,-52,-62,-91,238,-56,-69,-85,-53,-65,-100,-66,-93,-90,-92,]),'MAIN':([15,257,],[29,-39,]),'VOID':([16,],[32,]),'AS':([27,],[35,]),'END':([28,56,],[36,-47,]),'LBRACKET':([29,81,115,187,242,247,],[37,108,156,108,108,108,]),'COMMA':([33,34,42,44,50,95,96,102,103,105,109,110,111,113,114,116,118,120,121,122,124,125,126,127,128,129,130,131,133,134,135,136,137,140,141,142,144,145,150,151,152,154,155,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,194,196,200,201,202,203,204,207,210,211,212,213,214,215,216,219,220,221,223,224,232,233,234,235,236,240,251,253,254,266,269,274,279,289,290,],[40,-2,52,-30,40,-2,-2,-2,-33,-36,-2,-2,-2,-2,-2,158,52,-29,-32,-126,-2,-2,-2,-2,-2,-124,-125,-127,-129,-130,-131,-2,-34,190,-57,-58,-2,194,201,203,204,206,207,-101,-2,-103,-104,-2,-106,-107,-2,-109,-110,-111,-112,-113,-114,-2,-116,-117,-118,-119,-2,-121,-122,-123,-2,-2,230,-2,-87,-2,-2,-2,-31,-102,-105,-108,-115,-120,-128,190,-69,194,-35,-38,-86,251,252,255,256,158,-2,271,-95,-37,278,282,284,284,-94,]),'LSQBRACKET':([34,73,95,96,136,144,196,252,],[43,104,43,119,104,104,222,270,]),'LPAREN':([38,68,69,70,73,80,82,83,84,85,86,87,98,99,102,104,132,136,148,164,167,170,172,173,174,175,177,179,180,182,184,185,194,198,222,],[48,99,100,101,102,106,109,110,111,112,113,114,132,132,132,132,132,102,198,132,132,132,-110,-111,-112,-113,132,-117,-118,132,-122,-123,132,132,132,]),'CTE_INT':([43,98,99,102,104,119,132,164,167,170,172,173,174,175,177,179,180,182,184,185,194,197,198,206,222,230,238,255,271,282,],[54,133,133,133,133,161,133,133,133,133,-110,-111,-112,-113,133,-117,-118,133,-122,-123,133,227,133,235,133,250,260,274,280,287,]),'RSQBRACKET':([54,103,104,105,122,124,125,126,127,128,129,130,131,133,134,135,136,137,146,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,196,211,212,213,214,215,216,220,222,223,224,246,266,279,285,286,289,292,],[96,-33,-2,-36,-126,-2,-2,-2,-2,-2,-124,-125,-127,-129,-130,-131,-2,-34,196,210,-101,-2,-103,-104,-2,-106,-107,-2,-109,-110,-111,-112,-113,-114,-2,-116,-117,-118,-119,-2,-121,-122,-123,-2,-102,-105,-108,-115,-120,-128,-69,-2,-35,-38,266,-37,-2,290,-97,-2,-96,]),'RPAREN':([88,99,101,102,103,105,109,112,116,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,150,153,157,159,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,189,191,193,194,195,196,198,200,201,202,204,211,212,213,214,215,216,219,220,221,223,224,225,226,227,228,229,231,232,234,240,244,245,250,253,254,256,263,266,272,273,278,280,283,287,290,],[115,-2,-2,-2,-33,-36,-2,-2,-2,-126,-2,-2,-2,-2,-2,-124,-125,-127,-2,-129,-130,-131,-2,-34,187,188,-2,-57,-58,192,-2,-2,-2,205,-42,-44,-101,-2,-103,-104,-2,-106,-107,-2,-109,-110,-111,-112,-113,-114,-2,-116,-117,-118,-119,-2,-121,-122,-123,216,-59,-61,220,-2,-71,-2,-2,-2,-2,-87,-2,-102,-105,-108,-115,-120,-128,-2,-69,-2,-35,-38,-68,247,-67,248,249,-89,-86,-2,-2,-60,-70,-88,-2,-95,275,-43,-37,281,-99,-2,-98,288,291,-94,]),'CTE_FLOAT':([98,99,102,104,132,164,167,170,172,173,174,175,177,179,180,182,184,185,194,198,222,238,],[134,134,134,134,134,134,134,134,-110,-111,-112,-113,134,-117,-118,134,-122,-123,134,134,134,261,]),'CTE_CHAR':([98,99,100,102,104,132,164,167,170,172,173,174,175,177,179,180,182,184,185,190,194,198,222,238,270,284,],[135,135,142,135,135,135,135,135,135,-110,-111,-112,-113,135,-117,-118,135,-122,-123,142,135,135,135,262,279,289,]),'MULTIPLY':([98,99,102,103,104,105,122,128,129,130,131,132,133,134,135,136,137,164,167,170,172,173,174,175,177,179,180,182,184,185,194,196,198,216,220,222,223,224,266,],[-2,-2,-2,-33,-2,-36,-126,184,-124,-125,-127,-2,-129,-130,-131,-2,-34,-2,-2,-2,-110,-111,-112,-113,-2,-117,-118,-2,-122,-123,-2,-2,-2,-128,-69,-2,-35,-38,-37,]),'DIVIDE':([98,99,102,103,104,105,122,128,129,130,131,132,133,134,135,136,137,164,167,170,172,173,174,175,177,179,180,182,184,185,194,196,198,216,220,222,223,224,266,],[-2,-2,-2,-33,-2,-36,-126,185,-124,-125,-127,-2,-129,-130,-131,-2,-34,-2,-2,-2,-110,-111,-112,-113,-2,-117,-118,-2,-122,-123,-2,-2,-2,-128,-69,-2,-35,-38,-37,]),'PLUS':([98,99,102,103,104,105,122,127,128,129,130,131,132,133,134,135,136,137,164,167,170,172,173,174,175,177,179,180,181,182,183,184,185,194,196,198,215,216,220,222,223,224,266,],[-2,-2,-2,-33,-2,-36,-126,179,-2,-124,-125,-127,-2,-129,-130,-131,-2,-34,-2,-2,-2,-110,-111,-112,-113,-2,-117,-118,-119,-2,-121,-122,-123,-2,-2,-2,-120,-128,-69,-2,-35,-38,-37,]),'MINUS':([98,99,102,103,104,105,122,127,128,129,130,131,132,133,134,135,136,137,164,167,170,172,173,174,175,177,179,180,181,182,183,184,185,194,196,198,215,216,220,222,223,224,266,],[-2,-2,-2,-33,-2,-36,-126,180,-2,-124,-125,-127,-2,-129,-130,-131,-2,-34,-2,-2,-2,-110,-111,-112,-113,-2,-117,-118,-119,-2,-121,-122,-123,-2,-2,-2,-120,-128,-69,-2,-35,-38,-37,]),'EQUAL':([98,99,102,103,104,105,122,126,127,128,129,130,131,132,133,134,135,136,137,164,167,176,177,178,179,180,181,182,183,184,185,194,196,198,214,215,216,220,222,223,224,266,],[-2,-2,-2,-33,-2,-36,-126,172,-2,-2,-124,-125,-127,-2,-129,-130,-131,-2,-34,-2,-2,-114,-2,-116,-117,-118,-119,-2,-121,-122,-123,-2,-2,-2,-115,-120,-128,-69,-2,-35,-38,-37,]),'NOTEQUAL':([98,99,102,103,104,105,122,126,127,128,129,130,131,132,133,134,135,136,137,164,167,176,177,178,179,180,181,182,183,184,185,194,196,198,214,215,216,220,222,223,224,266,],[-2,-2,-2,-33,-2,-36,-126,173,-2,-2,-124,-125,-127,-2,-129,-130,-131,-2,-34,-2,-2,-114,-2,-116,-117,-118,-119,-2,-121,-122,-123,-2,-2,-2,-115,-120,-128,-69,-2,-35,-38,-37,]),'LTHAN':([98,99,102,103,104,105,122,126,127,128,129,130,131,132,133,134,135,136,137,164,167,176,177,178,179,180,181,182,183,184,185,194,196,198,214,215,216,220,222,223,224,266,],[-2,-2,-2,-33,-2,-36,-126,174,-2,-2,-124,-125,-127,-2,-129,-130,-131,-2,-34,-2,-2,-114,-2,-116,-117,-118,-119,-2,-121,-122,-123,-2,-2,-2,-115,-120,-128,-69,-2,-35,-38,-37,]),'GTHAN':([98,99,102,103,104,105,122,126,127,128,129,130,131,132,133,134,135,136,137,164,167,176,177,178,179,180,181,182,183,184,185,194,196,198,214,215,216,220,222,223,224,266,],[-2,-2,-2,-33,-2,-36,-126,175,-2,-2,-124,-125,-127,-2,-129,-130,-131,-2,-34,-2,-2,-114,-2,-116,-117,-118,-119,-2,-121,-122,-123,-2,-2,-2,-115,-120,-128,-69,-2,-35,-38,-37,]),'AND':([98,99,102,103,104,105,122,125,126,127,128,129,130,131,132,133,134,135,136,137,164,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,194,196,198,213,214,215,216,220,222,223,224,266,],[-2,-2,-2,-33,-2,-36,-126,167,-2,-2,-2,-124,-125,-127,-2,-129,-130,-131,-2,-34,-2,-2,-107,-2,-109,-110,-111,-112,-113,-114,-2,-116,-117,-118,-119,-2,-121,-122,-123,-2,-2,-2,-108,-115,-120,-128,-69,-2,-35,-38,-37,]),'OR':([98,99,102,103,104,105,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,194,196,198,212,213,214,215,216,220,222,223,224,266,],[-2,-2,-2,-33,-2,-36,-126,164,-2,-2,-2,-2,-124,-125,-127,-2,-129,-130,-131,-2,-34,-2,-104,-2,-106,-107,-2,-109,-110,-111,-112,-113,-114,-2,-116,-117,-118,-119,-2,-121,-122,-123,-2,-2,-2,-105,-108,-115,-120,-128,-69,-2,-35,-38,-37,]),'WHILE':([107,199,],[148,-48,]),'TO':([147,],[197,]),'ELSE':([199,217,],[-48,242,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_libraries':([4,45,],[5,55,]),'from_library':([4,45,],[6,6,]),'empty':([4,5,33,34,37,42,45,47,49,50,58,73,94,95,96,98,99,101,102,104,108,109,110,111,112,113,114,116,118,124,125,126,127,128,132,136,140,144,145,150,156,164,167,170,177,182,194,196,198,200,201,203,204,207,208,217,219,221,222,234,240,251,253,278,279,289,],[7,11,41,44,11,53,7,59,92,41,59,105,92,44,121,137,137,137,137,137,11,137,137,137,137,137,137,159,53,165,168,171,178,183,137,105,191,105,195,202,11,137,137,137,137,137,137,224,137,231,137,137,137,137,239,243,191,195,137,254,159,137,273,137,286,286,]),'program_vars':([5,37,108,156,],[9,47,47,47,]),'import_library':([6,],[12,]),'program_function':([9,],[15,]),'var_type':([10,49,94,],[17,91,91,]),'var_c_type':([10,49,94,],[18,18,18,]),'var_s_type':([10,49,94,],[19,19,19,]),'c_type':([10,49,94,],[20,20,20,]),'s_type':([10,16,48,49,94,158,],[21,31,89,21,21,209,]),'program_main':([15,],[28,]),'function_type':([16,],[30,]),'var_c_type2':([33,50,],[39,93,]),'var_s_array':([34,95,],[42,118,]),'inner_body':([37,108,156,],[46,149,208,]),'var_s_type2':([42,118,],[51,160,]),'inner_body2':([47,58,],[57,97,]),'statement':([47,58,],[58,58,]),'assign':([47,58,],[60,60,]),'condition':([47,58,],[61,61,]),'print':([47,58,],[62,62,]),'read':([47,58,],[63,63,]),'cycle':([47,58,],[64,64,]),'call_function':([47,58,98,99,102,104,132,164,167,170,177,182,194,198,222,],[65,65,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'special_function':([47,58,],[66,66,]),'variable':([47,58,98,99,101,102,104,109,110,111,112,113,114,132,164,167,170,177,182,194,198,201,203,204,207,222,251,278,],[67,67,122,122,143,122,122,150,151,152,153,154,155,122,122,122,122,122,122,122,122,232,233,234,236,122,269,283,]),'for':([47,58,],[71,71,]),'while':([47,58,],[72,72,]),'exploration':([47,58,],[74,74,]),'financial_state':([47,58,],[75,75,]),'dummi_regression':([47,58,],[76,76,]),'season_analysis':([47,58,],[77,77,]),'trend_prediction':([47,58,],[78,78,]),'model_predict':([47,58,],[79,79,]),'param':([48,],[88,]),'var_multiple':([49,94,],[90,117,]),'variable_array':([73,136,144,],[103,103,103,]),'body':([81,187,242,247,],[107,217,265,267,]),'var_s_matrix':([96,],[120,]),'exp':([98,99,102,104,132,164,194,198,222,],[123,138,145,146,186,211,221,228,246,]),'t_exp':([98,99,102,104,132,164,167,194,198,222,],[124,124,124,124,124,124,212,124,124,124,]),'expression':([98,99,102,104,132,164,167,194,198,222,],[125,125,125,125,125,125,125,125,125,125,]),'m_exp':([98,99,102,104,132,164,167,170,177,194,198,222,],[126,126,126,126,126,126,126,213,214,126,126,126,]),'term':([98,99,102,104,132,164,167,170,177,182,194,198,222,],[127,127,127,127,127,127,127,127,127,215,127,127,127,]),'factor':([98,99,102,104,132,164,167,170,177,182,194,198,222,],[128,128,128,128,128,128,128,128,128,128,128,128,128,]),'factor_exp':([98,99,102,104,132,164,167,170,177,182,194,198,222,],[129,129,129,129,129,129,129,129,129,129,129,129,129,]),'factor_cte':([98,99,102,104,132,164,167,170,177,182,194,198,222,],[130,130,130,130,130,130,130,130,130,130,130,130,130,]),'print_many':([100,],[139,]),'print_type':([100,190,],[140,219,]),'param2':([116,240,],[157,263,]),'exp_or':([124,],[163,]),'t_exp_and':([125,],[166,]),'expression_comp':([126,],[169,]),'expression_comp_2':([126,],[170,]),'m_exp_sr':([127,],[176,]),'m_exp_sr_2':([127,],[177,]),'term_pc':([128,],[181,]),'term_pc_2':([128,],[182,]),'print_many2':([140,219,],[189,244,]),'exp_many':([145,221,],[193,245,]),'explore_var':([150,],[200,]),'variable_matrix':([196,],[223,]),'for_end':([197,],[226,]),'explor_cte':([200,],[229,]),'return':([208,],[237,]),'condition2':([217,],[241,]),'dr_array':([234,],[253,]),'var_cte':([238,],[258,]),'dr_int':([253,],[272,]),'dr_array_mp':([279,289,],[285,292,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON program_libraries program_vars program_function program_main END','program',8,'p_program','parser.py',16),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',21),
  ('program_libraries -> from_library import_library','program_libraries',2,'p_program_libraries','parser.py',28),
  ('program_libraries -> empty','program_libraries',1,'p_program_libraries','parser.py',29),
  ('from_library -> FROM ID','from_library',2,'p_from_library','parser.py',32),
  ('from_library -> empty','from_library',1,'p_from_library','parser.py',33),
  ('import_library -> IMPORT ID AS ID program_libraries','import_library',5,'p_import_library','parser.py',36),
  ('var_type -> var_c_type','var_type',1,'p_var_type','parser.py',41),
  ('var_type -> var_s_type','var_type',1,'p_var_type','parser.py',42),
  ('program_vars -> VAR var_type','program_vars',2,'p_program_vars','parser.py',45),
  ('program_vars -> empty','program_vars',1,'p_program_vars','parser.py',46),
  ('var_cte -> ID','var_cte',1,'p_var_cte','parser.py',50),
  ('var_cte -> CTE_INT','var_cte',1,'p_var_cte','parser.py',51),
  ('var_cte -> CTE_FLOAT','var_cte',1,'p_var_cte','parser.py',52),
  ('var_cte -> CTE_CHAR','var_cte',1,'p_var_cte','parser.py',53),
  ('s_type -> INT','s_type',1,'p_s_type','parser.py',56),
  ('s_type -> FLOAT','s_type',1,'p_s_type','parser.py',57),
  ('s_type -> CHAR','s_type',1,'p_s_type','parser.py',58),
  ('c_type -> DATAFRAME','c_type',1,'p_c_type','parser.py',61),
  ('c_type -> DATE','c_type',1,'p_c_type','parser.py',62),
  ('var_multiple -> var_type','var_multiple',1,'p_var_multiple','parser.py',66),
  ('var_multiple -> empty','var_multiple',1,'p_var_multiple','parser.py',67),
  ('var_c_type -> c_type ID var_c_type2 SEMICOLON var_multiple','var_c_type',5,'p_var_c_type','parser.py',70),
  ('var_c_type2 -> COMMA ID var_c_type2','var_c_type2',3,'p_var_c_type2','parser.py',73),
  ('var_c_type2 -> empty','var_c_type2',1,'p_var_c_type2','parser.py',74),
  ('var_s_type -> s_type ID var_s_array var_s_type2 SEMICOLON var_multiple','var_s_type',6,'p_var_s_type','parser.py',77),
  ('var_s_type2 -> COMMA ID var_s_array var_s_type2','var_s_type2',4,'p_var_s_type2','parser.py',80),
  ('var_s_type2 -> empty','var_s_type2',1,'p_var_s_type2','parser.py',81),
  ('var_s_array -> LSQBRACKET CTE_INT RSQBRACKET var_s_matrix','var_s_array',4,'p_var_s_array','parser.py',84),
  ('var_s_array -> empty','var_s_array',1,'p_var_s_array','parser.py',85),
  ('var_s_matrix -> LSQBRACKET CTE_INT RSQBRACKET','var_s_matrix',3,'p_var_s_matrix','parser.py',88),
  ('var_s_matrix -> empty','var_s_matrix',1,'p_var_s_matrix','parser.py',89),
  ('variable -> ID variable_array','variable',2,'p_variable','parser.py',92),
  ('variable -> empty','variable',1,'p_variable','parser.py',93),
  ('variable_array -> LSQBRACKET exp RSQBRACKET variable_matrix','variable_array',4,'p_variable_array','parser.py',96),
  ('variable_array -> empty','variable_array',1,'p_variable_array','parser.py',97),
  ('variable_matrix -> LSQBRACKET exp RSQBRACKET','variable_matrix',3,'p_variable_matrix','parser.py',100),
  ('variable_matrix -> empty','variable_matrix',1,'p_variable_matrix','parser.py',101),
  ('program_function -> FUNCTION function_type ID LPAREN param RPAREN LBRACKET inner_body return RBRACKET','program_function',10,'p_program_function','parser.py',106),
  ('function_type -> s_type','function_type',1,'p_function_type','parser.py',109),
  ('function_type -> VOID','function_type',1,'p_function_type','parser.py',110),
  ('param -> s_type ID param2','param',3,'p_param','parser.py',114),
  ('param2 -> COMMA s_type ID param2','param2',4,'p_param2','parser.py',117),
  ('param2 -> empty','param2',1,'p_param2','parser.py',118),
  ('return -> RETURN var_cte SEMICOLON','return',3,'p_return','parser.py',122),
  ('return -> empty','return',1,'p_return','parser.py',123),
  ('program_main -> MAIN LBRACKET inner_body RBRACKET','program_main',4,'p_program_main','parser.py',127),
  ('body -> LBRACKET inner_body RBRACKET','body',3,'p_body','parser.py',132),
  ('inner_body -> program_vars inner_body2','inner_body',2,'p_inner_body','parser.py',136),
  ('inner_body2 -> statement inner_body2','inner_body2',2,'p_inner_body2','parser.py',139),
  ('inner_body2 -> empty','inner_body2',1,'p_inner_body2','parser.py',140),
  ('assign -> variable ASSIGN exp SEMICOLON','assign',4,'p_assign','parser.py',144),
  ('condition -> IF LPAREN exp RPAREN body condition2 SEMICOLON','condition',7,'p_condition','parser.py',148),
  ('condition2 -> ELSE body','condition2',2,'p_condition2','parser.py',151),
  ('condition2 -> empty','condition2',1,'p_condition2','parser.py',152),
  ('print -> PRINT LPAREN print_many RPAREN SEMICOLON','print',5,'p_print','parser.py',156),
  ('print_type -> ID','print_type',1,'p_print_type','parser.py',159),
  ('print_type -> CTE_CHAR','print_type',1,'p_print_type','parser.py',160),
  ('print_many -> print_type print_many2','print_many',2,'p_print_many','parser.py',163),
  ('print_many2 -> COMMA print_type print_many2','print_many2',3,'p_print_many2','parser.py',166),
  ('print_many2 -> empty','print_many2',1,'p_print_many2','parser.py',167),
  ('read -> READ LPAREN variable RPAREN','read',4,'p_read','parser.py',173),
  ('cycle -> for','cycle',1,'p_cycle','parser.py',177),
  ('cycle -> while','cycle',1,'p_cycle','parser.py',178),
  ('while -> DO body WHILE LPAREN exp RPAREN SEMICOLON','while',7,'p_while','parser.py',182),
  ('for -> FOR LPAREN ID TO for_end RPAREN body SEMICOLON','for',8,'p_for','parser.py',186),
  ('for_end -> CTE_INT','for_end',1,'p_for_end','parser.py',189),
  ('for_end -> ID','for_end',1,'p_for_end','parser.py',190),
  ('call_function -> ID LPAREN exp exp_many RPAREN','call_function',5,'p_call_function','parser.py',194),
  ('exp_many -> COMMA exp exp_many','exp_many',3,'p_exp_many','parser.py',198),
  ('exp_many -> empty','exp_many',1,'p_exp_many','parser.py',199),
  ('statement -> assign','statement',1,'p_statement','parser.py',203),
  ('statement -> condition','statement',1,'p_statement','parser.py',204),
  ('statement -> print','statement',1,'p_statement','parser.py',205),
  ('statement -> read','statement',1,'p_statement','parser.py',206),
  ('statement -> cycle','statement',1,'p_statement','parser.py',207),
  ('statement -> call_function','statement',1,'p_statement','parser.py',208),
  ('statement -> special_function','statement',1,'p_statement','parser.py',209),
  ('special_function -> exploration','special_function',1,'p_special_function','parser.py',213),
  ('special_function -> financial_state','special_function',1,'p_special_function','parser.py',214),
  ('special_function -> dummi_regression','special_function',1,'p_special_function','parser.py',215),
  ('special_function -> season_analysis','special_function',1,'p_special_function','parser.py',216),
  ('special_function -> trend_prediction','special_function',1,'p_special_function','parser.py',217),
  ('special_function -> model_predict','special_function',1,'p_special_function','parser.py',218),
  ('exploration -> EXPLORATION LPAREN variable explore_var explor_cte RPAREN','exploration',6,'p_exploration','parser.py',224),
  ('explore_var -> COMMA variable','explore_var',2,'p_explore_var','parser.py',227),
  ('explore_var -> empty','explore_var',1,'p_explore_var','parser.py',228),
  ('explor_cte -> COMMA CTE_INT','explor_cte',2,'p_explor_cte','parser.py',231),
  ('explor_cte -> empty','explor_cte',1,'p_explor_cte','parser.py',232),
  ('financial_state -> FINANCIAL_STATE LPAREN variable COMMA variable COMMA variable COMMA variable RPAREN','financial_state',10,'p_financial_state','parser.py',236),
  ('season_analysis -> SEASON_ANALYSIS LPAREN variable RPAREN','season_analysis',4,'p_season_analysis','parser.py',240),
  ('trend_prediction -> TREND_PREDICTION LPAREN variable COMMA CTE_INT COMMA CTE_INT COMMA CTE_INT RPAREN','trend_prediction',10,'p_trend_prediction','parser.py',246),
  ('dummi_regression -> DUMMI_REGRESSION LPAREN variable COMMA variable dr_array dr_int RPAREN','dummi_regression',8,'p_dummi_regression','parser.py',250),
  ('dr_array -> COMMA LSQBRACKET CTE_CHAR dr_array_mp RSQBRACKET','dr_array',5,'p_dr_array','parser.py',253),
  ('dr_array -> empty','dr_array',1,'p_dr_array','parser.py',254),
  ('dr_array_mp -> COMMA CTE_CHAR dr_array_mp','dr_array_mp',3,'p_dr_array_mp','parser.py',257),
  ('dr_array_mp -> empty','dr_array_mp',1,'p_dr_array_mp','parser.py',258),
  ('dr_int -> COMMA CTE_INT','dr_int',2,'p_dr_int','parser.py',261),
  ('dr_int -> empty','dr_int',1,'p_dr_int','parser.py',262),
  ('model_predict -> MODEL_PREDICT LPAREN variable COMMA variable COMMA RPAREN','model_predict',7,'p_model_predict','parser.py',266),
  ('exp -> t_exp exp_or','exp',2,'p_exp','parser.py',271),
  ('exp_or -> OR exp','exp_or',2,'p_exp_or','parser.py',274),
  ('exp_or -> empty','exp_or',1,'p_exp_or','parser.py',275),
  ('t_exp -> expression t_exp_and','t_exp',2,'p_t_exp','parser.py',279),
  ('t_exp_and -> AND t_exp','t_exp_and',2,'p_t_exp_and','parser.py',282),
  ('t_exp_and -> empty','t_exp_and',1,'p_t_exp_and','parser.py',283),
  ('expression -> m_exp expression_comp','expression',2,'p_expression','parser.py',287),
  ('expression_comp -> expression_comp_2 m_exp','expression_comp',2,'p_expression_comp','parser.py',290),
  ('expression_comp -> empty','expression_comp',1,'p_expression_comp','parser.py',291),
  ('expression_comp_2 -> EQUAL','expression_comp_2',1,'p_expression_comp_2','parser.py',294),
  ('expression_comp_2 -> NOTEQUAL','expression_comp_2',1,'p_expression_comp_2','parser.py',295),
  ('expression_comp_2 -> LTHAN','expression_comp_2',1,'p_expression_comp_2','parser.py',296),
  ('expression_comp_2 -> GTHAN','expression_comp_2',1,'p_expression_comp_2','parser.py',297),
  ('m_exp -> term m_exp_sr','m_exp',2,'p_m_exp','parser.py',302),
  ('m_exp_sr -> m_exp_sr_2 m_exp','m_exp_sr',2,'p_m_exp_sr','parser.py',305),
  ('m_exp_sr -> empty','m_exp_sr',1,'p_m_exp_sr','parser.py',306),
  ('m_exp_sr_2 -> PLUS','m_exp_sr_2',1,'p_m_exp_sr_2','parser.py',309),
  ('m_exp_sr_2 -> MINUS','m_exp_sr_2',1,'p_m_exp_sr_2','parser.py',310),
  ('term -> factor term_pc','term',2,'p_term','parser.py',314),
  ('term_pc -> term_pc_2 term','term_pc',2,'p_term_pc','parser.py',317),
  ('term_pc -> empty','term_pc',1,'p_term_pc','parser.py',318),
  ('term_pc_2 -> MULTIPLY','term_pc_2',1,'p_term_pc_2','parser.py',321),
  ('term_pc_2 -> DIVIDE','term_pc_2',1,'p_term_pc_2','parser.py',322),
  ('factor -> factor_exp','factor',1,'p_factor','parser.py',327),
  ('factor -> factor_cte','factor',1,'p_factor','parser.py',328),
  ('factor -> variable','factor',1,'p_factor','parser.py',329),
  ('factor -> call_function','factor',1,'p_factor','parser.py',330),
  ('factor_exp -> LPAREN exp RPAREN','factor_exp',3,'p_factor_exp','parser.py',333),
  ('factor_cte -> CTE_INT','factor_cte',1,'p_factor_cte','parser.py',336),
  ('factor_cte -> CTE_FLOAT','factor_cte',1,'p_factor_cte','parser.py',337),
  ('factor_cte -> CTE_CHAR','factor_cte',1,'p_factor_cte','parser.py',338),
]
