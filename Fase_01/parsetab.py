
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS ASSIGN CHAR COLON COMMA CTE_CHAR CTE_FLOAT CTE_INT DATAFRAME DATE DIVIDE DO DUMMI_REGRESSION ELSE END EQUAL EXPLORATION FINANCIAL_STATE FLOAT FOR FROM FUNCTION GTHAN ID IF IMPORT INT LBRACKET LPAREN LSQBRACKET LTHAN MAIN MINUS MODEL_PREDICT MODULE MULTIPLY NOTEQUAL OR PLUS POWER PRINT PROGRAM RBRACKET READ RETURN RPAREN RSQBRACKET SEASON_ANALYSIS SEMICOLON TO TREND_PREDICTION VAR VOID WHILEprogram : PROGRAM ID SEMICOLON program_libraries program_vars program_function program_main endend : END emptyempty : id_saver : ID empty int_const_saver : CTE_INT emptyprogram_libraries : from_library import_library \n                         | emptyfrom_library : FROM ID\n                    | emptyimport_library : IMPORT ID AS ID  program_librariesvar_type : var_c_type\n                | var_s_typeprogram_vars : VAR var_type  \n                    | emptys_type : INT \n              | FLOAT\n              | CHARc_type : DATAFRAME\n              | DATEvar_multiple : var_type\n                    | emptyvar_c_type : c_type id_saver add_c_var var_c_type2 SEMICOLON var_multiplevar_c_type2 : COMMA id_saver add_c_var var_c_type2\n                   | emptyadd_c_var : emptyvar_s_type : s_type id_saver var_s_array add_s_var var_s_type2 SEMICOLON var_multiplevar_s_type2 : COMMA id_saver var_s_array add_s_var var_s_type2\n                   | emptyadd_s_var : emptyvar_s_array : LSQBRACKET var_s_dimesions RSQBRACKET var_s_matrix \n                   | emptyvar_s_matrix : LSQBRACKET var_s_dimesions RSQBRACKET\n                    | emptyvar_s_dimesions : CTE_INT emptyvariable : id_saver variable_arrayvariable_array : LSQBRACKET exp RSQBRACKET variable_matrix\n                      | emptyvariable_matrix : LSQBRACKET exp RSQBRACKET\n                       | emptyprogram_function : FUNCTION f_type id_saver func_creator LPAREN param RPAREN LBRACKET program_vars inner_body return RBRACKET program_function\n                        | emptyf_type : INT \n              | FLOAT\n              | CHAR\n              | VOIDfunc_creator : emptyparam : s_type id_saver add_params param2param2 : COMMA s_type id_saver add_params param2\n              | emptyadd_params : emptyreturn : RETURN exp SEMICOLON\n              | emptyprogram_main : MAIN main_id LBRACKET program_vars inner_body RBRACKETmain_id : emptybody : LBRACKET inner_body RBRACKETinner_body :  statement inner_body\n                  | emptyassign : variable keep_assign specialf_assign end_assignspecialf_assign : exp\n                       | special_function\n                       | readkeep_assign : ASSIGN emptyend_assign : SEMICOLON emptycondition : IF LPAREN exp RPAREN body condition2 SEMICOLONcondition2 : ELSE body\n                 | emptyprint : PRINT LPAREN print_many RPAREN SEMICOLONprint_type : expprint_many : print_type  print_many2 print_many2 : COMMA print_many\n                   | emptyread : READ LPAREN variable RPARENcycle : for\n             | whilewhile : DO body WHILE LPAREN exp RPAREN SEMICOLONfor : FOR LPAREN ID TO for_end RPAREN body SEMICOLONfor_end : int_const_saver\n               | IDcall_function : function_saver LPAREN exp exp_many RPAREN function_saver : ID emptyexp_many : COMMA exp exp_many\n                | emptystatement : assign\n                 | condition\n                 | print\n                 | cycle\n                 | call_functionspecial_function : exploration\n                        | financial_state\n                        | dummi_regression\n                        | season_analysis\n                        | trend_prediction\n                        | model_predictexploration : EXPLORATION LPAREN variable explore_var explor_cte RPARENexplore_var : COMMA variable\n                   | emptyexplor_cte : COMMA int_const_saver\n                  | emptyfinancial_state : FINANCIAL_STATE LPAREN variable COMMA variable COMMA variable COMMA variable RPARENseason_analysis : SEASON_ANALYSIS LPAREN variable RPARENtrend_prediction : TREND_PREDICTION LPAREN variable COMMA int_const_saver COMMA int_const_saver COMMA int_const_saver RPARENdummi_regression : DUMMI_REGRESSION LPAREN variable COMMA variable dr_array dr_int RPARENdr_array : COMMA LSQBRACKET CTE_CHAR dr_array_mp RSQBRACKET\n                | emptydr_array_mp : COMMA CTE_CHAR dr_array_mp\n                   | emptydr_int : COMMA int_const_saver\n              | emptymodel_predict : MODEL_PREDICT LPAREN variable COMMA variable COMMA RPARENexp : t_exp exp_orexp_or : OR exp\n              | emptyt_exp : expression t_exp_andt_exp_and : AND t_exp\n                 | emptyexpression : m_exp expression_compexpression_comp : expression_comp_2 m_exp\n                       | emptyexpression_comp_2 : EQUAL\n                         | NOTEQUAL\n                         | LTHAN\n                         | GTHANm_exp : term m_exp_srm_exp_sr : m_exp_sr_2 m_exp\n                | emptym_exp_sr_2 : PLUS\n                  | MINUSterm : sub_factor term_pcterm_pc : term_pc_2 term\n               | emptyterm_pc_2 : MULTIPLY\n                 | DIVIDE\n                 | MODULEsub_factor : factor sub_factor_pcsub_factor_pc : sub_factor_pc_2 sub_factor\n                     | emptysub_factor_pc_2 : POWER emptyfactor : factor_exp\n              | factor_cte\n              | variable\n              | call_functionfactor_exp : LPAREN exp RPARENfactor_cte : CTE_FLOAT\n                  | CTE_INT\n                  | CTE_CHAR'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,40,41,52,],[0,-1,-3,-2,]),'ID':([2,8,11,13,18,19,20,21,22,23,24,25,26,27,31,32,33,34,35,39,53,57,64,66,69,74,76,77,78,79,80,84,85,92,93,94,95,97,104,105,106,107,108,110,112,115,119,135,154,164,169,170,172,174,177,179,180,181,182,183,184,186,188,189,190,191,193,195,196,198,200,201,202,204,206,211,214,217,218,220,225,240,242,244,246,255,258,260,261,264,274,285,289,295,301,312,],[3,14,-14,28,-13,-11,-12,37,37,-18,-19,-15,-16,-17,37,-42,-43,-44,-45,51,-3,37,89,-3,37,89,-83,-84,-85,-86,-87,-73,-74,37,-22,-20,-21,-3,153,-3,153,153,153,153,161,89,-26,153,-62,-3,-58,-3,153,37,153,37,37,37,37,37,37,153,-119,-120,-121,-122,153,-126,-127,153,-131,-132,-133,153,-3,153,153,249,153,89,-63,-137,-67,-79,153,37,37,37,37,37,153,-64,-75,37,-76,37,]),'SEMICOLON':([3,36,37,38,45,46,47,48,50,56,58,59,60,67,68,70,71,87,96,98,100,101,109,111,118,120,122,123,124,125,126,127,128,129,130,131,132,133,136,143,144,145,146,147,148,149,150,151,152,153,167,168,171,173,176,178,185,187,192,194,197,199,203,205,207,209,216,219,224,226,228,229,236,237,238,239,241,244,247,248,256,262,265,267,272,286,287,288,291,293,311,315,322,325,],[4,-3,-3,-3,-3,-25,-4,-3,-31,66,-24,-3,-29,-3,97,-28,-3,-3,-3,-3,-30,-33,-35,-37,-23,-3,-140,170,-59,-60,-61,-3,-88,-89,-90,-91,-92,-93,-3,-3,-3,-3,-3,-138,-139,-141,-143,-144,-145,-3,-3,-32,-110,-112,-113,-115,-116,-118,-123,-125,-128,-130,-134,-136,-4,242,-3,-55,-27,-111,-142,-114,-117,-124,-129,-135,-3,-79,-36,-39,-72,-100,285,-66,289,-65,-38,301,303,-94,-109,-102,-99,-101,]),'FROM':([4,51,],[8,8,]),'VAR':([4,5,7,12,51,53,63,164,],[-3,10,-7,-6,-3,10,-10,10,]),'FUNCTION':([4,5,7,9,11,12,18,19,20,51,63,66,93,94,95,97,119,290,],[-3,-3,-7,16,-14,-6,-13,-11,-12,-3,-10,-3,-22,-20,-21,-3,-26,16,]),'MAIN':([4,5,7,9,11,12,15,17,18,19,20,51,63,66,93,94,95,97,119,290,302,],[-3,-3,-7,-3,-14,-6,30,-41,-13,-11,-12,-3,-10,-3,-22,-20,-21,-3,-26,-3,-40,]),'IMPORT':([4,6,7,14,51,],[-3,13,-9,-8,-3,]),'DATAFRAME':([10,66,97,],[23,23,23,]),'DATE':([10,66,97,],[24,24,24,]),'INT':([10,16,65,66,97,222,],[25,32,25,25,25,25,]),'FLOAT':([10,16,65,66,97,222,],[26,33,26,26,26,26,]),'CHAR':([10,16,65,66,97,222,],[27,34,27,27,27,27,]),'IF':([11,18,19,20,53,64,66,74,76,77,78,79,80,84,85,93,94,95,97,115,119,164,169,170,220,225,242,244,285,289,301,],[-14,-13,-11,-12,-3,82,-3,82,-83,-84,-85,-86,-87,-73,-74,-22,-20,-21,-3,82,-26,-3,-58,-3,82,-63,-67,-79,-64,-75,-76,]),'PRINT':([11,18,19,20,53,64,66,74,76,77,78,79,80,84,85,93,94,95,97,115,119,164,169,170,220,225,242,244,285,289,301,],[-14,-13,-11,-12,-3,83,-3,83,-83,-84,-85,-86,-87,-73,-74,-22,-20,-21,-3,83,-26,-3,-58,-3,83,-63,-67,-79,-64,-75,-76,]),'FOR':([11,18,19,20,53,64,66,74,76,77,78,79,80,84,85,93,94,95,97,115,119,164,169,170,220,225,242,244,285,289,301,],[-14,-13,-11,-12,-3,88,-3,88,-83,-84,-85,-86,-87,-73,-74,-22,-20,-21,-3,88,-26,-3,-58,-3,88,-63,-67,-79,-64,-75,-76,]),'DO':([11,18,19,20,53,64,66,74,76,77,78,79,80,84,85,93,94,95,97,115,119,164,169,170,220,225,242,244,285,289,301,],[-14,-13,-11,-12,-3,90,-3,90,-83,-84,-85,-86,-87,-73,-74,-22,-20,-21,-3,90,-26,-3,-58,-3,90,-63,-67,-79,-64,-75,-76,]),'RBRACKET':([11,18,19,20,53,64,66,73,74,75,76,77,78,79,80,84,85,93,94,95,97,103,115,119,163,164,169,170,220,225,242,244,254,273,275,285,289,301,303,],[-14,-13,-11,-12,-3,-3,-3,102,-3,-57,-83,-84,-85,-86,-87,-73,-74,-22,-20,-21,-3,-56,-3,-26,219,-3,-58,-3,-3,-63,-67,-79,-3,290,-52,-64,-75,-76,-51,]),'RETURN':([11,18,19,20,66,74,75,76,77,78,79,80,84,85,93,94,95,97,103,119,164,169,170,220,225,242,244,254,285,289,301,],[-14,-13,-11,-12,-3,-3,-57,-83,-84,-85,-86,-87,-73,-74,-22,-20,-21,-3,-56,-26,-3,-58,-3,-3,-63,-67,-79,274,-64,-75,-76,]),'VOID':([16,],[35,]),'AS':([28,],[39,]),'END':([29,102,],[41,-53,]),'LBRACKET':([30,42,43,90,116,208,266,270,],[-3,53,-54,115,164,115,115,115,]),'COMMA':([36,37,38,45,46,47,48,50,59,60,67,71,87,96,98,100,101,109,111,117,120,122,127,136,143,144,145,146,147,148,149,150,151,152,153,157,158,159,165,166,167,168,171,173,176,178,185,187,192,194,197,199,203,205,207,216,226,228,229,230,231,232,234,235,236,237,238,239,244,245,247,248,252,257,259,271,276,280,281,282,283,284,287,292,297,298,305,310,313,323,324,],[-3,-3,-3,57,-25,-4,-3,-31,69,-29,-3,-3,-3,57,-3,-30,-33,-35,-37,-3,-3,-140,-3,-3,-3,-3,-3,-3,-138,-139,-141,-143,-144,-145,-3,211,-68,214,222,-50,69,-32,-110,-112,-113,-115,-116,-118,-123,-125,-128,-130,-134,-136,-4,-3,-111,-142,-114,258,260,261,263,264,-117,-124,-129,-135,-79,214,-36,-39,-3,278,-96,-5,-3,-95,295,296,299,300,-38,222,307,-104,312,316,318,318,-103,]),'LSQBRACKET':([37,38,47,71,87,89,98,113,153,207,216,296,],[-3,49,-4,99,110,-3,49,-4,-3,-4,246,306,]),'LPAREN':([37,44,47,54,55,82,83,86,88,89,104,105,106,107,108,110,113,134,135,137,138,139,140,141,142,153,154,162,172,177,186,188,189,190,191,193,195,196,198,200,201,202,204,206,207,211,214,218,240,246,274,],[-3,-3,-4,65,-46,106,107,108,112,-3,135,-3,135,135,135,135,-80,174,135,179,180,181,182,183,184,-3,-62,218,135,135,135,-119,-120,-121,-122,135,-126,-127,135,-131,-132,-133,135,-3,-80,135,135,135,-137,135,135,]),'RPAREN':([37,47,87,91,109,111,117,122,127,136,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,165,166,171,173,175,176,178,185,187,192,194,197,199,203,205,207,210,212,213,215,216,221,223,226,227,228,229,230,233,236,237,238,239,243,244,245,247,248,249,250,251,252,253,257,259,268,271,276,277,279,280,282,287,292,294,297,298,300,304,308,309,314,317,321,324,],[-3,-4,-3,116,-35,-37,-3,-140,-3,-3,-3,-3,-3,-3,-138,-139,-141,-143,-144,-145,-3,208,209,-3,-68,-3,-3,-50,-110,-112,228,-113,-115,-116,-118,-123,-125,-128,-130,-134,-136,-4,-69,-71,244,-82,-3,-47,-49,-111,256,-142,-114,-3,262,-117,-124,-129,-135,-70,-79,-3,-36,-39,-78,270,-77,-3,272,-3,-96,-81,-5,-3,293,-98,-95,-3,-38,-3,-97,-3,-104,311,-48,315,-108,-107,322,325,-103,]),'CTE_INT':([49,99,104,105,106,107,108,110,135,154,172,177,186,188,189,190,191,193,195,196,198,200,201,202,204,206,211,214,217,218,240,246,263,274,278,299,307,316,],[62,62,151,-3,151,151,151,151,151,-62,151,151,151,-119,-120,-121,-122,151,-126,-127,151,-131,-132,-133,151,-3,151,151,252,151,-137,151,252,151,252,252,252,252,]),'RSQBRACKET':([61,62,72,87,109,111,121,122,127,136,143,144,145,146,147,148,149,150,151,152,153,160,171,173,176,178,185,187,192,194,197,199,203,205,207,216,226,228,229,236,237,238,239,244,247,248,269,287,313,319,320,323,326,],[71,-3,-34,-3,-35,-37,168,-140,-3,-3,-3,-3,-3,-3,-138,-139,-141,-143,-144,-145,-3,216,-110,-112,-113,-115,-116,-118,-123,-125,-128,-130,-134,-136,-4,-3,-111,-142,-114,-117,-124,-129,-135,-79,-36,-39,287,-38,-3,324,-106,-3,-105,]),'ASSIGN':([81,87,89,109,111,113,216,247,248,287,],[105,-3,-3,-35,-37,-4,-3,-36,-39,-38,]),'POWER':([87,109,111,122,146,147,148,149,150,151,152,153,207,216,228,244,247,248,287,],[-3,-35,-37,-140,206,-138,-139,-141,-143,-144,-145,-3,-4,-3,-142,-79,-36,-39,-38,]),'MULTIPLY':([87,109,111,122,145,146,147,148,149,150,151,152,153,203,205,207,216,228,239,244,247,248,287,],[-3,-35,-37,-140,200,-3,-138,-139,-141,-143,-144,-145,-3,-134,-136,-4,-3,-142,-135,-79,-36,-39,-38,]),'DIVIDE':([87,109,111,122,145,146,147,148,149,150,151,152,153,203,205,207,216,228,239,244,247,248,287,],[-3,-35,-37,-140,201,-3,-138,-139,-141,-143,-144,-145,-3,-134,-136,-4,-3,-142,-135,-79,-36,-39,-38,]),'MODULE':([87,109,111,122,145,146,147,148,149,150,151,152,153,203,205,207,216,228,239,244,247,248,287,],[-3,-35,-37,-140,202,-3,-138,-139,-141,-143,-144,-145,-3,-134,-136,-4,-3,-142,-135,-79,-36,-39,-38,]),'PLUS':([87,109,111,122,144,145,146,147,148,149,150,151,152,153,197,199,203,205,207,216,228,238,239,244,247,248,287,],[-3,-35,-37,-140,195,-3,-3,-138,-139,-141,-143,-144,-145,-3,-128,-130,-134,-136,-4,-3,-142,-129,-135,-79,-36,-39,-38,]),'MINUS':([87,109,111,122,144,145,146,147,148,149,150,151,152,153,197,199,203,205,207,216,228,238,239,244,247,248,287,],[-3,-35,-37,-140,196,-3,-3,-138,-139,-141,-143,-144,-145,-3,-128,-130,-134,-136,-4,-3,-142,-129,-135,-79,-36,-39,-38,]),'EQUAL':([87,109,111,122,143,144,145,146,147,148,149,150,151,152,153,192,194,197,199,203,205,207,216,228,237,238,239,244,247,248,287,],[-3,-35,-37,-140,188,-3,-3,-3,-138,-139,-141,-143,-144,-145,-3,-123,-125,-128,-130,-134,-136,-4,-3,-142,-124,-129,-135,-79,-36,-39,-38,]),'NOTEQUAL':([87,109,111,122,143,144,145,146,147,148,149,150,151,152,153,192,194,197,199,203,205,207,216,228,237,238,239,244,247,248,287,],[-3,-35,-37,-140,189,-3,-3,-3,-138,-139,-141,-143,-144,-145,-3,-123,-125,-128,-130,-134,-136,-4,-3,-142,-124,-129,-135,-79,-36,-39,-38,]),'LTHAN':([87,109,111,122,143,144,145,146,147,148,149,150,151,152,153,192,194,197,199,203,205,207,216,228,237,238,239,244,247,248,287,],[-3,-35,-37,-140,190,-3,-3,-3,-138,-139,-141,-143,-144,-145,-3,-123,-125,-128,-130,-134,-136,-4,-3,-142,-124,-129,-135,-79,-36,-39,-38,]),'GTHAN':([87,109,111,122,143,144,145,146,147,148,149,150,151,152,153,192,194,197,199,203,205,207,216,228,237,238,239,244,247,248,287,],[-3,-35,-37,-140,191,-3,-3,-3,-138,-139,-141,-143,-144,-145,-3,-123,-125,-128,-130,-134,-136,-4,-3,-142,-124,-129,-135,-79,-36,-39,-38,]),'AND':([87,109,111,122,136,143,144,145,146,147,148,149,150,151,152,153,185,187,192,194,197,199,203,205,207,216,228,236,237,238,239,244,247,248,287,],[-3,-35,-37,-140,177,-3,-3,-3,-3,-138,-139,-141,-143,-144,-145,-3,-116,-118,-123,-125,-128,-130,-134,-136,-4,-3,-142,-117,-124,-129,-135,-79,-36,-39,-38,]),'OR':([87,109,111,122,127,136,143,144,145,146,147,148,149,150,151,152,153,176,178,185,187,192,194,197,199,203,205,207,216,228,229,236,237,238,239,244,247,248,287,],[-3,-35,-37,-140,172,-3,-3,-3,-3,-3,-138,-139,-141,-143,-144,-145,-3,-113,-115,-116,-118,-123,-125,-128,-130,-134,-136,-4,-3,-142,-114,-117,-124,-129,-135,-79,-36,-39,-38,]),'READ':([104,105,154,],[134,-3,-62,]),'EXPLORATION':([104,105,154,],[137,-3,-62,]),'FINANCIAL_STATE':([104,105,154,],[138,-3,-62,]),'DUMMI_REGRESSION':([104,105,154,],[139,-3,-62,]),'SEASON_ANALYSIS':([104,105,154,],[140,-3,-62,]),'TREND_PREDICTION':([104,105,154,],[141,-3,-62,]),'MODEL_PREDICT':([104,105,154,],[142,-3,-62,]),'CTE_FLOAT':([104,105,106,107,108,110,135,154,172,177,186,188,189,190,191,193,195,196,198,200,201,202,204,206,211,214,218,240,246,274,],[150,-3,150,150,150,150,150,-62,150,150,150,-119,-120,-121,-122,150,-126,-127,150,-131,-132,-133,150,-3,150,150,150,-137,150,150,]),'CTE_CHAR':([104,105,106,107,108,110,135,154,172,177,186,188,189,190,191,193,195,196,198,200,201,202,204,206,211,214,218,240,246,274,306,318,],[152,-3,152,152,152,152,152,-62,152,152,152,-119,-120,-121,-122,152,-126,-127,152,-131,-132,-133,152,-3,152,152,152,-137,152,152,313,323,]),'WHILE':([114,219,],[162,-55,]),'TO':([161,],[217,]),'ELSE':([219,241,],[-55,266,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_libraries':([4,51,],[5,63,]),'from_library':([4,51,],[6,6,]),'empty':([4,5,9,30,36,37,38,41,44,45,48,51,53,59,62,64,66,67,71,74,87,89,96,97,98,105,115,117,120,127,136,143,144,145,146,153,157,159,164,165,167,170,206,216,220,230,241,245,252,254,257,276,282,290,292,297,313,323,],[7,11,17,43,46,47,50,52,55,58,60,7,11,70,72,75,95,46,101,75,111,113,58,95,50,154,75,166,60,173,178,187,194,199,205,207,212,215,11,223,70,225,240,248,75,259,267,215,271,275,279,166,298,17,223,309,320,320,]),'program_vars':([5,53,164,],[9,64,220,]),'import_library':([6,],[12,]),'program_function':([9,290,],[15,302,]),'var_type':([10,66,97,],[18,94,94,]),'var_c_type':([10,66,97,],[19,19,19,]),'var_s_type':([10,66,97,],[20,20,20,]),'c_type':([10,66,97,],[21,21,21,]),'s_type':([10,65,66,97,222,],[22,92,22,22,255,]),'program_main':([15,],[29,]),'f_type':([16,],[31,]),'id_saver':([21,22,31,57,64,69,74,92,104,106,107,108,110,115,135,172,174,177,179,180,181,182,183,184,186,193,198,204,211,214,218,220,246,255,258,260,261,264,274,295,312,],[36,38,44,67,87,98,87,117,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,276,87,87,87,87,87,87,87,]),'end':([29,],[40,]),'main_id':([30,],[42,]),'add_c_var':([36,67,],[45,96,]),'var_s_array':([38,98,],[48,120,]),'func_creator':([44,],[54,]),'var_c_type2':([45,96,],[56,118,]),'add_s_var':([48,120,],[59,167,]),'var_s_dimesions':([49,99,],[61,121,]),'var_s_type2':([59,167,],[68,224,]),'inner_body':([64,74,115,220,],[73,103,163,254,]),'statement':([64,74,115,220,],[74,74,74,74,]),'assign':([64,74,115,220,],[76,76,76,76,]),'condition':([64,74,115,220,],[77,77,77,77,]),'print':([64,74,115,220,],[78,78,78,78,]),'cycle':([64,74,115,220,],[79,79,79,79,]),'call_function':([64,74,104,106,107,108,110,115,135,172,177,186,193,198,204,211,214,218,220,246,274,],[80,80,149,149,149,149,149,80,149,149,149,149,149,149,149,149,149,149,80,149,149,]),'variable':([64,74,104,106,107,108,110,115,135,172,174,177,179,180,181,182,183,184,186,193,198,204,211,214,218,220,246,258,260,261,264,274,295,312,],[81,81,122,122,122,122,122,81,122,122,227,122,230,231,232,233,234,235,122,122,122,122,122,122,122,81,122,280,281,282,284,122,305,317,]),'for':([64,74,115,220,],[84,84,84,84,]),'while':([64,74,115,220,],[85,85,85,85,]),'function_saver':([64,74,104,106,107,108,110,115,135,172,177,186,193,198,204,211,214,218,220,246,274,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'param':([65,],[91,]),'var_multiple':([66,97,],[93,119,]),'var_s_matrix':([71,],[100,]),'keep_assign':([81,],[104,]),'variable_array':([87,],[109,]),'body':([90,208,266,270,],[114,241,286,288,]),'specialf_assign':([104,],[123,]),'exp':([104,106,107,108,110,135,172,211,214,218,246,274,],[124,155,158,159,160,175,226,158,245,253,269,291,]),'special_function':([104,],[125,]),'read':([104,],[126,]),'t_exp':([104,106,107,108,110,135,172,177,211,214,218,246,274,],[127,127,127,127,127,127,127,229,127,127,127,127,127,]),'exploration':([104,],[128,]),'financial_state':([104,],[129,]),'dummi_regression':([104,],[130,]),'season_analysis':([104,],[131,]),'trend_prediction':([104,],[132,]),'model_predict':([104,],[133,]),'expression':([104,106,107,108,110,135,172,177,211,214,218,246,274,],[136,136,136,136,136,136,136,136,136,136,136,136,136,]),'m_exp':([104,106,107,108,110,135,172,177,186,193,211,214,218,246,274,],[143,143,143,143,143,143,143,143,236,237,143,143,143,143,143,]),'term':([104,106,107,108,110,135,172,177,186,193,198,211,214,218,246,274,],[144,144,144,144,144,144,144,144,144,144,238,144,144,144,144,144,]),'sub_factor':([104,106,107,108,110,135,172,177,186,193,198,204,211,214,218,246,274,],[145,145,145,145,145,145,145,145,145,145,145,239,145,145,145,145,145,]),'factor':([104,106,107,108,110,135,172,177,186,193,198,204,211,214,218,246,274,],[146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,]),'factor_exp':([104,106,107,108,110,135,172,177,186,193,198,204,211,214,218,246,274,],[147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,]),'factor_cte':([104,106,107,108,110,135,172,177,186,193,198,204,211,214,218,246,274,],[148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,]),'print_many':([107,211,],[156,243,]),'print_type':([107,211,],[157,157,]),'add_params':([117,276,],[165,292,]),'end_assign':([123,],[169,]),'exp_or':([127,],[171,]),'t_exp_and':([136,],[176,]),'expression_comp':([143,],[185,]),'expression_comp_2':([143,],[186,]),'m_exp_sr':([144,],[192,]),'m_exp_sr_2':([144,],[193,]),'term_pc':([145,],[197,]),'term_pc_2':([145,],[198,]),'sub_factor_pc':([146,],[203,]),'sub_factor_pc_2':([146,],[204,]),'print_many2':([157,],[210,]),'exp_many':([159,245,],[213,268,]),'param2':([165,292,],[221,304,]),'variable_matrix':([216,],[247,]),'for_end':([217,],[250,]),'int_const_saver':([217,263,278,299,307,316,],[251,283,294,310,314,321,]),'explore_var':([230,],[257,]),'condition2':([241,],[265,]),'return':([254,],[273,]),'explor_cte':([257,],[277,]),'dr_array':([282,],[297,]),'dr_int':([297,],[308,]),'dr_array_mp':([313,323,],[319,326,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON program_libraries program_vars program_function program_main end','program',8,'p_program','parser.py',30),
  ('end -> END empty','end',2,'p_end','parser.py',34),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',38),
  ('id_saver -> ID empty','id_saver',2,'p_id_saver','parser.py',45),
  ('int_const_saver -> CTE_INT empty','int_const_saver',2,'p_int_const_saver','parser.py',53),
  ('program_libraries -> from_library import_library','program_libraries',2,'p_program_libraries','parser.py',60),
  ('program_libraries -> empty','program_libraries',1,'p_program_libraries','parser.py',61),
  ('from_library -> FROM ID','from_library',2,'p_from_library','parser.py',64),
  ('from_library -> empty','from_library',1,'p_from_library','parser.py',65),
  ('import_library -> IMPORT ID AS ID program_libraries','import_library',5,'p_import_library','parser.py',68),
  ('var_type -> var_c_type','var_type',1,'p_var_type','parser.py',73),
  ('var_type -> var_s_type','var_type',1,'p_var_type','parser.py',74),
  ('program_vars -> VAR var_type','program_vars',2,'p_program_vars','parser.py',77),
  ('program_vars -> empty','program_vars',1,'p_program_vars','parser.py',78),
  ('s_type -> INT','s_type',1,'p_s_type','parser.py',88),
  ('s_type -> FLOAT','s_type',1,'p_s_type','parser.py',89),
  ('s_type -> CHAR','s_type',1,'p_s_type','parser.py',90),
  ('c_type -> DATAFRAME','c_type',1,'p_c_type','parser.py',97),
  ('c_type -> DATE','c_type',1,'p_c_type','parser.py',98),
  ('var_multiple -> var_type','var_multiple',1,'p_var_multiple','parser.py',105),
  ('var_multiple -> empty','var_multiple',1,'p_var_multiple','parser.py',106),
  ('var_c_type -> c_type id_saver add_c_var var_c_type2 SEMICOLON var_multiple','var_c_type',6,'p_var_c_type','parser.py',109),
  ('var_c_type2 -> COMMA id_saver add_c_var var_c_type2','var_c_type2',4,'p_var_c_type2','parser.py',112),
  ('var_c_type2 -> empty','var_c_type2',1,'p_var_c_type2','parser.py',113),
  ('add_c_var -> empty','add_c_var',1,'p_add_c_var','parser.py',116),
  ('var_s_type -> s_type id_saver var_s_array add_s_var var_s_type2 SEMICOLON var_multiple','var_s_type',7,'p_var_s_type','parser.py',122),
  ('var_s_type2 -> COMMA id_saver var_s_array add_s_var var_s_type2','var_s_type2',5,'p_var_s_type2','parser.py',125),
  ('var_s_type2 -> empty','var_s_type2',1,'p_var_s_type2','parser.py',126),
  ('add_s_var -> empty','add_s_var',1,'p_add_s_var','parser.py',130),
  ('var_s_array -> LSQBRACKET var_s_dimesions RSQBRACKET var_s_matrix','var_s_array',4,'p_var_s_array','parser.py',138),
  ('var_s_array -> empty','var_s_array',1,'p_var_s_array','parser.py',139),
  ('var_s_matrix -> LSQBRACKET var_s_dimesions RSQBRACKET','var_s_matrix',3,'p_var_s_matrix','parser.py',142),
  ('var_s_matrix -> empty','var_s_matrix',1,'p_var_s_matrix','parser.py',143),
  ('var_s_dimesions -> CTE_INT empty','var_s_dimesions',2,'p_var_s_dimesions','parser.py',147),
  ('variable -> id_saver variable_array','variable',2,'p_variable','parser.py',164),
  ('variable_array -> LSQBRACKET exp RSQBRACKET variable_matrix','variable_array',4,'p_variable_array','parser.py',173),
  ('variable_array -> empty','variable_array',1,'p_variable_array','parser.py',174),
  ('variable_matrix -> LSQBRACKET exp RSQBRACKET','variable_matrix',3,'p_variable_matrix','parser.py',177),
  ('variable_matrix -> empty','variable_matrix',1,'p_variable_matrix','parser.py',178),
  ('program_function -> FUNCTION f_type id_saver func_creator LPAREN param RPAREN LBRACKET program_vars inner_body return RBRACKET program_function','program_function',13,'p_program_function','parser.py',184),
  ('program_function -> empty','program_function',1,'p_program_function','parser.py',185),
  ('f_type -> INT','f_type',1,'p_f_type','parser.py',188),
  ('f_type -> FLOAT','f_type',1,'p_f_type','parser.py',189),
  ('f_type -> CHAR','f_type',1,'p_f_type','parser.py',190),
  ('f_type -> VOID','f_type',1,'p_f_type','parser.py',191),
  ('func_creator -> empty','func_creator',1,'p_func_creator','parser.py',199),
  ('param -> s_type id_saver add_params param2','param',4,'p_param','parser.py',207),
  ('param2 -> COMMA s_type id_saver add_params param2','param2',5,'p_param2','parser.py',210),
  ('param2 -> empty','param2',1,'p_param2','parser.py',211),
  ('add_params -> empty','add_params',1,'p_add_params','parser.py',215),
  ('return -> RETURN exp SEMICOLON','return',3,'p_return','parser.py',222),
  ('return -> empty','return',1,'p_return','parser.py',223),
  ('program_main -> MAIN main_id LBRACKET program_vars inner_body RBRACKET','program_main',6,'p_program_main','parser.py',227),
  ('main_id -> empty','main_id',1,'p_main_id','parser.py',230),
  ('body -> LBRACKET inner_body RBRACKET','body',3,'p_body','parser.py',237),
  ('inner_body -> statement inner_body','inner_body',2,'p_inner_body','parser.py',241),
  ('inner_body -> empty','inner_body',1,'p_inner_body','parser.py',242),
  ('assign -> variable keep_assign specialf_assign end_assign','assign',4,'p_assign','parser.py',247),
  ('specialf_assign -> exp','specialf_assign',1,'p_specialf_assign','parser.py',251),
  ('specialf_assign -> special_function','specialf_assign',1,'p_specialf_assign','parser.py',252),
  ('specialf_assign -> read','specialf_assign',1,'p_specialf_assign','parser.py',253),
  ('keep_assign -> ASSIGN empty','keep_assign',2,'p_keep_assign','parser.py',257),
  ('end_assign -> SEMICOLON empty','end_assign',2,'p_end_assign','parser.py',267),
  ('condition -> IF LPAREN exp RPAREN body condition2 SEMICOLON','condition',7,'p_condition','parser.py',279),
  ('condition2 -> ELSE body','condition2',2,'p_condition2','parser.py',282),
  ('condition2 -> empty','condition2',1,'p_condition2','parser.py',283),
  ('print -> PRINT LPAREN print_many RPAREN SEMICOLON','print',5,'p_print','parser.py',287),
  ('print_type -> exp','print_type',1,'p_print_type','parser.py',291),
  ('print_many -> print_type print_many2','print_many',2,'p_print_many','parser.py',294),
  ('print_many2 -> COMMA print_many','print_many2',2,'p_print_many2','parser.py',297),
  ('print_many2 -> empty','print_many2',1,'p_print_many2','parser.py',298),
  ('read -> READ LPAREN variable RPAREN','read',4,'p_read','parser.py',304),
  ('cycle -> for','cycle',1,'p_cycle','parser.py',308),
  ('cycle -> while','cycle',1,'p_cycle','parser.py',309),
  ('while -> DO body WHILE LPAREN exp RPAREN SEMICOLON','while',7,'p_while','parser.py',313),
  ('for -> FOR LPAREN ID TO for_end RPAREN body SEMICOLON','for',8,'p_for','parser.py',317),
  ('for_end -> int_const_saver','for_end',1,'p_for_end','parser.py',320),
  ('for_end -> ID','for_end',1,'p_for_end','parser.py',321),
  ('call_function -> function_saver LPAREN exp exp_many RPAREN','call_function',5,'p_call_function','parser.py',326),
  ('function_saver -> ID empty','function_saver',2,'p_function_saver','parser.py',331),
  ('exp_many -> COMMA exp exp_many','exp_many',3,'p_exp_many','parser.py',338),
  ('exp_many -> empty','exp_many',1,'p_exp_many','parser.py',339),
  ('statement -> assign','statement',1,'p_statement','parser.py',343),
  ('statement -> condition','statement',1,'p_statement','parser.py',344),
  ('statement -> print','statement',1,'p_statement','parser.py',345),
  ('statement -> cycle','statement',1,'p_statement','parser.py',346),
  ('statement -> call_function','statement',1,'p_statement','parser.py',347),
  ('special_function -> exploration','special_function',1,'p_special_function','parser.py',351),
  ('special_function -> financial_state','special_function',1,'p_special_function','parser.py',352),
  ('special_function -> dummi_regression','special_function',1,'p_special_function','parser.py',353),
  ('special_function -> season_analysis','special_function',1,'p_special_function','parser.py',354),
  ('special_function -> trend_prediction','special_function',1,'p_special_function','parser.py',355),
  ('special_function -> model_predict','special_function',1,'p_special_function','parser.py',356),
  ('exploration -> EXPLORATION LPAREN variable explore_var explor_cte RPAREN','exploration',6,'p_exploration','parser.py',362),
  ('explore_var -> COMMA variable','explore_var',2,'p_explore_var','parser.py',365),
  ('explore_var -> empty','explore_var',1,'p_explore_var','parser.py',366),
  ('explor_cte -> COMMA int_const_saver','explor_cte',2,'p_explor_cte','parser.py',369),
  ('explor_cte -> empty','explor_cte',1,'p_explor_cte','parser.py',370),
  ('financial_state -> FINANCIAL_STATE LPAREN variable COMMA variable COMMA variable COMMA variable RPAREN','financial_state',10,'p_financial_state','parser.py',374),
  ('season_analysis -> SEASON_ANALYSIS LPAREN variable RPAREN','season_analysis',4,'p_season_analysis','parser.py',378),
  ('trend_prediction -> TREND_PREDICTION LPAREN variable COMMA int_const_saver COMMA int_const_saver COMMA int_const_saver RPAREN','trend_prediction',10,'p_trend_prediction','parser.py',384),
  ('dummi_regression -> DUMMI_REGRESSION LPAREN variable COMMA variable dr_array dr_int RPAREN','dummi_regression',8,'p_dummi_regression','parser.py',388),
  ('dr_array -> COMMA LSQBRACKET CTE_CHAR dr_array_mp RSQBRACKET','dr_array',5,'p_dr_array','parser.py',391),
  ('dr_array -> empty','dr_array',1,'p_dr_array','parser.py',392),
  ('dr_array_mp -> COMMA CTE_CHAR dr_array_mp','dr_array_mp',3,'p_dr_array_mp','parser.py',395),
  ('dr_array_mp -> empty','dr_array_mp',1,'p_dr_array_mp','parser.py',396),
  ('dr_int -> COMMA int_const_saver','dr_int',2,'p_dr_int','parser.py',399),
  ('dr_int -> empty','dr_int',1,'p_dr_int','parser.py',400),
  ('model_predict -> MODEL_PREDICT LPAREN variable COMMA variable COMMA RPAREN','model_predict',7,'p_model_predict','parser.py',404),
  ('exp -> t_exp exp_or','exp',2,'p_exp','parser.py',409),
  ('exp_or -> OR exp','exp_or',2,'p_exp_or','parser.py',412),
  ('exp_or -> empty','exp_or',1,'p_exp_or','parser.py',413),
  ('t_exp -> expression t_exp_and','t_exp',2,'p_t_exp','parser.py',417),
  ('t_exp_and -> AND t_exp','t_exp_and',2,'p_t_exp_and','parser.py',420),
  ('t_exp_and -> empty','t_exp_and',1,'p_t_exp_and','parser.py',421),
  ('expression -> m_exp expression_comp','expression',2,'p_expression','parser.py',425),
  ('expression_comp -> expression_comp_2 m_exp','expression_comp',2,'p_expression_comp','parser.py',428),
  ('expression_comp -> empty','expression_comp',1,'p_expression_comp','parser.py',429),
  ('expression_comp_2 -> EQUAL','expression_comp_2',1,'p_expression_comp_2','parser.py',432),
  ('expression_comp_2 -> NOTEQUAL','expression_comp_2',1,'p_expression_comp_2','parser.py',433),
  ('expression_comp_2 -> LTHAN','expression_comp_2',1,'p_expression_comp_2','parser.py',434),
  ('expression_comp_2 -> GTHAN','expression_comp_2',1,'p_expression_comp_2','parser.py',435),
  ('m_exp -> term m_exp_sr','m_exp',2,'p_m_exp','parser.py',440),
  ('m_exp_sr -> m_exp_sr_2 m_exp','m_exp_sr',2,'p_m_exp_sr','parser.py',444),
  ('m_exp_sr -> empty','m_exp_sr',1,'p_m_exp_sr','parser.py',445),
  ('m_exp_sr_2 -> PLUS','m_exp_sr_2',1,'p_m_exp_sr_2','parser.py',448),
  ('m_exp_sr_2 -> MINUS','m_exp_sr_2',1,'p_m_exp_sr_2','parser.py',449),
  ('term -> sub_factor term_pc','term',2,'p_term','parser.py',455),
  ('term_pc -> term_pc_2 term','term_pc',2,'p_term_pc','parser.py',458),
  ('term_pc -> empty','term_pc',1,'p_term_pc','parser.py',459),
  ('term_pc_2 -> MULTIPLY','term_pc_2',1,'p_term_pc_2','parser.py',462),
  ('term_pc_2 -> DIVIDE','term_pc_2',1,'p_term_pc_2','parser.py',463),
  ('term_pc_2 -> MODULE','term_pc_2',1,'p_term_pc_2','parser.py',464),
  ('sub_factor -> factor sub_factor_pc','sub_factor',2,'p_sub_factor','parser.py',469),
  ('sub_factor_pc -> sub_factor_pc_2 sub_factor','sub_factor_pc',2,'p_sub_factor_pc','parser.py',472),
  ('sub_factor_pc -> empty','sub_factor_pc',1,'p_sub_factor_pc','parser.py',473),
  ('sub_factor_pc_2 -> POWER empty','sub_factor_pc_2',2,'p_sub_factor_pc_2','parser.py',476),
  ('factor -> factor_exp','factor',1,'p_factor','parser.py',482),
  ('factor -> factor_cte','factor',1,'p_factor','parser.py',483),
  ('factor -> variable','factor',1,'p_factor','parser.py',484),
  ('factor -> call_function','factor',1,'p_factor','parser.py',485),
  ('factor_exp -> LPAREN exp RPAREN','factor_exp',3,'p_factor_exp','parser.py',488),
  ('factor_cte -> CTE_FLOAT','factor_cte',1,'p_factor_cte','parser.py',491),
  ('factor_cte -> CTE_INT','factor_cte',1,'p_factor_cte','parser.py',492),
  ('factor_cte -> CTE_CHAR','factor_cte',1,'p_factor_cte','parser.py',493),
]
