
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS ASSIGN CHAR COLON COMMA CTE_CHAR CTE_FLOAT CTE_INT DATAFRAME DATE DIVIDE DO DUMMI_REGRESSION ELSE END EQUAL EXPLORATION FINANCIAL_STATE FLOAT FOR FROM FUNCTION GORE GTHAN ID IF IMPORT INT LBRACKET LORE LPAREN LSQBRACKET LTHAN MAIN MINUS MODEL_PREDICT MODULE MULTIPLY NOTEQUAL OR PLUS POWER PRINT PROGRAM RBRACKET READ RETURN RPAREN RSQBRACKET SEASON_ANALYSIS SEMICOLON TO TREND_PREDICTION VAR VOID WHILEprogram : PROGRAM ID goto_main program_vars program_function program_main end goto_main : SEMICOLONend : END empty : id_saver : ID empty int_const_saver : CTE_INT \n                       | emptyrelease_exp : emptyresources : emptyvar_type : var_c_type\n                | var_s_typeprogram_vars : VAR var_type  \n                    | emptys_type : INT \n              | FLOAT\n              | CHARc_type : DATAFRAMEvar_multiple : var_type\n                    | emptyvar_c_type : c_type id_saver add_c_var var_c_type2 SEMICOLON var_multiplevar_c_type2 : COMMA id_saver add_c_var var_c_type2\n                   | emptyadd_c_var : emptyvar_s_type : s_type id_saver var_s_array add_s_var var_s_type2 SEMICOLON var_multiplevar_s_type2 : COMMA id_saver var_s_array add_s_var var_s_type2\n                   | emptyadd_s_var : emptyvar_s_array : LSQBRACKET var_s_dimesions RSQBRACKET var_s_matrix \n                   | emptyvar_s_matrix : LSQBRACKET var_s_dimesions RSQBRACKET\n                    | emptyvar_s_dimesions : CTE_INT emptyvariable : var_id_saver variable_array clear_dimension clear_dimension : empty var_id_saver : id_savervariable_array : save_var exp index_arr_mat variable_matrix\n                      | emptysave_var : LSQBRACKETvariable_matrix : LSQBRACKET exp index_arr_mat\n                       | emptyindex_arr_mat : RSQBRACKETprogram_function : FUNCTION resources f_type id_saver func_creator LPAREN param RPAREN LBRACKET program_vars inner_body return end_function program_function\n                        | emptyf_type : INT \n              | FLOAT\n              | CHAR\n              | VOIDfunc_creator : emptyend_function : RBRACKETparam : s_type id_saver add_params param2\n             | emptyparam2 : COMMA s_type id_saver add_params param2\n              | emptyadd_params : emptyreturn : return_np exp return_quad SEMICOLON\n              | empty_path_returnreturn_np : RETURNreturn_quad : emptyempty_path_return : emptyprogram_main :  main_id LBRACKET program_vars inner_body RBRACKETmain_id : MAIN resources body : LBRACKET inner_body RBRACKETinner_body :  statement inner_body\n                  | emptyassign : variable keep_assign specialf_assign end_assignspecialf_assign : exp\n                       | special_function\n                       | readkeep_assign : ASSIGN emptyend_assign : SEMICOLON emptycondition : IF LPAREN exp RPAREN condition_GOTOF body condition2 SEMICOLON end_conditioncondition2 : ELSE condition_GOTO body\n                 | emptycondition_GOTOF : emptycondition_GOTO : emptyend_condition : emptyprint : PRINT LPAREN print_many RPAREN SEMICOLON end_print_npprint_type : expprint_many : print_type print_many2 print_many2 : COMMA print_many_np print_many\n                   | emptyprint_many_np : emptyend_print_np : emptyread : READ LPAREN valid_exp_read read_npvalid_exp_read : expread_np : RPARENcycle : for\n             | whilewhile : DO seed body WHILE LPAREN exp RPAREN SEMICOLON gotoVseed : emptygotoV : emptyfor : FOR LPAREN for_control keep_assign exp for_np1 for_end body for_np2for_control : id_saverfor_np1 :  TOfor_end : int_const_saver RPARENfor_np2 : SEMICOLONcall_function : function_saver function_flag call_params check_not_void check_not_void : RPARENcall_void_function : function_saver function_flag call_params verify_params check_voidverify_params : RPARENcheck_void : SEMICOLONfunction_saver : ID emptyfunction_flag : LPARENcall_params : check_param exp_many \n                   | emptycheck_param : expexp_many : COMMA check_param exp_many\n                | emptystatement : assign\n                 | condition\n                 | print\n                 | cycle\n                 | call_void_functionspecial_function : exploration\n                        | financial_state\n                        | dummi_regression\n                        | season_analysis\n                        | trend_prediction\n                        | model_predicttag_sp : LPARENexploration : EXPLORATION tag_sp variable explore_cte np_check_sizesp_param : COMMAnp_check_size : RPARENexplore_cte : sp_param int_const_saverfinancial_state : FINANCIAL_STATE tag_sp variable sp_param variable sp_param exp sp_param exp np_check_sizeseason_analysis : SEASON_ANALYSIS tag_sp variable np_check_sizetrend_prediction : TREND_PREDICTION tag_sp variable np_check_sizedummi_regression : DUMMI_REGRESSION tag_sp variable sp_param exp np_check_sizemodel_predict : MODEL_PREDICT tag_sp variable np_check_sizeexp : t_exp release_exp exp_orexp_or : exp_keep_or  exp\n              | emptyexp_keep_or : ORt_exp : expression release_exp t_exp_andt_exp_and : keep_and t_exp\n                 | emptykeep_and : AND expression : m_exp release_exp expression_compexpression_comp :  expression_comp_2  m_exp release_exp\n                       |  emptyexpression_comp_2 : GTHAN\n                         | EQUAL\n                         | NOTEQUAL\n                         | LTHAN\n                         | GORE\n                         | LORE\n                         m_exp : term release_exp m_exp_srm_exp_sr : m_exp_sr_2 m_exp\n                | emptym_exp_sr_2 : PLUS\n                  | MINUSterm : sub_factor release_exp term_pcterm_pc : term_pc_2 term\n               | emptyterm_pc_2 : MULTIPLY\n                 | DIVIDE\n                 | MODULEsub_factor : factor release_exp sub_factor_pcsub_factor_pc : sub_factor_pc_2 sub_factor\n                     | emptysub_factor_pc_2 : POWER emptyfactor : factor_exp\n              | factor_cte\n              | variable\n              | call_functionfactor_exp : false_button exp release_false_buttonfalse_button : LPARENrelease_false_button : RPARENfactor_cte : CTE_FLOAT\n                  | CTE_INT\n                  | CTE_CHAR'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,29,30,],[0,-1,-3,]),'ID':([2,8,12,13,14,15,16,17,18,19,20,31,33,34,35,36,37,44,47,54,56,57,58,59,60,64,65,74,77,83,84,85,86,87,88,90,92,93,98,99,100,102,120,135,140,155,157,160,163,164,167,169,170,171,172,173,174,175,181,185,190,194,201,203,205,209,211,219,221,222,223,224,225,226,228,230,231,233,235,236,237,239,241,247,248,249,250,251,254,257,259,269,270,271,280,284,285,292,311,312,314,319,321,323,327,328,330,331,332,333,338,],[3,-13,-12,-10,-11,27,27,-17,-14,-15,-16,-4,27,-44,-45,-46,-47,70,27,70,-109,-110,-111,-112,-113,-87,-88,-4,27,70,-4,70,70,70,-103,70,-38,27,-20,-18,-19,-4,-167,70,-69,70,27,-24,-65,-4,70,27,-120,27,27,27,27,27,70,-4,70,70,-70,70,-133,70,-137,70,-141,-142,-143,-144,-145,-146,70,-150,-151,70,-155,-156,-157,70,-4,-4,70,-82,-99,-101,70,70,-4,-122,27,70,-161,-77,-83,70,27,70,-4,-4,70,-57,-71,-76,-92,-96,-89,-91,70,]),'SEMICOLON':([3,26,27,28,38,39,40,41,43,46,48,49,50,67,70,71,75,76,78,79,89,91,96,101,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,121,128,129,130,131,132,133,134,136,137,138,149,150,159,161,165,166,168,176,177,178,179,183,187,188,192,193,199,200,202,204,208,210,218,220,227,229,232,234,238,240,242,243,253,255,258,262,263,264,265,266,272,273,274,275,276,277,278,279,281,282,283,296,302,303,305,306,309,313,317,329,336,340,341,345,],[5,-4,-4,-4,-4,-23,-5,-4,-29,74,-22,-4,-27,-4,-4,-35,-4,102,-26,-4,-4,-37,-5,-4,-4,-28,-31,-164,164,-66,-67,-68,-4,-114,-115,-116,-117,-118,-119,-4,-4,-4,-4,-4,-162,-163,-165,-169,-170,-171,-33,-34,-21,-4,-4,-8,-4,-4,-4,-4,-4,247,251,-100,-4,-41,-4,-30,-130,-132,-134,-136,-138,-140,-147,-149,-152,-154,-158,-160,-166,-168,-36,-40,-62,-25,-131,-84,-86,-135,-126,-123,-127,-129,-4,-148,-153,-159,-97,-98,-4,-121,-139,314,-73,-39,319,-128,331,-72,-4,344,-58,-125,]),'VAR':([4,5,31,259,],[7,-2,7,7,]),'FUNCTION':([4,5,6,8,12,13,14,74,98,99,100,102,160,334,335,],[-4,-2,10,-13,-12,-10,-11,-4,-20,-18,-19,-4,-24,10,-49,]),'MAIN':([4,5,6,8,9,11,12,13,14,74,98,99,100,102,160,334,335,339,],[-4,-2,-4,-13,23,-43,-12,-10,-11,-4,-20,-18,-19,-4,-24,-4,-49,-42,]),'DATAFRAME':([7,74,102,],[17,17,17,]),'INT':([7,10,24,25,74,97,102,294,],[18,-4,34,-9,18,18,18,18,]),'FLOAT':([7,10,24,25,74,97,102,294,],[19,-4,35,-9,19,19,19,19,]),'CHAR':([7,10,24,25,74,97,102,294,],[20,-4,36,-9,20,20,20,20,]),'IF':([8,12,13,14,31,44,54,56,57,58,59,60,64,65,74,98,99,100,102,155,160,163,164,201,247,250,251,259,284,285,292,314,319,327,328,330,331,332,333,],[-13,-12,-10,-11,-4,62,62,-109,-110,-111,-112,-113,-87,-88,-4,-20,-18,-19,-4,62,-24,-65,-4,-70,-4,-99,-101,-4,-77,-83,62,-4,-4,-71,-76,-92,-96,-89,-91,]),'PRINT':([8,12,13,14,31,44,54,56,57,58,59,60,64,65,74,98,99,100,102,155,160,163,164,201,247,250,251,259,284,285,292,314,319,327,328,330,331,332,333,],[-13,-12,-10,-11,-4,63,63,-109,-110,-111,-112,-113,-87,-88,-4,-20,-18,-19,-4,63,-24,-65,-4,-70,-4,-99,-101,-4,-77,-83,63,-4,-4,-71,-76,-92,-96,-89,-91,]),'FOR':([8,12,13,14,31,44,54,56,57,58,59,60,64,65,74,98,99,100,102,155,160,163,164,201,247,250,251,259,284,285,292,314,319,327,328,330,331,332,333,],[-13,-12,-10,-11,-4,68,68,-109,-110,-111,-112,-113,-87,-88,-4,-20,-18,-19,-4,68,-24,-65,-4,-70,-4,-99,-101,-4,-77,-83,68,-4,-4,-71,-76,-92,-96,-89,-91,]),'DO':([8,12,13,14,31,44,54,56,57,58,59,60,64,65,74,98,99,100,102,155,160,163,164,201,247,250,251,259,284,285,292,314,319,327,328,330,331,332,333,],[-13,-12,-10,-11,-4,69,69,-109,-110,-111,-112,-113,-87,-88,-4,-20,-18,-19,-4,69,-24,-65,-4,-70,-4,-99,-101,-4,-77,-83,69,-4,-4,-71,-76,-92,-96,-89,-91,]),'RBRACKET':([8,12,13,14,31,44,53,54,55,56,57,58,59,60,64,65,74,82,98,99,100,102,155,160,163,164,196,201,247,250,251,259,284,285,292,310,314,319,320,322,324,327,328,330,331,332,333,344,],[-13,-12,-10,-11,-4,-4,81,-4,-64,-109,-110,-111,-112,-113,-87,-88,-4,-63,-20,-18,-19,-4,-4,-24,-65,-4,258,-70,-4,-99,-101,-4,-77,-83,-4,-4,-4,-4,335,-56,-59,-71,-76,-92,-96,-89,-91,-55,]),'RETURN':([8,12,13,14,54,55,56,57,58,59,60,64,65,74,82,98,99,100,102,160,163,164,201,247,250,251,259,284,285,292,310,314,319,327,328,330,331,332,333,],[-13,-12,-10,-11,-4,-64,-109,-110,-111,-112,-113,-87,-88,-4,-63,-20,-18,-19,-4,-24,-65,-4,-70,-4,-99,-101,-4,-77,-83,-4,323,-4,-4,-71,-76,-92,-96,-89,-91,]),'VOID':([10,24,25,],[-4,37,-9,]),'END':([21,81,],[30,-60,]),'LBRACKET':([22,23,25,32,69,94,95,182,197,245,246,304,307,315,316,318,],[31,-4,-9,-61,-4,155,-90,-4,259,155,-74,-4,155,155,-75,-95,]),'COMMA':([26,27,28,38,39,40,41,43,49,50,67,70,71,75,79,89,91,96,101,103,105,106,107,112,121,128,129,130,131,132,133,134,136,137,138,143,144,146,148,149,150,161,165,166,168,176,177,178,179,192,193,198,199,200,202,204,208,210,212,213,214,218,220,227,229,232,234,238,240,242,243,252,253,255,260,261,263,266,276,277,278,279,281,282,300,302,306,325,326,337,],[-4,-4,-4,47,-23,-5,-4,-29,77,-27,-4,-4,-35,-4,-4,-4,-37,-5,47,-4,-28,-31,-164,-4,-4,-4,-4,-4,-4,-162,-163,-165,-169,-170,-171,185,-78,190,-106,-33,-34,-4,-4,-8,-4,-4,-4,-4,-4,-4,-41,-4,77,-30,-130,-132,-134,-136,269,269,269,-138,-140,-147,-149,-152,-154,-158,-160,-166,-168,190,-36,-40,294,-54,-131,-135,-4,-148,-153,-159,-97,-98,269,-139,-39,-4,269,294,]),'LSQBRACKET':([27,28,40,67,70,71,79,96,103,192,193,],[-4,42,-5,92,-4,-35,104,-5,42,254,-41,]),'LPAREN':([27,40,45,62,63,66,68,70,72,73,83,84,85,86,87,88,90,92,96,119,120,122,123,124,125,126,127,135,139,140,167,181,185,190,194,195,203,205,209,211,219,221,222,223,224,225,226,228,230,231,233,235,236,237,239,241,248,249,254,257,269,271,280,312,321,323,338,],[-4,-5,-4,85,86,88,93,-4,97,-48,120,-4,120,120,120,-103,120,-38,-102,167,-167,170,170,170,170,170,170,120,88,-69,120,120,-4,120,120,257,120,-133,120,-137,120,-141,-142,-143,-144,-145,-146,120,-150,-151,120,-155,-156,-157,120,-4,120,-82,120,120,-122,120,-161,120,120,-57,120,]),'ASSIGN':([27,40,61,67,70,71,89,91,96,149,150,152,153,192,193,253,255,306,],[-4,-5,84,-4,-4,-35,-4,-37,-5,-33,-34,84,-93,-4,-41,-36,-40,-39,]),'RPAREN':([27,40,67,70,71,87,88,89,91,96,97,107,112,121,128,129,130,131,132,133,134,136,137,138,141,142,143,144,145,146,147,148,149,150,156,158,165,166,168,176,177,178,179,180,181,184,186,189,191,192,193,198,202,204,206,207,208,210,215,216,217,218,220,227,229,232,234,238,240,242,243,244,252,253,255,260,261,263,266,267,268,269,276,277,278,279,281,282,286,287,289,290,291,293,295,297,298,299,301,302,306,308,325,337,342,343,],[-4,-5,-4,-4,-35,-4,-103,-4,-37,-5,-4,-164,-4,-4,-4,-4,-4,-4,-162,-163,-165,-169,-170,-171,182,183,-4,-78,188,-4,-105,-106,-33,-34,197,-51,-4,-8,-4,-4,-4,-4,-4,243,-4,-79,-81,-104,-108,-4,-41,-4,-130,-132,265,-85,-134,-136,273,273,273,-138,-140,-147,-149,-152,-154,-158,-160,-166,-168,282,-4,-36,-40,-4,-54,-131,-135,273,-4,-122,-4,-148,-153,-159,-97,-98,-80,-107,-4,-94,309,-50,-53,-124,-6,-7,273,-139,-39,318,-4,-4,-52,273,]),'CTE_INT':([42,83,84,85,86,87,88,90,92,104,120,135,140,167,181,185,190,194,203,205,209,211,219,221,222,223,224,225,226,228,230,231,233,235,236,237,239,241,248,249,254,257,268,269,271,280,289,290,312,321,323,338,],[52,137,-4,137,137,137,-103,137,-38,52,-167,137,-69,137,137,-4,137,137,137,-133,137,-137,137,-141,-142,-143,-144,-145,-146,137,-150,-151,137,-155,-156,-157,137,-4,137,-82,137,137,298,-122,137,-161,298,-94,137,137,-57,137,]),'RSQBRACKET':([51,52,67,70,71,80,89,91,96,107,112,121,128,129,130,131,132,133,134,136,137,138,149,150,151,162,165,166,168,176,177,178,179,192,193,202,204,208,210,218,220,227,229,232,234,238,240,242,243,253,255,263,266,276,277,278,279,281,282,288,302,306,],[79,-4,-4,-4,-35,-32,-4,-37,-5,-164,-4,-4,-4,-4,-4,-4,-162,-163,-165,-169,-170,-171,-33,-34,193,200,-4,-8,-4,-4,-4,-4,-4,-4,-41,-130,-132,-134,-136,-138,-140,-147,-149,-152,-154,-158,-160,-166,-168,-36,-40,-131,-135,-4,-148,-153,-159,-97,-98,193,-139,-39,]),'POWER':([67,70,71,89,91,96,107,131,132,133,134,136,137,138,149,150,166,179,192,193,242,243,253,255,281,282,306,],[-4,-4,-35,-4,-37,-5,-164,-4,-162,-163,-165,-169,-170,-171,-33,-34,-8,241,-4,-41,-166,-168,-36,-40,-97,-98,-39,]),'MULTIPLY':([67,70,71,89,91,96,107,130,131,132,133,134,136,137,138,149,150,166,178,179,192,193,238,240,242,243,253,255,279,281,282,306,],[-4,-4,-35,-4,-37,-5,-164,-4,-4,-162,-163,-165,-169,-170,-171,-33,-34,-8,235,-4,-4,-41,-158,-160,-166,-168,-36,-40,-159,-97,-98,-39,]),'DIVIDE':([67,70,71,89,91,96,107,130,131,132,133,134,136,137,138,149,150,166,178,179,192,193,238,240,242,243,253,255,279,281,282,306,],[-4,-4,-35,-4,-37,-5,-164,-4,-4,-162,-163,-165,-169,-170,-171,-33,-34,-8,236,-4,-4,-41,-158,-160,-166,-168,-36,-40,-159,-97,-98,-39,]),'MODULE':([67,70,71,89,91,96,107,130,131,132,133,134,136,137,138,149,150,166,178,179,192,193,238,240,242,243,253,255,279,281,282,306,],[-4,-4,-35,-4,-37,-5,-164,-4,-4,-162,-163,-165,-169,-170,-171,-33,-34,-8,237,-4,-4,-41,-158,-160,-166,-168,-36,-40,-159,-97,-98,-39,]),'PLUS':([67,70,71,89,91,96,107,129,130,131,132,133,134,136,137,138,149,150,166,177,178,179,192,193,232,234,238,240,242,243,253,255,278,279,281,282,306,],[-4,-4,-35,-4,-37,-5,-164,-4,-4,-4,-162,-163,-165,-169,-170,-171,-33,-34,-8,230,-4,-4,-4,-41,-152,-154,-158,-160,-166,-168,-36,-40,-153,-159,-97,-98,-39,]),'MINUS':([67,70,71,89,91,96,107,129,130,131,132,133,134,136,137,138,149,150,166,177,178,179,192,193,232,234,238,240,242,243,253,255,278,279,281,282,306,],[-4,-4,-35,-4,-37,-5,-164,-4,-4,-4,-162,-163,-165,-169,-170,-171,-33,-34,-8,231,-4,-4,-4,-41,-152,-154,-158,-160,-166,-168,-36,-40,-153,-159,-97,-98,-39,]),'GTHAN':([67,70,71,89,91,96,107,128,129,130,131,132,133,134,136,137,138,149,150,166,176,177,178,179,192,193,227,229,232,234,238,240,242,243,253,255,277,278,279,281,282,306,],[-4,-4,-35,-4,-37,-5,-164,-4,-4,-4,-4,-162,-163,-165,-169,-170,-171,-33,-34,-8,221,-4,-4,-4,-4,-41,-147,-149,-152,-154,-158,-160,-166,-168,-36,-40,-148,-153,-159,-97,-98,-39,]),'EQUAL':([67,70,71,89,91,96,107,128,129,130,131,132,133,134,136,137,138,149,150,166,176,177,178,179,192,193,227,229,232,234,238,240,242,243,253,255,277,278,279,281,282,306,],[-4,-4,-35,-4,-37,-5,-164,-4,-4,-4,-4,-162,-163,-165,-169,-170,-171,-33,-34,-8,222,-4,-4,-4,-4,-41,-147,-149,-152,-154,-158,-160,-166,-168,-36,-40,-148,-153,-159,-97,-98,-39,]),'NOTEQUAL':([67,70,71,89,91,96,107,128,129,130,131,132,133,134,136,137,138,149,150,166,176,177,178,179,192,193,227,229,232,234,238,240,242,243,253,255,277,278,279,281,282,306,],[-4,-4,-35,-4,-37,-5,-164,-4,-4,-4,-4,-162,-163,-165,-169,-170,-171,-33,-34,-8,223,-4,-4,-4,-4,-41,-147,-149,-152,-154,-158,-160,-166,-168,-36,-40,-148,-153,-159,-97,-98,-39,]),'LTHAN':([67,70,71,89,91,96,107,128,129,130,131,132,133,134,136,137,138,149,150,166,176,177,178,179,192,193,227,229,232,234,238,240,242,243,253,255,277,278,279,281,282,306,],[-4,-4,-35,-4,-37,-5,-164,-4,-4,-4,-4,-162,-163,-165,-169,-170,-171,-33,-34,-8,224,-4,-4,-4,-4,-41,-147,-149,-152,-154,-158,-160,-166,-168,-36,-40,-148,-153,-159,-97,-98,-39,]),'GORE':([67,70,71,89,91,96,107,128,129,130,131,132,133,134,136,137,138,149,150,166,176,177,178,179,192,193,227,229,232,234,238,240,242,243,253,255,277,278,279,281,282,306,],[-4,-4,-35,-4,-37,-5,-164,-4,-4,-4,-4,-162,-163,-165,-169,-170,-171,-33,-34,-8,225,-4,-4,-4,-4,-41,-147,-149,-152,-154,-158,-160,-166,-168,-36,-40,-148,-153,-159,-97,-98,-39,]),'LORE':([67,70,71,89,91,96,107,128,129,130,131,132,133,134,136,137,138,149,150,166,176,177,178,179,192,193,227,229,232,234,238,240,242,243,253,255,277,278,279,281,282,306,],[-4,-4,-35,-4,-37,-5,-164,-4,-4,-4,-4,-162,-163,-165,-169,-170,-171,-33,-34,-8,226,-4,-4,-4,-4,-41,-147,-149,-152,-154,-158,-160,-166,-168,-36,-40,-148,-153,-159,-97,-98,-39,]),'AND':([67,70,71,89,91,96,107,121,128,129,130,131,132,133,134,136,137,138,149,150,166,168,176,177,178,179,192,193,218,220,227,229,232,234,238,240,242,243,253,255,276,277,278,279,281,282,302,306,],[-4,-4,-35,-4,-37,-5,-164,-4,-4,-4,-4,-4,-162,-163,-165,-169,-170,-171,-33,-34,-8,211,-4,-4,-4,-4,-4,-41,-138,-140,-147,-149,-152,-154,-158,-160,-166,-168,-36,-40,-4,-148,-153,-159,-97,-98,-139,-39,]),'OR':([67,70,71,89,91,96,107,112,121,128,129,130,131,132,133,134,136,137,138,149,150,165,166,168,176,177,178,179,192,193,208,210,218,220,227,229,232,234,238,240,242,243,253,255,266,276,277,278,279,281,282,302,306,],[-4,-4,-35,-4,-37,-5,-164,-4,-4,-4,-4,-4,-4,-162,-163,-165,-169,-170,-171,-33,-34,205,-8,-4,-4,-4,-4,-4,-4,-41,-134,-136,-138,-140,-147,-149,-152,-154,-158,-160,-166,-168,-36,-40,-135,-4,-148,-153,-159,-97,-98,-139,-39,]),'TO':([67,70,71,89,91,96,107,112,121,128,129,130,131,132,133,134,136,137,138,149,150,165,166,168,176,177,178,179,192,193,202,204,208,210,218,220,227,229,232,234,238,240,242,243,253,255,256,263,266,276,277,278,279,281,282,302,306,],[-4,-4,-35,-4,-37,-5,-164,-4,-4,-4,-4,-4,-4,-162,-163,-165,-169,-170,-171,-33,-34,-4,-8,-4,-4,-4,-4,-4,-4,-41,-130,-132,-134,-136,-138,-140,-147,-149,-152,-154,-158,-160,-166,-168,-36,-40,290,-131,-135,-4,-148,-153,-159,-97,-98,-139,-39,]),'READ':([83,84,140,],[119,-4,-69,]),'EXPLORATION':([83,84,140,],[122,-4,-69,]),'FINANCIAL_STATE':([83,84,140,],[123,-4,-69,]),'DUMMI_REGRESSION':([83,84,140,],[124,-4,-69,]),'SEASON_ANALYSIS':([83,84,140,],[125,-4,-69,]),'TREND_PREDICTION':([83,84,140,],[126,-4,-69,]),'MODEL_PREDICT':([83,84,140,],[127,-4,-69,]),'CTE_FLOAT':([83,84,85,86,87,88,90,92,120,135,140,167,181,185,190,194,203,205,209,211,219,221,222,223,224,225,226,228,230,231,233,235,236,237,239,241,248,249,254,257,269,271,280,312,321,323,338,],[136,-4,136,136,136,-103,136,-38,-167,136,-69,136,136,-4,136,136,136,-133,136,-137,136,-141,-142,-143,-144,-145,-146,136,-150,-151,136,-155,-156,-157,136,-4,136,-82,136,136,-122,136,-161,136,136,-57,136,]),'CTE_CHAR':([83,84,85,86,87,88,90,92,120,135,140,167,181,185,190,194,203,205,209,211,219,221,222,223,224,225,226,228,230,231,233,235,236,237,239,241,248,249,254,257,269,271,280,312,321,323,338,],[138,-4,138,138,138,-103,138,-38,-167,138,-69,138,138,-4,138,138,138,-133,138,-137,138,-141,-142,-143,-144,-145,-146,138,-150,-151,138,-155,-156,-157,138,-4,138,-82,138,138,-122,138,-161,138,138,-57,138,]),'WHILE':([154,258,],[195,-62,]),'ELSE':([258,283,],[-62,304,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'goto_main':([3,],[4,]),'program_vars':([4,31,259,],[6,44,292,]),'empty':([4,6,10,23,26,27,28,31,38,41,44,45,49,52,54,67,69,70,74,75,79,84,87,89,97,101,102,103,112,121,128,129,130,131,143,146,155,161,164,165,168,176,177,178,179,181,182,185,192,198,199,241,247,252,259,260,268,276,283,289,292,304,310,314,319,325,334,336,337,],[8,11,25,25,39,40,43,8,48,50,55,73,78,80,55,91,95,96,100,39,106,140,147,150,158,48,100,43,166,166,166,166,166,166,186,191,55,50,201,204,210,220,229,234,240,147,246,249,255,261,78,280,285,191,8,295,299,166,305,299,55,316,324,328,333,261,11,341,295,]),'program_function':([6,334,],[9,339,]),'var_type':([7,74,102,],[12,99,99,]),'var_c_type':([7,74,102,],[13,13,13,]),'var_s_type':([7,74,102,],[14,14,14,]),'c_type':([7,74,102,],[15,15,15,]),'s_type':([7,74,97,102,294,],[16,16,157,16,311,]),'program_main':([9,],[21,]),'main_id':([9,],[22,]),'resources':([10,23,],[24,32,]),'id_saver':([15,16,33,44,47,54,77,83,85,86,87,90,93,135,155,157,167,169,171,172,173,174,175,181,190,194,203,209,219,228,233,239,248,254,257,270,271,292,311,312,321,338,],[26,28,45,71,75,71,103,71,71,71,71,71,153,71,71,198,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,325,71,71,71,]),'end':([21,],[29,]),'f_type':([24,],[33,]),'add_c_var':([26,75,],[38,101,]),'var_s_array':([28,103,],[41,161,]),'var_c_type2':([38,101,],[46,159,]),'add_s_var':([41,161,],[49,199,]),'var_s_dimesions':([42,104,],[51,162,]),'inner_body':([44,54,155,292,],[53,82,196,310,]),'statement':([44,54,155,292,],[54,54,54,54,]),'assign':([44,54,155,292,],[56,56,56,56,]),'condition':([44,54,155,292,],[57,57,57,57,]),'print':([44,54,155,292,],[58,58,58,58,]),'cycle':([44,54,155,292,],[59,59,59,59,]),'call_void_function':([44,54,155,292,],[60,60,60,60,]),'variable':([44,54,83,85,86,87,90,135,155,167,169,171,172,173,174,175,181,190,194,203,209,219,228,233,239,248,254,257,270,271,292,312,321,338,],[61,61,107,107,107,107,107,107,61,107,212,213,214,215,216,217,107,107,107,107,107,107,107,107,107,107,107,107,300,107,61,107,107,107,]),'for':([44,54,155,292,],[64,64,64,64,]),'while':([44,54,155,292,],[65,65,65,65,]),'function_saver':([44,54,83,85,86,87,90,135,155,167,181,190,194,203,209,219,228,233,239,248,254,257,271,292,312,321,338,],[66,66,139,139,139,139,139,139,66,139,139,139,139,139,139,139,139,139,139,139,139,139,139,66,139,139,139,]),'var_id_saver':([44,54,83,85,86,87,90,135,155,167,169,171,172,173,174,175,181,190,194,203,209,219,228,233,239,248,254,257,270,271,292,312,321,338,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'func_creator':([45,],[72,]),'var_s_type2':([49,199,],[76,262,]),'keep_assign':([61,152,],[83,194,]),'function_flag':([66,139,],[87,181,]),'variable_array':([67,],[89,]),'save_var':([67,],[90,]),'seed':([69,],[94,]),'var_multiple':([74,102,],[98,160,]),'var_s_matrix':([79,],[105,]),'specialf_assign':([83,],[108,]),'exp':([83,85,86,87,90,135,167,181,190,194,203,248,254,257,271,312,321,338,],[109,141,144,148,151,180,207,148,148,256,263,144,288,291,301,326,336,343,]),'special_function':([83,],[110,]),'read':([83,],[111,]),'t_exp':([83,85,86,87,90,135,167,181,190,194,203,209,248,254,257,271,312,321,338,],[112,112,112,112,112,112,112,112,112,112,112,266,112,112,112,112,112,112,112,]),'exploration':([83,],[113,]),'financial_state':([83,],[114,]),'dummi_regression':([83,],[115,]),'season_analysis':([83,],[116,]),'trend_prediction':([83,],[117,]),'model_predict':([83,],[118,]),'expression':([83,85,86,87,90,135,167,181,190,194,203,209,248,254,257,271,312,321,338,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'m_exp':([83,85,86,87,90,135,167,181,190,194,203,209,219,228,248,254,257,271,312,321,338,],[128,128,128,128,128,128,128,128,128,128,128,128,276,277,128,128,128,128,128,128,128,]),'term':([83,85,86,87,90,135,167,181,190,194,203,209,219,228,233,248,254,257,271,312,321,338,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,278,129,129,129,129,129,129,129,]),'sub_factor':([83,85,86,87,90,135,167,181,190,194,203,209,219,228,233,239,248,254,257,271,312,321,338,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,279,130,130,130,130,130,130,130,]),'factor':([83,85,86,87,90,135,167,181,190,194,203,209,219,228,233,239,248,254,257,271,312,321,338,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'factor_exp':([83,85,86,87,90,135,167,181,190,194,203,209,219,228,233,239,248,254,257,271,312,321,338,],[132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,]),'factor_cte':([83,85,86,87,90,135,167,181,190,194,203,209,219,228,233,239,248,254,257,271,312,321,338,],[133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,]),'call_function':([83,85,86,87,90,135,167,181,190,194,203,209,219,228,233,239,248,254,257,271,312,321,338,],[134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'false_button':([83,85,86,87,90,135,167,181,190,194,203,209,219,228,233,239,248,254,257,271,312,321,338,],[135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,]),'print_many':([86,248,],[142,286,]),'print_type':([86,248,],[143,143,]),'call_params':([87,181,],[145,244,]),'check_param':([87,181,190,],[146,146,252,]),'clear_dimension':([89,],[149,]),'for_control':([93,],[152,]),'body':([94,245,307,315,],[154,283,317,329,]),'param':([97,],[156,]),'end_assign':([108,],[163,]),'release_exp':([112,121,128,129,130,131,276,],[165,168,176,177,178,179,302,]),'tag_sp':([122,123,124,125,126,127,],[169,171,172,173,174,175,]),'print_many2':([143,],[184,]),'verify_params':([145,],[187,]),'exp_many':([146,252,],[189,287,]),'index_arr_mat':([151,288,],[192,306,]),'exp_or':([165,],[202,]),'exp_keep_or':([165,],[203,]),'valid_exp_read':([167,],[206,]),'t_exp_and':([168,],[208,]),'keep_and':([168,],[209,]),'expression_comp':([176,],[218,]),'expression_comp_2':([176,],[219,]),'m_exp_sr':([177,],[227,]),'m_exp_sr_2':([177,],[228,]),'term_pc':([178,],[232,]),'term_pc_2':([178,],[233,]),'sub_factor_pc':([179,],[238,]),'sub_factor_pc_2':([179,],[239,]),'release_false_button':([180,],[242,]),'condition_GOTOF':([182,],[245,]),'print_many_np':([185,],[248,]),'check_void':([187,],[250,]),'variable_matrix':([192,],[253,]),'add_params':([198,325,],[260,337,]),'read_np':([206,],[264,]),'explore_cte':([212,],[267,]),'sp_param':([212,213,214,300,326,],[268,270,271,312,338,]),'np_check_size':([215,216,217,267,301,343,],[272,274,275,296,313,345,]),'check_not_void':([244,],[281,]),'end_print_np':([247,],[284,]),'for_np1':([256,],[289,]),'param2':([260,337,],[293,342,]),'int_const_saver':([268,289,],[297,308,]),'condition2':([283,],[303,]),'for_end':([289,],[307,]),'condition_GOTO':([304,],[315,]),'return':([310,],[320,]),'return_np':([310,],[321,]),'empty_path_return':([310,],[322,]),'end_condition':([314,],[327,]),'for_np2':([317,],[330,]),'gotoV':([319,],[332,]),'end_function':([320,],[334,]),'return_quad':([336,],[340,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID goto_main program_vars program_function program_main end','program',7,'p_program','parser.py',48),
  ('goto_main -> SEMICOLON','goto_main',1,'p_goto_main','parser.py',52),
  ('end -> END','end',1,'p_end','parser.py',57),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',75),
  ('id_saver -> ID empty','id_saver',2,'p_id_saver','parser.py',82),
  ('int_const_saver -> CTE_INT','int_const_saver',1,'p_int_const_saver','parser.py',90),
  ('int_const_saver -> empty','int_const_saver',1,'p_int_const_saver','parser.py',91),
  ('release_exp -> empty','release_exp',1,'p_release_exp','parser.py',102),
  ('resources -> empty','resources',1,'p_resources','parser.py',107),
  ('var_type -> var_c_type','var_type',1,'p_var_type','parser.py',146),
  ('var_type -> var_s_type','var_type',1,'p_var_type','parser.py',147),
  ('program_vars -> VAR var_type','program_vars',2,'p_program_vars','parser.py',150),
  ('program_vars -> empty','program_vars',1,'p_program_vars','parser.py',151),
  ('s_type -> INT','s_type',1,'p_s_type','parser.py',154),
  ('s_type -> FLOAT','s_type',1,'p_s_type','parser.py',155),
  ('s_type -> CHAR','s_type',1,'p_s_type','parser.py',156),
  ('c_type -> DATAFRAME','c_type',1,'p_c_type','parser.py',162),
  ('var_multiple -> var_type','var_multiple',1,'p_var_multiple','parser.py',168),
  ('var_multiple -> empty','var_multiple',1,'p_var_multiple','parser.py',169),
  ('var_c_type -> c_type id_saver add_c_var var_c_type2 SEMICOLON var_multiple','var_c_type',6,'p_var_c_type','parser.py',172),
  ('var_c_type2 -> COMMA id_saver add_c_var var_c_type2','var_c_type2',4,'p_var_c_type2','parser.py',175),
  ('var_c_type2 -> empty','var_c_type2',1,'p_var_c_type2','parser.py',176),
  ('add_c_var -> empty','add_c_var',1,'p_add_c_var','parser.py',179),
  ('var_s_type -> s_type id_saver var_s_array add_s_var var_s_type2 SEMICOLON var_multiple','var_s_type',7,'p_var_s_type','parser.py',185),
  ('var_s_type2 -> COMMA id_saver var_s_array add_s_var var_s_type2','var_s_type2',5,'p_var_s_type2','parser.py',188),
  ('var_s_type2 -> empty','var_s_type2',1,'p_var_s_type2','parser.py',189),
  ('add_s_var -> empty','add_s_var',1,'p_add_s_var','parser.py',194),
  ('var_s_array -> LSQBRACKET var_s_dimesions RSQBRACKET var_s_matrix','var_s_array',4,'p_var_s_array','parser.py',203),
  ('var_s_array -> empty','var_s_array',1,'p_var_s_array','parser.py',204),
  ('var_s_matrix -> LSQBRACKET var_s_dimesions RSQBRACKET','var_s_matrix',3,'p_var_s_matrix','parser.py',208),
  ('var_s_matrix -> empty','var_s_matrix',1,'p_var_s_matrix','parser.py',209),
  ('var_s_dimesions -> CTE_INT empty','var_s_dimesions',2,'p_var_s_dimesions','parser.py',213),
  ('variable -> var_id_saver variable_array clear_dimension','variable',3,'p_variable','parser.py',230),
  ('clear_dimension -> empty','clear_dimension',1,'p_clear_dimension','parser.py',233),
  ('var_id_saver -> id_saver','var_id_saver',1,'p_var_id_saver','parser.py',237),
  ('variable_array -> save_var exp index_arr_mat variable_matrix','variable_array',4,'p_variable_array','parser.py',253),
  ('variable_array -> empty','variable_array',1,'p_variable_array','parser.py',254),
  ('save_var -> LSQBRACKET','save_var',1,'p_save_var','parser.py',258),
  ('variable_matrix -> LSQBRACKET exp index_arr_mat','variable_matrix',3,'p_variable_matrix','parser.py',263),
  ('variable_matrix -> empty','variable_matrix',1,'p_variable_matrix','parser.py',264),
  ('index_arr_mat -> RSQBRACKET','index_arr_mat',1,'p_index_arr_mat','parser.py',268),
  ('program_function -> FUNCTION resources f_type id_saver func_creator LPAREN param RPAREN LBRACKET program_vars inner_body return end_function program_function','program_function',14,'p_program_function','parser.py',291),
  ('program_function -> empty','program_function',1,'p_program_function','parser.py',292),
  ('f_type -> INT','f_type',1,'p_f_type','parser.py',297),
  ('f_type -> FLOAT','f_type',1,'p_f_type','parser.py',298),
  ('f_type -> CHAR','f_type',1,'p_f_type','parser.py',299),
  ('f_type -> VOID','f_type',1,'p_f_type','parser.py',300),
  ('func_creator -> empty','func_creator',1,'p_func_creator','parser.py',309),
  ('end_function -> RBRACKET','end_function',1,'p_end_function','parser.py',318),
  ('param -> s_type id_saver add_params param2','param',4,'p_param','parser.py',326),
  ('param -> empty','param',1,'p_param','parser.py',327),
  ('param2 -> COMMA s_type id_saver add_params param2','param2',5,'p_param2','parser.py',330),
  ('param2 -> empty','param2',1,'p_param2','parser.py',331),
  ('add_params -> empty','add_params',1,'p_add_params','parser.py',334),
  ('return -> return_np exp return_quad SEMICOLON','return',4,'p_return','parser.py',341),
  ('return -> empty_path_return','return',1,'p_return','parser.py',342),
  ('return_np -> RETURN','return_np',1,'p_return_np','parser.py',345),
  ('return_quad -> empty','return_quad',1,'p_return_quad','parser.py',354),
  ('empty_path_return -> empty','empty_path_return',1,'p_empty_path_return','parser.py',363),
  ('program_main -> main_id LBRACKET program_vars inner_body RBRACKET','program_main',5,'p_program_main','parser.py',374),
  ('main_id -> MAIN resources','main_id',2,'p_main_id','parser.py',377),
  ('body -> LBRACKET inner_body RBRACKET','body',3,'p_body','parser.py',386),
  ('inner_body -> statement inner_body','inner_body',2,'p_inner_body','parser.py',390),
  ('inner_body -> empty','inner_body',1,'p_inner_body','parser.py',391),
  ('assign -> variable keep_assign specialf_assign end_assign','assign',4,'p_assign','parser.py',396),
  ('specialf_assign -> exp','specialf_assign',1,'p_specialf_assign','parser.py',399),
  ('specialf_assign -> special_function','specialf_assign',1,'p_specialf_assign','parser.py',400),
  ('specialf_assign -> read','specialf_assign',1,'p_specialf_assign','parser.py',401),
  ('keep_assign -> ASSIGN empty','keep_assign',2,'p_keep_assign','parser.py',405),
  ('end_assign -> SEMICOLON empty','end_assign',2,'p_end_assign','parser.py',413),
  ('condition -> IF LPAREN exp RPAREN condition_GOTOF body condition2 SEMICOLON end_condition','condition',9,'p_condition','parser.py',421),
  ('condition2 -> ELSE condition_GOTO body','condition2',3,'p_condition2','parser.py',424),
  ('condition2 -> empty','condition2',1,'p_condition2','parser.py',425),
  ('condition_GOTOF -> empty','condition_GOTOF',1,'p_condition_GOTOF','parser.py',429),
  ('condition_GOTO -> empty','condition_GOTO',1,'p_condition_GOTO','parser.py',435),
  ('end_condition -> empty','end_condition',1,'p_end_condition','parser.py',439),
  ('print -> PRINT LPAREN print_many RPAREN SEMICOLON end_print_np','print',6,'p_print','parser.py',448),
  ('print_type -> exp','print_type',1,'p_print_type','parser.py',451),
  ('print_many -> print_type print_many2','print_many',2,'p_print_many','parser.py',454),
  ('print_many2 -> COMMA print_many_np print_many','print_many2',3,'p_print_many2','parser.py',457),
  ('print_many2 -> empty','print_many2',1,'p_print_many2','parser.py',458),
  ('print_many_np -> empty','print_many_np',1,'p_print_many_np','parser.py',461),
  ('end_print_np -> empty','end_print_np',1,'p_end_print_np','parser.py',465),
  ('read -> READ LPAREN valid_exp_read read_np','read',4,'p_read','parser.py',471),
  ('valid_exp_read -> exp','valid_exp_read',1,'p_valid_exp_read','parser.py',475),
  ('read_np -> RPAREN','read_np',1,'p_read_np','parser.py',483),
  ('cycle -> for','cycle',1,'p_cycle','parser.py',491),
  ('cycle -> while','cycle',1,'p_cycle','parser.py',492),
  ('while -> DO seed body WHILE LPAREN exp RPAREN SEMICOLON gotoV','while',9,'p_while','parser.py',496),
  ('seed -> empty','seed',1,'p_seed','parser.py',500),
  ('gotoV -> empty','gotoV',1,'p_gotoV','parser.py',505),
  ('for -> FOR LPAREN for_control keep_assign exp for_np1 for_end body for_np2','for',9,'p_for','parser.py',511),
  ('for_control -> id_saver','for_control',1,'p_for_control','parser.py',514),
  ('for_np1 -> TO','for_np1',1,'p_for_np1','parser.py',524),
  ('for_end -> int_const_saver RPAREN','for_end',2,'p_for_end','parser.py',529),
  ('for_np2 -> SEMICOLON','for_np2',1,'p_for_np2','parser.py',539),
  ('call_function -> function_saver function_flag call_params check_not_void','call_function',4,'p_call_function','parser.py',544),
  ('check_not_void -> RPAREN','check_not_void',1,'p_check_not_void','parser.py',547),
  ('call_void_function -> function_saver function_flag call_params verify_params check_void','call_void_function',5,'p_call_void_function','parser.py',567),
  ('verify_params -> RPAREN','verify_params',1,'p_verify_params','parser.py',570),
  ('check_void -> SEMICOLON','check_void',1,'p_check_void','parser.py',578),
  ('function_saver -> ID empty','function_saver',2,'p_function_saver','parser.py',593),
  ('function_flag -> LPAREN','function_flag',1,'p_function_flag','parser.py',605),
  ('call_params -> check_param exp_many','call_params',2,'p_call_params','parser.py',647),
  ('call_params -> empty','call_params',1,'p_call_params','parser.py',648),
  ('check_param -> exp','check_param',1,'p_check_param','parser.py',653),
  ('exp_many -> COMMA check_param exp_many','exp_many',3,'p_exp_many','parser.py',667),
  ('exp_many -> empty','exp_many',1,'p_exp_many','parser.py',668),
  ('statement -> assign','statement',1,'p_statement','parser.py',672),
  ('statement -> condition','statement',1,'p_statement','parser.py',673),
  ('statement -> print','statement',1,'p_statement','parser.py',674),
  ('statement -> cycle','statement',1,'p_statement','parser.py',675),
  ('statement -> call_void_function','statement',1,'p_statement','parser.py',676),
  ('special_function -> exploration','special_function',1,'p_special_function','parser.py',680),
  ('special_function -> financial_state','special_function',1,'p_special_function','parser.py',681),
  ('special_function -> dummi_regression','special_function',1,'p_special_function','parser.py',682),
  ('special_function -> season_analysis','special_function',1,'p_special_function','parser.py',683),
  ('special_function -> trend_prediction','special_function',1,'p_special_function','parser.py',684),
  ('special_function -> model_predict','special_function',1,'p_special_function','parser.py',685),
  ('tag_sp -> LPAREN','tag_sp',1,'p_tag_sp','parser.py',690),
  ('exploration -> EXPLORATION tag_sp variable explore_cte np_check_size','exploration',5,'p_exploration','parser.py',702),
  ('sp_param -> COMMA','sp_param',1,'p_sp_param','parser.py',705),
  ('np_check_size -> RPAREN','np_check_size',1,'p_np_check_size','parser.py',721),
  ('explore_cte -> sp_param int_const_saver','explore_cte',2,'p_explore_cte','parser.py',747),
  ('financial_state -> FINANCIAL_STATE tag_sp variable sp_param variable sp_param exp sp_param exp np_check_size','financial_state',10,'p_financial_state','parser.py',752),
  ('season_analysis -> SEASON_ANALYSIS tag_sp variable np_check_size','season_analysis',4,'p_season_analysis','parser.py',756),
  ('trend_prediction -> TREND_PREDICTION tag_sp variable np_check_size','trend_prediction',4,'p_trend_prediction','parser.py',762),
  ('dummi_regression -> DUMMI_REGRESSION tag_sp variable sp_param exp np_check_size','dummi_regression',6,'p_dummi_regression','parser.py',766),
  ('model_predict -> MODEL_PREDICT tag_sp variable np_check_size','model_predict',4,'p_model_predict','parser.py',770),
  ('exp -> t_exp release_exp exp_or','exp',3,'p_exp','parser.py',775),
  ('exp_or -> exp_keep_or exp','exp_or',2,'p_exp_or','parser.py',779),
  ('exp_or -> empty','exp_or',1,'p_exp_or','parser.py',780),
  ('exp_keep_or -> OR','exp_keep_or',1,'p_exp_keep_or','parser.py',783),
  ('t_exp -> expression release_exp t_exp_and','t_exp',3,'p_t_exp','parser.py',791),
  ('t_exp_and -> keep_and t_exp','t_exp_and',2,'p_t_exp_and','parser.py',796),
  ('t_exp_and -> empty','t_exp_and',1,'p_t_exp_and','parser.py',797),
  ('keep_and -> AND','keep_and',1,'p_keep_and','parser.py',800),
  ('expression -> m_exp release_exp expression_comp','expression',3,'p_expression','parser.py',809),
  ('expression_comp -> expression_comp_2 m_exp release_exp','expression_comp',3,'p_expression_comp','parser.py',814),
  ('expression_comp -> empty','expression_comp',1,'p_expression_comp','parser.py',815),
  ('expression_comp_2 -> GTHAN','expression_comp_2',1,'p_expression_comp_2','parser.py',819),
  ('expression_comp_2 -> EQUAL','expression_comp_2',1,'p_expression_comp_2','parser.py',820),
  ('expression_comp_2 -> NOTEQUAL','expression_comp_2',1,'p_expression_comp_2','parser.py',821),
  ('expression_comp_2 -> LTHAN','expression_comp_2',1,'p_expression_comp_2','parser.py',822),
  ('expression_comp_2 -> GORE','expression_comp_2',1,'p_expression_comp_2','parser.py',823),
  ('expression_comp_2 -> LORE','expression_comp_2',1,'p_expression_comp_2','parser.py',824),
  ('m_exp -> term release_exp m_exp_sr','m_exp',3,'p_m_exp','parser.py',833),
  ('m_exp_sr -> m_exp_sr_2 m_exp','m_exp_sr',2,'p_m_exp_sr','parser.py',839),
  ('m_exp_sr -> empty','m_exp_sr',1,'p_m_exp_sr','parser.py',840),
  ('m_exp_sr_2 -> PLUS','m_exp_sr_2',1,'p_m_exp_sr_2','parser.py',843),
  ('m_exp_sr_2 -> MINUS','m_exp_sr_2',1,'p_m_exp_sr_2','parser.py',844),
  ('term -> sub_factor release_exp term_pc','term',3,'p_term','parser.py',852),
  ('term_pc -> term_pc_2 term','term_pc',2,'p_term_pc','parser.py',857),
  ('term_pc -> empty','term_pc',1,'p_term_pc','parser.py',858),
  ('term_pc_2 -> MULTIPLY','term_pc_2',1,'p_term_pc_2','parser.py',861),
  ('term_pc_2 -> DIVIDE','term_pc_2',1,'p_term_pc_2','parser.py',862),
  ('term_pc_2 -> MODULE','term_pc_2',1,'p_term_pc_2','parser.py',863),
  ('sub_factor -> factor release_exp sub_factor_pc','sub_factor',3,'p_sub_factor','parser.py',869),
  ('sub_factor_pc -> sub_factor_pc_2 sub_factor','sub_factor_pc',2,'p_sub_factor_pc','parser.py',875),
  ('sub_factor_pc -> empty','sub_factor_pc',1,'p_sub_factor_pc','parser.py',876),
  ('sub_factor_pc_2 -> POWER empty','sub_factor_pc_2',2,'p_sub_factor_pc_2','parser.py',879),
  ('factor -> factor_exp','factor',1,'p_factor','parser.py',887),
  ('factor -> factor_cte','factor',1,'p_factor','parser.py',888),
  ('factor -> variable','factor',1,'p_factor','parser.py',889),
  ('factor -> call_function','factor',1,'p_factor','parser.py',890),
  ('factor_exp -> false_button exp release_false_button','factor_exp',3,'p_factor_exp','parser.py',897),
  ('false_button -> LPAREN','false_button',1,'p_false_button','parser.py',902),
  ('release_false_button -> RPAREN','release_false_button',1,'p_release_false_button','parser.py',907),
  ('factor_cte -> CTE_FLOAT','factor_cte',1,'p_factor_cte','parser.py',914),
  ('factor_cte -> CTE_INT','factor_cte',1,'p_factor_cte','parser.py',915),
  ('factor_cte -> CTE_CHAR','factor_cte',1,'p_factor_cte','parser.py',916),
]
