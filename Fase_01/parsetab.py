
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS ASSIGN CHAR COLON COMMA CTE_CHAR CTE_FLOAT CTE_INT DATAFRAME DATE DIVIDE DO DUMMI_REGRESSION ELSE END EQUAL EXPLORATION FINANCIAL_STATE FLOAT FOR FROM FUNCTION GTHAN ID IF IMPORT INT LBRACKET LPAREN LSQBRACKET LTHAN MAIN MINUS MODEL_PREDICT MODULE MULTIPLY NOTEQUAL OR PLUS POWER PRINT PROGRAM RBRACKET READ RETURN RPAREN RSQBRACKET SEASON_ANALYSIS SEMICOLON TO TREND_PREDICTION VAR VOID WHILEprogram : PROGRAM ID SEMICOLON program_libraries program_vars program_function program_main endend : END emptyempty : id_saver : ID empty int_const_saver : CTE_INT emptyrelease_exp : emptyprogram_libraries : from_library import_library \n                         | emptyfrom_library : FROM ID\n                    | emptyimport_library : IMPORT ID AS ID  program_librariesvar_type : var_c_type\n                | var_s_typeprogram_vars : VAR var_type  \n                    | emptys_type : INT \n              | FLOAT\n              | CHARc_type : DATAFRAME\n              | DATEvar_multiple : var_type\n                    | emptyvar_c_type : c_type id_saver add_c_var var_c_type2 SEMICOLON var_multiplevar_c_type2 : COMMA id_saver add_c_var var_c_type2\n                   | emptyadd_c_var : emptyvar_s_type : s_type id_saver var_s_array add_s_var var_s_type2 SEMICOLON var_multiplevar_s_type2 : COMMA id_saver var_s_array add_s_var var_s_type2\n                   | emptyadd_s_var : emptyvar_s_array : LSQBRACKET var_s_dimesions RSQBRACKET var_s_matrix \n                   | emptyvar_s_matrix : LSQBRACKET var_s_dimesions RSQBRACKET\n                    | emptyvar_s_dimesions : CTE_INT emptyvariable : id_saver variable_arrayvariable_array : LSQBRACKET exp RSQBRACKET variable_matrix\n                      | emptyvariable_matrix : LSQBRACKET exp RSQBRACKET\n                       | emptyprogram_function : FUNCTION f_type id_saver func_creator LPAREN param RPAREN LBRACKET program_vars inner_body return RBRACKET program_function\n                        | emptyf_type : INT \n              | FLOAT\n              | CHAR\n              | VOIDfunc_creator : emptyparam : s_type id_saver add_params param2param2 : COMMA s_type id_saver add_params param2\n              | emptyadd_params : emptyreturn : RETURN exp SEMICOLON\n              | emptyprogram_main : MAIN main_id LBRACKET program_vars inner_body RBRACKETmain_id : emptybody : LBRACKET inner_body RBRACKETinner_body :  statement inner_body\n                  | emptyassign : variable keep_assign specialf_assign end_assignspecialf_assign : exp\n                       | special_function\n                       | readkeep_assign : ASSIGN emptyend_assign : SEMICOLON emptycondition : IF LPAREN exp RPAREN condition_GOTOF body condition2 SEMICOLON end_conditioncondition2 : ELSE condition_GOTO body\n                 | emptycondition_GOTO : emptyend_condition : emptycondition_GOTOF : emptyprint : PRINT LPAREN print_many RPAREN SEMICOLONprint_type : expprint_many : print_type print_many2 print_many2 : COMMA print_many\n                   | emptyread : READ LPAREN variable RPARENcycle : for\n             | whilewhile : DO body WHILE LPAREN exp RPAREN SEMICOLONfor : FOR LPAREN ID TO for_end RPAREN body SEMICOLONfor_end : int_const_saver\n               | IDcall_function : function_saver LPAREN exp exp_many RPAREN function_saver : ID emptyexp_many : COMMA exp exp_many\n                | emptystatement : assign\n                 | condition\n                 | print\n                 | cycle\n                 | call_functionspecial_function : exploration\n                        | financial_state\n                        | dummi_regression\n                        | season_analysis\n                        | trend_prediction\n                        | model_predictexploration : EXPLORATION LPAREN variable explore_var explor_cte RPARENexplore_var : COMMA variable\n                   | emptyexplor_cte : COMMA int_const_saver\n                  | emptyfinancial_state : FINANCIAL_STATE LPAREN variable COMMA variable COMMA variable COMMA variable RPARENseason_analysis : SEASON_ANALYSIS LPAREN variable RPARENtrend_prediction : TREND_PREDICTION LPAREN variable COMMA int_const_saver COMMA int_const_saver COMMA int_const_saver RPARENdummi_regression : DUMMI_REGRESSION LPAREN variable COMMA variable dr_array dr_int RPARENdr_array : COMMA LSQBRACKET CTE_CHAR dr_array_mp RSQBRACKET\n                | emptydr_array_mp : COMMA CTE_CHAR dr_array_mp\n                   | emptydr_int : COMMA int_const_saver\n              | emptymodel_predict : MODEL_PREDICT LPAREN variable COMMA variable COMMA RPARENexp : t_exp release_exp exp_orexp_or : exp_keep_or  exp\n              | emptyexp_keep_or : ORt_exp : expression release_exp t_exp_andt_exp_and : keep_and t_exp\n                 | emptykeep_and : AND expression : m_exp release_exp expression_compexpression_comp :  expression_comp_2  m_exp release_exp\n                       | emptyexpression_comp_2 : GTHAN\n                         | EQUAL\n                         | NOTEQUAL\n                         | LTHAN\n                         m_exp : term release_exp m_exp_srm_exp_sr : m_exp_sr_2 m_exp\n                | emptym_exp_sr_2 : PLUS\n                  | MINUSterm : sub_factor release_exp term_pcterm_pc : term_pc_2 term\n               | emptyterm_pc_2 : MULTIPLY\n                 | DIVIDE\n                 | MODULEsub_factor : factor release_exp sub_factor_pcsub_factor_pc : sub_factor_pc_2 sub_factor\n                     | emptysub_factor_pc_2 : POWER emptyfactor : factor_exp\n              | factor_cte\n              | variable\n              | call_functionfactor_exp : false_button exp release_false_buttonfalse_button : LPARENrelease_false_button : RPARENfactor_cte : CTE_FLOAT\n                  | CTE_INT\n                  | CTE_CHAR'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,40,41,52,],[0,-1,-3,-2,]),'ID':([2,8,11,13,18,19,20,21,22,23,24,25,26,27,31,32,33,34,35,39,53,57,64,66,69,74,76,77,78,79,80,84,85,92,93,94,95,97,104,105,106,107,108,110,112,115,119,135,150,155,165,170,171,174,176,177,178,179,180,181,191,194,197,198,200,205,207,209,212,214,222,224,225,226,227,229,231,232,234,236,237,238,240,242,247,249,251,260,265,267,268,271,276,284,301,307,313,316,327,328,330,],[3,14,-15,28,-14,-12,-13,37,37,-19,-20,-16,-17,-18,37,-43,-44,-45,-46,51,-3,37,89,-3,37,89,-87,-88,-89,-90,-91,-77,-78,37,-23,-21,-22,-3,154,-3,154,154,154,154,162,89,-27,-149,154,-63,-3,-59,-3,37,37,37,37,37,37,37,154,154,254,154,89,-64,154,-117,154,-121,154,-125,-126,-127,-128,154,-132,-133,154,-137,-138,-139,154,-3,-71,-83,154,37,37,37,37,37,-143,154,-79,37,-3,-80,-65,-69,37,]),'SEMICOLON':([3,36,37,38,45,46,47,48,50,56,58,59,60,67,68,70,71,87,96,98,100,101,109,111,118,120,122,123,124,125,126,127,128,129,130,131,132,133,136,143,144,145,146,147,148,149,151,152,153,154,168,169,172,173,175,182,183,184,185,187,189,196,199,204,206,208,211,213,221,223,228,230,233,235,239,241,243,244,249,252,253,261,262,263,269,272,273,274,275,277,282,295,296,298,299,300,303,305,326,329,333,340,343,],[4,-3,-3,-3,-3,-26,-4,-3,-32,66,-25,-3,-30,-3,97,-29,-3,-3,-3,-3,-31,-34,-36,-38,-24,-3,-146,171,-60,-61,-62,-3,-92,-93,-94,-95,-96,-97,-3,-3,-3,-3,-3,-144,-145,-147,-151,-152,-153,-3,-3,-33,-3,-6,-3,-3,-3,-3,-3,-4,247,-3,-56,-28,-114,-116,-118,-120,-122,-124,-129,-131,-134,-136,-140,-142,-148,-150,-83,-37,-40,-115,-76,-119,-104,-3,-130,-135,-141,-3,301,-123,313,-67,-39,316,318,-98,-113,-66,-106,-103,-105,]),'FROM':([4,51,],[8,8,]),'VAR':([4,5,7,12,51,53,63,165,],[-3,10,-8,-7,-3,10,-11,10,]),'FUNCTION':([4,5,7,9,11,12,18,19,20,51,63,66,93,94,95,97,119,302,],[-3,-3,-8,16,-15,-7,-14,-12,-13,-3,-11,-3,-23,-21,-22,-3,-27,16,]),'MAIN':([4,5,7,9,11,12,15,17,18,19,20,51,63,66,93,94,95,97,119,302,317,],[-3,-3,-8,-3,-15,-7,30,-42,-14,-12,-13,-3,-11,-3,-23,-21,-22,-3,-27,-3,-41,]),'IMPORT':([4,6,7,14,51,],[-3,13,-10,-9,-3,]),'DATAFRAME':([10,66,97,],[23,23,23,]),'DATE':([10,66,97,],[24,24,24,]),'INT':([10,16,65,66,97,202,],[25,32,25,25,25,25,]),'FLOAT':([10,16,65,66,97,202,],[26,33,26,26,26,26,]),'CHAR':([10,16,65,66,97,202,],[27,34,27,27,27,27,]),'IF':([11,18,19,20,53,64,66,74,76,77,78,79,80,84,85,93,94,95,97,115,119,165,170,171,200,205,247,249,301,313,316,327,328,],[-15,-14,-12,-13,-3,82,-3,82,-87,-88,-89,-90,-91,-77,-78,-23,-21,-22,-3,82,-27,-3,-59,-3,82,-64,-71,-83,-79,-3,-80,-65,-69,]),'PRINT':([11,18,19,20,53,64,66,74,76,77,78,79,80,84,85,93,94,95,97,115,119,165,170,171,200,205,247,249,301,313,316,327,328,],[-15,-14,-12,-13,-3,83,-3,83,-87,-88,-89,-90,-91,-77,-78,-23,-21,-22,-3,83,-27,-3,-59,-3,83,-64,-71,-83,-79,-3,-80,-65,-69,]),'FOR':([11,18,19,20,53,64,66,74,76,77,78,79,80,84,85,93,94,95,97,115,119,165,170,171,200,205,247,249,301,313,316,327,328,],[-15,-14,-12,-13,-3,88,-3,88,-87,-88,-89,-90,-91,-77,-78,-23,-21,-22,-3,88,-27,-3,-59,-3,88,-64,-71,-83,-79,-3,-80,-65,-69,]),'DO':([11,18,19,20,53,64,66,74,76,77,78,79,80,84,85,93,94,95,97,115,119,165,170,171,200,205,247,249,301,313,316,327,328,],[-15,-14,-12,-13,-3,90,-3,90,-87,-88,-89,-90,-91,-77,-78,-23,-21,-22,-3,90,-27,-3,-59,-3,90,-64,-71,-83,-79,-3,-80,-65,-69,]),'RBRACKET':([11,18,19,20,53,64,66,73,74,75,76,77,78,79,80,84,85,93,94,95,97,103,115,119,164,165,170,171,200,205,247,249,259,283,285,301,313,316,318,327,328,],[-15,-14,-12,-13,-3,-3,-3,102,-3,-58,-87,-88,-89,-90,-91,-77,-78,-23,-21,-22,-3,-57,-3,-27,199,-3,-59,-3,-3,-64,-71,-83,-3,302,-53,-79,-3,-80,-52,-65,-69,]),'RETURN':([11,18,19,20,66,74,75,76,77,78,79,80,84,85,93,94,95,97,103,119,165,170,171,200,205,247,249,259,301,313,316,327,328,],[-15,-14,-12,-13,-3,-3,-58,-87,-88,-89,-90,-91,-77,-78,-23,-21,-22,-3,-57,-27,-3,-59,-3,-3,-64,-71,-83,284,-79,-3,-80,-65,-69,]),'VOID':([16,],[35,]),'AS':([28,],[39,]),'END':([29,102,],[41,-54,]),'LBRACKET':([30,42,43,90,116,188,245,246,280,297,314,315,],[-3,53,-55,115,165,-3,115,-70,115,-3,115,-68,]),'COMMA':([36,37,38,45,46,47,48,50,59,60,67,71,87,96,98,100,101,109,111,117,120,122,127,136,143,144,145,146,147,148,149,151,152,153,154,158,159,160,166,167,168,169,172,173,175,182,183,184,185,187,196,206,208,211,213,215,216,217,219,220,221,223,228,230,233,235,239,241,243,244,249,250,252,253,257,261,263,264,266,272,273,274,275,281,286,290,291,292,293,294,295,299,304,309,310,320,325,331,341,342,],[-3,-3,-3,57,-26,-4,-3,-32,69,-30,-3,-3,-3,57,-3,-31,-34,-36,-38,-3,-3,-146,-3,-3,-3,-3,-3,-3,-144,-145,-147,-151,-152,-153,-3,191,-72,194,202,-51,69,-33,-3,-6,-3,-3,-3,-3,-3,-4,-3,-114,-116,-118,-120,265,267,268,270,271,-122,-124,-129,-131,-134,-136,-140,-142,-148,-150,-83,194,-37,-40,-3,-115,-119,288,-100,-3,-130,-135,-141,-5,-3,-99,307,308,311,312,-123,-39,202,322,-108,330,334,336,336,-107,]),'LSQBRACKET':([37,38,47,71,87,89,98,113,154,187,196,308,],[-3,49,-4,99,110,-3,49,-4,-3,-4,251,321,]),'LPAREN':([37,44,47,54,55,82,83,86,88,89,104,105,106,107,108,110,113,134,135,137,138,139,140,141,142,150,154,155,163,187,191,194,198,207,209,212,214,222,224,225,226,227,229,231,232,234,236,237,238,240,242,251,276,284,],[-3,-3,-4,65,-47,106,107,108,112,-3,135,-3,135,135,135,135,-84,174,-149,176,177,178,179,180,181,135,-3,-63,198,-84,135,135,135,135,-117,135,-121,135,-125,-126,-127,-128,135,-132,-133,135,-137,-138,-139,135,-3,135,-143,135,]),'RPAREN':([37,47,87,91,109,111,117,122,127,136,143,144,145,146,147,148,149,151,152,153,154,156,157,158,159,160,166,167,172,173,175,182,183,184,185,186,187,190,192,193,195,196,201,203,206,208,210,211,213,215,218,221,223,228,230,233,235,239,241,243,244,248,249,250,252,253,254,255,256,257,258,261,263,264,266,272,273,274,275,278,281,286,287,289,290,292,295,299,304,306,309,310,312,319,323,324,332,335,339,342,],[-3,-4,-3,116,-36,-38,-3,-146,-3,-3,-3,-3,-3,-3,-144,-145,-147,-151,-152,-153,-3,188,189,-3,-72,-3,-3,-51,-3,-6,-3,-3,-3,-3,-3,244,-4,-73,-75,249,-86,-3,-48,-50,-114,-116,262,-118,-120,-3,269,-122,-124,-129,-131,-134,-136,-140,-142,-148,-150,-74,-83,-3,-37,-40,-82,280,-81,-3,282,-115,-119,-3,-100,-3,-130,-135,-141,-85,-5,-3,305,-102,-99,-3,-123,-39,-3,-101,-3,-108,326,-49,333,-112,-111,340,343,-107,]),'CTE_INT':([49,99,104,105,106,107,108,110,135,150,155,191,194,197,198,207,209,212,214,222,224,225,226,227,229,231,232,234,236,237,238,240,242,251,270,276,284,288,311,322,334,],[62,62,152,-3,152,152,152,152,-149,152,-63,152,152,257,152,152,-117,152,-121,152,-125,-126,-127,-128,152,-132,-133,152,-137,-138,-139,152,-3,152,257,-143,152,257,257,257,257,]),'RSQBRACKET':([61,62,72,87,109,111,121,122,127,136,143,144,145,146,147,148,149,151,152,153,154,161,172,173,175,182,183,184,185,187,196,206,208,211,213,221,223,228,230,233,235,239,241,243,244,249,252,253,261,263,272,273,274,275,279,295,299,331,337,338,341,344,],[71,-3,-35,-3,-36,-38,169,-146,-3,-3,-3,-3,-3,-3,-144,-145,-147,-151,-152,-153,-3,196,-3,-6,-3,-3,-3,-3,-3,-4,-3,-114,-116,-118,-120,-122,-124,-129,-131,-134,-136,-140,-142,-148,-150,-83,-37,-40,-115,-119,-3,-130,-135,-141,299,-123,-39,-3,342,-110,-3,-109,]),'ASSIGN':([81,87,89,109,111,113,196,252,253,299,],[105,-3,-3,-36,-38,-4,-3,-37,-40,-39,]),'POWER':([87,109,111,122,146,147,148,149,151,152,153,154,173,185,187,196,243,244,249,252,253,299,],[-3,-36,-38,-146,-3,-144,-145,-147,-151,-152,-153,-3,-6,242,-4,-3,-148,-150,-83,-37,-40,-39,]),'MULTIPLY':([87,109,111,122,145,146,147,148,149,151,152,153,154,173,184,185,187,196,239,241,243,244,249,252,253,275,299,],[-3,-36,-38,-146,-3,-3,-144,-145,-147,-151,-152,-153,-3,-6,236,-3,-4,-3,-140,-142,-148,-150,-83,-37,-40,-141,-39,]),'DIVIDE':([87,109,111,122,145,146,147,148,149,151,152,153,154,173,184,185,187,196,239,241,243,244,249,252,253,275,299,],[-3,-36,-38,-146,-3,-3,-144,-145,-147,-151,-152,-153,-3,-6,237,-3,-4,-3,-140,-142,-148,-150,-83,-37,-40,-141,-39,]),'MODULE':([87,109,111,122,145,146,147,148,149,151,152,153,154,173,184,185,187,196,239,241,243,244,249,252,253,275,299,],[-3,-36,-38,-146,-3,-3,-144,-145,-147,-151,-152,-153,-3,-6,238,-3,-4,-3,-140,-142,-148,-150,-83,-37,-40,-141,-39,]),'PLUS':([87,109,111,122,144,145,146,147,148,149,151,152,153,154,173,183,184,185,187,196,233,235,239,241,243,244,249,252,253,274,275,299,],[-3,-36,-38,-146,-3,-3,-3,-144,-145,-147,-151,-152,-153,-3,-6,231,-3,-3,-4,-3,-134,-136,-140,-142,-148,-150,-83,-37,-40,-135,-141,-39,]),'MINUS':([87,109,111,122,144,145,146,147,148,149,151,152,153,154,173,183,184,185,187,196,233,235,239,241,243,244,249,252,253,274,275,299,],[-3,-36,-38,-146,-3,-3,-3,-144,-145,-147,-151,-152,-153,-3,-6,232,-3,-3,-4,-3,-134,-136,-140,-142,-148,-150,-83,-37,-40,-135,-141,-39,]),'GTHAN':([87,109,111,122,143,144,145,146,147,148,149,151,152,153,154,173,182,183,184,185,187,196,228,230,233,235,239,241,243,244,249,252,253,273,274,275,299,],[-3,-36,-38,-146,-3,-3,-3,-3,-144,-145,-147,-151,-152,-153,-3,-6,224,-3,-3,-3,-4,-3,-129,-131,-134,-136,-140,-142,-148,-150,-83,-37,-40,-130,-135,-141,-39,]),'EQUAL':([87,109,111,122,143,144,145,146,147,148,149,151,152,153,154,173,182,183,184,185,187,196,228,230,233,235,239,241,243,244,249,252,253,273,274,275,299,],[-3,-36,-38,-146,-3,-3,-3,-3,-144,-145,-147,-151,-152,-153,-3,-6,225,-3,-3,-3,-4,-3,-129,-131,-134,-136,-140,-142,-148,-150,-83,-37,-40,-130,-135,-141,-39,]),'NOTEQUAL':([87,109,111,122,143,144,145,146,147,148,149,151,152,153,154,173,182,183,184,185,187,196,228,230,233,235,239,241,243,244,249,252,253,273,274,275,299,],[-3,-36,-38,-146,-3,-3,-3,-3,-144,-145,-147,-151,-152,-153,-3,-6,226,-3,-3,-3,-4,-3,-129,-131,-134,-136,-140,-142,-148,-150,-83,-37,-40,-130,-135,-141,-39,]),'LTHAN':([87,109,111,122,143,144,145,146,147,148,149,151,152,153,154,173,182,183,184,185,187,196,228,230,233,235,239,241,243,244,249,252,253,273,274,275,299,],[-3,-36,-38,-146,-3,-3,-3,-3,-144,-145,-147,-151,-152,-153,-3,-6,227,-3,-3,-3,-4,-3,-129,-131,-134,-136,-140,-142,-148,-150,-83,-37,-40,-130,-135,-141,-39,]),'AND':([87,109,111,122,136,143,144,145,146,147,148,149,151,152,153,154,173,175,182,183,184,185,187,196,221,223,228,230,233,235,239,241,243,244,249,252,253,272,273,274,275,295,299,],[-3,-36,-38,-146,-3,-3,-3,-3,-3,-144,-145,-147,-151,-152,-153,-3,-6,214,-3,-3,-3,-3,-4,-3,-122,-124,-129,-131,-134,-136,-140,-142,-148,-150,-83,-37,-40,-3,-130,-135,-141,-123,-39,]),'OR':([87,109,111,122,127,136,143,144,145,146,147,148,149,151,152,153,154,172,173,175,182,183,184,185,187,196,211,213,221,223,228,230,233,235,239,241,243,244,249,252,253,263,272,273,274,275,295,299,],[-3,-36,-38,-146,-3,-3,-3,-3,-3,-3,-144,-145,-147,-151,-152,-153,-3,209,-6,-3,-3,-3,-3,-3,-4,-3,-118,-120,-122,-124,-129,-131,-134,-136,-140,-142,-148,-150,-83,-37,-40,-119,-3,-130,-135,-141,-123,-39,]),'READ':([104,105,155,],[134,-3,-63,]),'EXPLORATION':([104,105,155,],[137,-3,-63,]),'FINANCIAL_STATE':([104,105,155,],[138,-3,-63,]),'DUMMI_REGRESSION':([104,105,155,],[139,-3,-63,]),'SEASON_ANALYSIS':([104,105,155,],[140,-3,-63,]),'TREND_PREDICTION':([104,105,155,],[141,-3,-63,]),'MODEL_PREDICT':([104,105,155,],[142,-3,-63,]),'CTE_FLOAT':([104,105,106,107,108,110,135,150,155,191,194,198,207,209,212,214,222,224,225,226,227,229,231,232,234,236,237,238,240,242,251,276,284,],[151,-3,151,151,151,151,-149,151,-63,151,151,151,151,-117,151,-121,151,-125,-126,-127,-128,151,-132,-133,151,-137,-138,-139,151,-3,151,-143,151,]),'CTE_CHAR':([104,105,106,107,108,110,135,150,155,191,194,198,207,209,212,214,222,224,225,226,227,229,231,232,234,236,237,238,240,242,251,276,284,321,336,],[153,-3,153,153,153,153,-149,153,-63,153,153,153,153,-117,153,-121,153,-125,-126,-127,-128,153,-132,-133,153,-137,-138,-139,153,-3,153,-143,153,331,341,]),'WHILE':([114,199,],[163,-56,]),'TO':([162,],[197,]),'ELSE':([199,277,],[-56,297,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_libraries':([4,51,],[5,63,]),'from_library':([4,51,],[6,6,]),'empty':([4,5,9,30,36,37,38,41,44,45,48,51,53,59,62,64,66,67,71,74,87,89,96,97,98,105,115,117,120,127,136,143,144,145,146,154,158,160,165,166,168,171,172,175,182,183,184,185,188,196,200,215,242,250,257,259,264,272,277,286,292,297,302,304,309,313,331,341,],[7,11,17,43,46,47,50,52,55,58,60,7,11,70,72,75,95,46,101,75,111,113,58,95,50,155,75,167,60,173,173,173,173,173,173,187,192,195,11,203,70,205,208,213,223,230,235,241,246,253,75,266,276,195,281,285,289,173,298,167,310,315,17,203,324,328,338,338,]),'program_vars':([5,53,165,],[9,64,200,]),'import_library':([6,],[12,]),'program_function':([9,302,],[15,317,]),'var_type':([10,66,97,],[18,94,94,]),'var_c_type':([10,66,97,],[19,19,19,]),'var_s_type':([10,66,97,],[20,20,20,]),'c_type':([10,66,97,],[21,21,21,]),'s_type':([10,65,66,97,202,],[22,92,22,22,260,]),'program_main':([15,],[29,]),'f_type':([16,],[31,]),'id_saver':([21,22,31,57,64,69,74,92,104,106,107,108,110,115,150,174,176,177,178,179,180,181,191,194,198,200,207,212,222,229,234,240,251,260,265,267,268,271,284,307,330,],[36,38,44,67,87,98,87,117,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,286,87,87,87,87,87,87,87,]),'end':([29,],[40,]),'main_id':([30,],[42,]),'add_c_var':([36,67,],[45,96,]),'var_s_array':([38,98,],[48,120,]),'func_creator':([44,],[54,]),'var_c_type2':([45,96,],[56,118,]),'add_s_var':([48,120,],[59,168,]),'var_s_dimesions':([49,99,],[61,121,]),'var_s_type2':([59,168,],[68,204,]),'inner_body':([64,74,115,200,],[73,103,164,259,]),'statement':([64,74,115,200,],[74,74,74,74,]),'assign':([64,74,115,200,],[76,76,76,76,]),'condition':([64,74,115,200,],[77,77,77,77,]),'print':([64,74,115,200,],[78,78,78,78,]),'cycle':([64,74,115,200,],[79,79,79,79,]),'call_function':([64,74,104,106,107,108,110,115,150,191,194,198,200,207,212,222,229,234,240,251,284,],[80,80,149,149,149,149,149,80,149,149,149,149,80,149,149,149,149,149,149,149,149,]),'variable':([64,74,104,106,107,108,110,115,150,174,176,177,178,179,180,181,191,194,198,200,207,212,222,229,234,240,251,265,267,268,271,284,307,330,],[81,81,122,122,122,122,122,81,122,210,215,216,217,218,219,220,122,122,122,81,122,122,122,122,122,122,122,290,291,292,294,122,320,335,]),'for':([64,74,115,200,],[84,84,84,84,]),'while':([64,74,115,200,],[85,85,85,85,]),'function_saver':([64,74,104,106,107,108,110,115,150,191,194,198,200,207,212,222,229,234,240,251,284,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'param':([65,],[91,]),'var_multiple':([66,97,],[93,119,]),'var_s_matrix':([71,],[100,]),'keep_assign':([81,],[104,]),'variable_array':([87,],[109,]),'body':([90,245,280,314,],[114,277,300,329,]),'specialf_assign':([104,],[123,]),'exp':([104,106,107,108,110,150,191,194,198,207,251,284,],[124,156,159,160,161,186,159,250,258,261,279,303,]),'special_function':([104,],[125,]),'read':([104,],[126,]),'t_exp':([104,106,107,108,110,150,191,194,198,207,212,251,284,],[127,127,127,127,127,127,127,127,127,127,263,127,127,]),'exploration':([104,],[128,]),'financial_state':([104,],[129,]),'dummi_regression':([104,],[130,]),'season_analysis':([104,],[131,]),'trend_prediction':([104,],[132,]),'model_predict':([104,],[133,]),'expression':([104,106,107,108,110,150,191,194,198,207,212,251,284,],[136,136,136,136,136,136,136,136,136,136,136,136,136,]),'m_exp':([104,106,107,108,110,150,191,194,198,207,212,222,229,251,284,],[143,143,143,143,143,143,143,143,143,143,143,272,273,143,143,]),'term':([104,106,107,108,110,150,191,194,198,207,212,222,229,234,251,284,],[144,144,144,144,144,144,144,144,144,144,144,144,144,274,144,144,]),'sub_factor':([104,106,107,108,110,150,191,194,198,207,212,222,229,234,240,251,284,],[145,145,145,145,145,145,145,145,145,145,145,145,145,145,275,145,145,]),'factor':([104,106,107,108,110,150,191,194,198,207,212,222,229,234,240,251,284,],[146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,]),'factor_exp':([104,106,107,108,110,150,191,194,198,207,212,222,229,234,240,251,284,],[147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,]),'factor_cte':([104,106,107,108,110,150,191,194,198,207,212,222,229,234,240,251,284,],[148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,]),'false_button':([104,106,107,108,110,150,191,194,198,207,212,222,229,234,240,251,284,],[150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,]),'print_many':([107,191,],[157,248,]),'print_type':([107,191,],[158,158,]),'add_params':([117,286,],[166,304,]),'end_assign':([123,],[170,]),'release_exp':([127,136,143,144,145,146,272,],[172,175,182,183,184,185,295,]),'print_many2':([158,],[190,]),'exp_many':([160,250,],[193,278,]),'param2':([166,304,],[201,319,]),'exp_or':([172,],[206,]),'exp_keep_or':([172,],[207,]),'t_exp_and':([175,],[211,]),'keep_and':([175,],[212,]),'expression_comp':([182,],[221,]),'expression_comp_2':([182,],[222,]),'m_exp_sr':([183,],[228,]),'m_exp_sr_2':([183,],[229,]),'term_pc':([184,],[233,]),'term_pc_2':([184,],[234,]),'sub_factor_pc':([185,],[239,]),'sub_factor_pc_2':([185,],[240,]),'release_false_button':([186,],[243,]),'condition_GOTOF':([188,],[245,]),'variable_matrix':([196,],[252,]),'for_end':([197,],[255,]),'int_const_saver':([197,270,288,311,322,334,],[256,293,306,325,332,339,]),'explore_var':([215,],[264,]),'return':([259,],[283,]),'explor_cte':([264,],[287,]),'condition2':([277,],[296,]),'dr_array':([292,],[309,]),'condition_GOTO':([297,],[314,]),'dr_int':([309,],[323,]),'end_condition':([313,],[327,]),'dr_array_mp':([331,341,],[337,344,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON program_libraries program_vars program_function program_main end','program',8,'p_program','parser.py',32),
  ('end -> END empty','end',2,'p_end','parser.py',36),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',40),
  ('id_saver -> ID empty','id_saver',2,'p_id_saver','parser.py',47),
  ('int_const_saver -> CTE_INT empty','int_const_saver',2,'p_int_const_saver','parser.py',55),
  ('release_exp -> empty','release_exp',1,'p_release_exp','parser.py',60),
  ('program_libraries -> from_library import_library','program_libraries',2,'p_program_libraries','parser.py',69),
  ('program_libraries -> empty','program_libraries',1,'p_program_libraries','parser.py',70),
  ('from_library -> FROM ID','from_library',2,'p_from_library','parser.py',73),
  ('from_library -> empty','from_library',1,'p_from_library','parser.py',74),
  ('import_library -> IMPORT ID AS ID program_libraries','import_library',5,'p_import_library','parser.py',77),
  ('var_type -> var_c_type','var_type',1,'p_var_type','parser.py',82),
  ('var_type -> var_s_type','var_type',1,'p_var_type','parser.py',83),
  ('program_vars -> VAR var_type','program_vars',2,'p_program_vars','parser.py',86),
  ('program_vars -> empty','program_vars',1,'p_program_vars','parser.py',87),
  ('s_type -> INT','s_type',1,'p_s_type','parser.py',97),
  ('s_type -> FLOAT','s_type',1,'p_s_type','parser.py',98),
  ('s_type -> CHAR','s_type',1,'p_s_type','parser.py',99),
  ('c_type -> DATAFRAME','c_type',1,'p_c_type','parser.py',106),
  ('c_type -> DATE','c_type',1,'p_c_type','parser.py',107),
  ('var_multiple -> var_type','var_multiple',1,'p_var_multiple','parser.py',114),
  ('var_multiple -> empty','var_multiple',1,'p_var_multiple','parser.py',115),
  ('var_c_type -> c_type id_saver add_c_var var_c_type2 SEMICOLON var_multiple','var_c_type',6,'p_var_c_type','parser.py',118),
  ('var_c_type2 -> COMMA id_saver add_c_var var_c_type2','var_c_type2',4,'p_var_c_type2','parser.py',121),
  ('var_c_type2 -> empty','var_c_type2',1,'p_var_c_type2','parser.py',122),
  ('add_c_var -> empty','add_c_var',1,'p_add_c_var','parser.py',125),
  ('var_s_type -> s_type id_saver var_s_array add_s_var var_s_type2 SEMICOLON var_multiple','var_s_type',7,'p_var_s_type','parser.py',131),
  ('var_s_type2 -> COMMA id_saver var_s_array add_s_var var_s_type2','var_s_type2',5,'p_var_s_type2','parser.py',134),
  ('var_s_type2 -> empty','var_s_type2',1,'p_var_s_type2','parser.py',135),
  ('add_s_var -> empty','add_s_var',1,'p_add_s_var','parser.py',139),
  ('var_s_array -> LSQBRACKET var_s_dimesions RSQBRACKET var_s_matrix','var_s_array',4,'p_var_s_array','parser.py',147),
  ('var_s_array -> empty','var_s_array',1,'p_var_s_array','parser.py',148),
  ('var_s_matrix -> LSQBRACKET var_s_dimesions RSQBRACKET','var_s_matrix',3,'p_var_s_matrix','parser.py',151),
  ('var_s_matrix -> empty','var_s_matrix',1,'p_var_s_matrix','parser.py',152),
  ('var_s_dimesions -> CTE_INT empty','var_s_dimesions',2,'p_var_s_dimesions','parser.py',156),
  ('variable -> id_saver variable_array','variable',2,'p_variable','parser.py',173),
  ('variable_array -> LSQBRACKET exp RSQBRACKET variable_matrix','variable_array',4,'p_variable_array','parser.py',182),
  ('variable_array -> empty','variable_array',1,'p_variable_array','parser.py',183),
  ('variable_matrix -> LSQBRACKET exp RSQBRACKET','variable_matrix',3,'p_variable_matrix','parser.py',186),
  ('variable_matrix -> empty','variable_matrix',1,'p_variable_matrix','parser.py',187),
  ('program_function -> FUNCTION f_type id_saver func_creator LPAREN param RPAREN LBRACKET program_vars inner_body return RBRACKET program_function','program_function',13,'p_program_function','parser.py',193),
  ('program_function -> empty','program_function',1,'p_program_function','parser.py',194),
  ('f_type -> INT','f_type',1,'p_f_type','parser.py',199),
  ('f_type -> FLOAT','f_type',1,'p_f_type','parser.py',200),
  ('f_type -> CHAR','f_type',1,'p_f_type','parser.py',201),
  ('f_type -> VOID','f_type',1,'p_f_type','parser.py',202),
  ('func_creator -> empty','func_creator',1,'p_func_creator','parser.py',210),
  ('param -> s_type id_saver add_params param2','param',4,'p_param','parser.py',218),
  ('param2 -> COMMA s_type id_saver add_params param2','param2',5,'p_param2','parser.py',221),
  ('param2 -> empty','param2',1,'p_param2','parser.py',222),
  ('add_params -> empty','add_params',1,'p_add_params','parser.py',226),
  ('return -> RETURN exp SEMICOLON','return',3,'p_return','parser.py',233),
  ('return -> empty','return',1,'p_return','parser.py',234),
  ('program_main -> MAIN main_id LBRACKET program_vars inner_body RBRACKET','program_main',6,'p_program_main','parser.py',238),
  ('main_id -> empty','main_id',1,'p_main_id','parser.py',241),
  ('body -> LBRACKET inner_body RBRACKET','body',3,'p_body','parser.py',248),
  ('inner_body -> statement inner_body','inner_body',2,'p_inner_body','parser.py',252),
  ('inner_body -> empty','inner_body',1,'p_inner_body','parser.py',253),
  ('assign -> variable keep_assign specialf_assign end_assign','assign',4,'p_assign','parser.py',258),
  ('specialf_assign -> exp','specialf_assign',1,'p_specialf_assign','parser.py',262),
  ('specialf_assign -> special_function','specialf_assign',1,'p_specialf_assign','parser.py',263),
  ('specialf_assign -> read','specialf_assign',1,'p_specialf_assign','parser.py',264),
  ('keep_assign -> ASSIGN empty','keep_assign',2,'p_keep_assign','parser.py',268),
  ('end_assign -> SEMICOLON empty','end_assign',2,'p_end_assign','parser.py',284),
  ('condition -> IF LPAREN exp RPAREN condition_GOTOF body condition2 SEMICOLON end_condition','condition',9,'p_condition','parser.py',289),
  ('condition2 -> ELSE condition_GOTO body','condition2',3,'p_condition2','parser.py',292),
  ('condition2 -> empty','condition2',1,'p_condition2','parser.py',293),
  ('condition_GOTO -> empty','condition_GOTO',1,'p_condition_GOTO','parser.py',296),
  ('end_condition -> empty','end_condition',1,'p_end_condition','parser.py',301),
  ('condition_GOTOF -> empty','condition_GOTOF',1,'p_condition_GOTOF','parser.py',308),
  ('print -> PRINT LPAREN print_many RPAREN SEMICOLON','print',5,'p_print','parser.py',316),
  ('print_type -> exp','print_type',1,'p_print_type','parser.py',320),
  ('print_many -> print_type print_many2','print_many',2,'p_print_many','parser.py',323),
  ('print_many2 -> COMMA print_many','print_many2',2,'p_print_many2','parser.py',326),
  ('print_many2 -> empty','print_many2',1,'p_print_many2','parser.py',327),
  ('read -> READ LPAREN variable RPAREN','read',4,'p_read','parser.py',333),
  ('cycle -> for','cycle',1,'p_cycle','parser.py',337),
  ('cycle -> while','cycle',1,'p_cycle','parser.py',338),
  ('while -> DO body WHILE LPAREN exp RPAREN SEMICOLON','while',7,'p_while','parser.py',342),
  ('for -> FOR LPAREN ID TO for_end RPAREN body SEMICOLON','for',8,'p_for','parser.py',346),
  ('for_end -> int_const_saver','for_end',1,'p_for_end','parser.py',349),
  ('for_end -> ID','for_end',1,'p_for_end','parser.py',350),
  ('call_function -> function_saver LPAREN exp exp_many RPAREN','call_function',5,'p_call_function','parser.py',355),
  ('function_saver -> ID empty','function_saver',2,'p_function_saver','parser.py',360),
  ('exp_many -> COMMA exp exp_many','exp_many',3,'p_exp_many','parser.py',367),
  ('exp_many -> empty','exp_many',1,'p_exp_many','parser.py',368),
  ('statement -> assign','statement',1,'p_statement','parser.py',372),
  ('statement -> condition','statement',1,'p_statement','parser.py',373),
  ('statement -> print','statement',1,'p_statement','parser.py',374),
  ('statement -> cycle','statement',1,'p_statement','parser.py',375),
  ('statement -> call_function','statement',1,'p_statement','parser.py',376),
  ('special_function -> exploration','special_function',1,'p_special_function','parser.py',380),
  ('special_function -> financial_state','special_function',1,'p_special_function','parser.py',381),
  ('special_function -> dummi_regression','special_function',1,'p_special_function','parser.py',382),
  ('special_function -> season_analysis','special_function',1,'p_special_function','parser.py',383),
  ('special_function -> trend_prediction','special_function',1,'p_special_function','parser.py',384),
  ('special_function -> model_predict','special_function',1,'p_special_function','parser.py',385),
  ('exploration -> EXPLORATION LPAREN variable explore_var explor_cte RPAREN','exploration',6,'p_exploration','parser.py',391),
  ('explore_var -> COMMA variable','explore_var',2,'p_explore_var','parser.py',394),
  ('explore_var -> empty','explore_var',1,'p_explore_var','parser.py',395),
  ('explor_cte -> COMMA int_const_saver','explor_cte',2,'p_explor_cte','parser.py',398),
  ('explor_cte -> empty','explor_cte',1,'p_explor_cte','parser.py',399),
  ('financial_state -> FINANCIAL_STATE LPAREN variable COMMA variable COMMA variable COMMA variable RPAREN','financial_state',10,'p_financial_state','parser.py',403),
  ('season_analysis -> SEASON_ANALYSIS LPAREN variable RPAREN','season_analysis',4,'p_season_analysis','parser.py',407),
  ('trend_prediction -> TREND_PREDICTION LPAREN variable COMMA int_const_saver COMMA int_const_saver COMMA int_const_saver RPAREN','trend_prediction',10,'p_trend_prediction','parser.py',413),
  ('dummi_regression -> DUMMI_REGRESSION LPAREN variable COMMA variable dr_array dr_int RPAREN','dummi_regression',8,'p_dummi_regression','parser.py',417),
  ('dr_array -> COMMA LSQBRACKET CTE_CHAR dr_array_mp RSQBRACKET','dr_array',5,'p_dr_array','parser.py',420),
  ('dr_array -> empty','dr_array',1,'p_dr_array','parser.py',421),
  ('dr_array_mp -> COMMA CTE_CHAR dr_array_mp','dr_array_mp',3,'p_dr_array_mp','parser.py',424),
  ('dr_array_mp -> empty','dr_array_mp',1,'p_dr_array_mp','parser.py',425),
  ('dr_int -> COMMA int_const_saver','dr_int',2,'p_dr_int','parser.py',428),
  ('dr_int -> empty','dr_int',1,'p_dr_int','parser.py',429),
  ('model_predict -> MODEL_PREDICT LPAREN variable COMMA variable COMMA RPAREN','model_predict',7,'p_model_predict','parser.py',433),
  ('exp -> t_exp release_exp exp_or','exp',3,'p_exp','parser.py',438),
  ('exp_or -> exp_keep_or exp','exp_or',2,'p_exp_or','parser.py',442),
  ('exp_or -> empty','exp_or',1,'p_exp_or','parser.py',443),
  ('exp_keep_or -> OR','exp_keep_or',1,'p_exp_keep_or','parser.py',446),
  ('t_exp -> expression release_exp t_exp_and','t_exp',3,'p_t_exp','parser.py',454),
  ('t_exp_and -> keep_and t_exp','t_exp_and',2,'p_t_exp_and','parser.py',459),
  ('t_exp_and -> empty','t_exp_and',1,'p_t_exp_and','parser.py',460),
  ('keep_and -> AND','keep_and',1,'p_keep_and','parser.py',463),
  ('expression -> m_exp release_exp expression_comp','expression',3,'p_expression','parser.py',471),
  ('expression_comp -> expression_comp_2 m_exp release_exp','expression_comp',3,'p_expression_comp','parser.py',477),
  ('expression_comp -> empty','expression_comp',1,'p_expression_comp','parser.py',478),
  ('expression_comp_2 -> GTHAN','expression_comp_2',1,'p_expression_comp_2','parser.py',483),
  ('expression_comp_2 -> EQUAL','expression_comp_2',1,'p_expression_comp_2','parser.py',484),
  ('expression_comp_2 -> NOTEQUAL','expression_comp_2',1,'p_expression_comp_2','parser.py',485),
  ('expression_comp_2 -> LTHAN','expression_comp_2',1,'p_expression_comp_2','parser.py',486),
  ('m_exp -> term release_exp m_exp_sr','m_exp',3,'p_m_exp','parser.py',496),
  ('m_exp_sr -> m_exp_sr_2 m_exp','m_exp_sr',2,'p_m_exp_sr','parser.py',503),
  ('m_exp_sr -> empty','m_exp_sr',1,'p_m_exp_sr','parser.py',504),
  ('m_exp_sr_2 -> PLUS','m_exp_sr_2',1,'p_m_exp_sr_2','parser.py',507),
  ('m_exp_sr_2 -> MINUS','m_exp_sr_2',1,'p_m_exp_sr_2','parser.py',508),
  ('term -> sub_factor release_exp term_pc','term',3,'p_term','parser.py',515),
  ('term_pc -> term_pc_2 term','term_pc',2,'p_term_pc','parser.py',521),
  ('term_pc -> empty','term_pc',1,'p_term_pc','parser.py',522),
  ('term_pc_2 -> MULTIPLY','term_pc_2',1,'p_term_pc_2','parser.py',525),
  ('term_pc_2 -> DIVIDE','term_pc_2',1,'p_term_pc_2','parser.py',526),
  ('term_pc_2 -> MODULE','term_pc_2',1,'p_term_pc_2','parser.py',527),
  ('sub_factor -> factor release_exp sub_factor_pc','sub_factor',3,'p_sub_factor','parser.py',532),
  ('sub_factor_pc -> sub_factor_pc_2 sub_factor','sub_factor_pc',2,'p_sub_factor_pc','parser.py',538),
  ('sub_factor_pc -> empty','sub_factor_pc',1,'p_sub_factor_pc','parser.py',539),
  ('sub_factor_pc_2 -> POWER empty','sub_factor_pc_2',2,'p_sub_factor_pc_2','parser.py',542),
  ('factor -> factor_exp','factor',1,'p_factor','parser.py',549),
  ('factor -> factor_cte','factor',1,'p_factor','parser.py',550),
  ('factor -> variable','factor',1,'p_factor','parser.py',551),
  ('factor -> call_function','factor',1,'p_factor','parser.py',552),
  ('factor_exp -> false_button exp release_false_button','factor_exp',3,'p_factor_exp','parser.py',558),
  ('false_button -> LPAREN','false_button',1,'p_false_button','parser.py',563),
  ('release_false_button -> RPAREN','release_false_button',1,'p_release_false_button','parser.py',569),
  ('factor_cte -> CTE_FLOAT','factor_cte',1,'p_factor_cte','parser.py',576),
  ('factor_cte -> CTE_INT','factor_cte',1,'p_factor_cte','parser.py',577),
  ('factor_cte -> CTE_CHAR','factor_cte',1,'p_factor_cte','parser.py',578),
]
