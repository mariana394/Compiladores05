
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS ASSIGN CHAR COLON COMMA CTE_CHAR CTE_FLOAT CTE_INT DATAFRAME DATE DIVIDE DO DUMMI_REGRESSION ELSE END EQUAL EXPLORATION FINANCIAL_STATE FLOAT FOR FROM FUNCTION GORE GTHAN ID IF IMPORT INT LBRACKET LORE LPAREN LSQBRACKET LTHAN MAIN MINUS MODEL_PREDICT MODULE MULTIPLY NOTEQUAL OR PLUS POWER PRINT PROGRAM RBRACKET READ RETURN RPAREN RSQBRACKET SEASON_ANALYSIS SEMICOLON TO TREND_PREDICTION VAR VOID WHILEprogram : PROGRAM ID goto_main program_libraries program_vars program_function program_main end goto_main : SEMICOLONend : END empty : id_saver : ID empty int_const_saver : CTE_INT \n                       | emptyrelease_exp : emptyresources : emptyprogram_libraries : from_library import_library \n                         | emptyfrom_library : FROM ID\n                    | emptyimport_library : IMPORT ID AS ID  program_librariesvar_type : var_c_type\n                | var_s_typeprogram_vars : VAR var_type  \n                    | emptys_type : INT \n              | FLOAT\n              | CHARc_type : DATAFRAME\n              | DATEvar_multiple : var_type\n                    | emptyvar_c_type : c_type id_saver add_c_var var_c_type2 SEMICOLON var_multiplevar_c_type2 : COMMA id_saver add_c_var var_c_type2\n                   | emptyadd_c_var : emptyvar_s_type : s_type id_saver var_s_array add_s_var var_s_type2 SEMICOLON var_multiplevar_s_type2 : COMMA id_saver var_s_array add_s_var var_s_type2\n                   | emptyadd_s_var : emptyvar_s_array : LSQBRACKET var_s_dimesions RSQBRACKET var_s_matrix \n                   | emptyvar_s_matrix : LSQBRACKET var_s_dimesions RSQBRACKET\n                    | emptyvar_s_dimesions : CTE_INT emptyvariable : var_id_saver variable_array clear_dimension clear_dimension : empty var_id_saver : id_savervariable_array : save_var exp index_arr_mat variable_matrix\n                      | emptysave_var : LSQBRACKETvariable_matrix : test exp index_arr_mat\n                       | emptytest : LSQBRACKETindex_arr_mat : RSQBRACKETprogram_function : FUNCTION resources f_type id_saver func_creator  LPAREN param RPAREN add_func_glob program_vars inner_body return end_function program_function\n                        | emptyf_type : INT \n              | FLOAT\n              | CHAR\n              | VOIDfunc_creator : emptyadd_func_glob : LBRACKETend_function : RBRACKETparam : s_type id_saver add_params param2\n             | emptyparam2 : COMMA s_type id_saver add_params param2\n              | emptyadd_params : emptyreturn : return_np exp return_quad SEMICOLON\n              | empty_path_returnreturn_np : RETURNreturn_quad : emptyempty_path_return : emptyprogram_main :  main_id LBRACKET program_vars inner_body RBRACKETmain_id : MAIN resources body : LBRACKET inner_body RBRACKETinner_body :  statement inner_body\n                  | emptyassign : variable keep_assign specialf_assign end_assignspecialf_assign : exp\n                       | special_function\n                       | readkeep_assign : ASSIGN emptyend_assign : SEMICOLON emptycondition : IF LPAREN exp RPAREN condition_GOTOF body condition2 SEMICOLON end_conditioncondition2 : ELSE condition_GOTO body\n                 | emptycondition_GOTOF : emptycondition_GOTO : emptyend_condition : emptyprint : PRINT LPAREN print_many RPAREN SEMICOLON end_print_npprint_type : expprint_many : print_type print_many2 print_many2 : COMMA print_many_np print_many\n                   | emptyprint_many_np : emptyend_print_np : emptyread : np_read LPAREN valid_exp_read read_npnp_read : READvalid_exp_read : expread_np : RPARENcycle : for\n             | whilewhile : DO seed body WHILE LPAREN exp RPAREN SEMICOLON gotoVseed : emptygotoV : emptyfor : FOR LPAREN for_control keep_assign exp for_np1 for_end body for_np2for_control : id_saverfor_np1 :  TOfor_end : int_const_saver RPARENfor_np2 : SEMICOLONcall_function : function_saver function_flag call_params check_not_void check_not_void : RPARENcall_void_function : function_saver function_flag call_params verify_params check_voidverify_params : RPARENcheck_void : SEMICOLONfunction_saver : ID emptyfunction_flag : LPARENcall_params : check_param exp_many\n                   | emptycheck_param : expexp_many : COMMA check_param exp_many\n                | emptystatement : assign\n                 | condition\n                 | print\n                 | cycle\n                 | call_void_functionspecial_function : exploration\n                        | financial_state\n                        | dummi_regression\n                        | season_analysis\n                        | trend_prediction\n                        | model_predicttag_sp : LPARENexploration : EXPLORATION tag_sp variable explore_cte np_check_sizesp_param : COMMAnp_check_size : RPARENexplore_cte : sp_param int_const_saverfinancial_state : FINANCIAL_STATE tag_sp variable sp_param variable sp_param variable sp_param variable np_check_sizeseason_analysis : SEASON_ANALYSIS tag_sp variable np_check_sizetrend_prediction : TREND_PREDICTION tag_sp variable sp_param int_const_saver sp_param int_const_saver sp_param int_const_saver np_check_sizedummi_regression : DUMMI_REGRESSION tag_sp variable sp_param variable dr_array dr_int np_check_sizedr_array : COMMA LSQBRACKET CTE_CHAR dr_array_mp RSQBRACKET\n                | emptydr_array_mp : COMMA CTE_CHAR dr_array_mp\n                   | emptydr_int : COMMA int_const_saver\n              | emptymodel_predict : MODEL_PREDICT tag_sp variable sp_param variable np_check_sizeexp : t_exp release_exp exp_orexp_or : exp_keep_or  exp\n              | emptyexp_keep_or : ORt_exp : expression release_exp t_exp_andt_exp_and : keep_and t_exp\n                 | emptykeep_and : AND expression : m_exp release_exp expression_compexpression_comp :  expression_comp_2  m_exp release_exp\n                       |  emptyexpression_comp_2 : GTHAN\n                         | EQUAL\n                         | NOTEQUAL\n                         | LTHAN\n                         | GORE\n                         | LORE\n                         m_exp : term release_exp m_exp_srm_exp_sr : m_exp_sr_2 m_exp\n                | emptym_exp_sr_2 : PLUS\n                  | MINUSterm : sub_factor release_exp term_pcterm_pc : term_pc_2 term\n               | emptyterm_pc_2 : MULTIPLY\n                 | DIVIDE\n                 | MODULEsub_factor : factor release_exp sub_factor_pcsub_factor_pc : sub_factor_pc_2 sub_factor\n                     | emptysub_factor_pc_2 : POWER emptyfactor : factor_exp\n              | factor_cte\n              | variable\n              | call_functionfactor_exp : false_button exp release_false_buttonfalse_button : LPARENrelease_false_button : RPARENfactor_cte : CTE_FLOAT\n                  | CTE_INT\n                  | CTE_CHAR'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,39,40,],[0,-1,-3,]),'ID':([2,9,12,14,19,20,21,22,23,24,25,26,27,28,38,41,43,44,45,46,47,55,58,66,68,69,70,71,72,76,77,86,89,95,96,97,98,99,100,102,104,105,110,111,112,114,132,148,153,168,170,173,176,177,180,182,183,184,185,186,187,188,194,198,203,207,214,216,218,222,224,232,234,235,236,237,238,239,241,243,244,246,248,249,250,252,254,260,261,262,263,264,267,269,271,273,274,284,285,286,290,295,299,300,307,328,329,335,340,342,344,353,354,356,357,358,359,364,],[3,15,-18,29,-17,-15,-16,36,36,-22,-23,-19,-20,-21,54,-4,36,-51,-52,-53,-54,82,36,82,-118,-119,-120,-121,-122,-96,-97,-4,36,82,-4,82,82,82,-112,82,-44,36,-26,-24,-25,-4,-182,82,-77,82,36,-30,-73,-4,82,36,-129,36,36,36,36,36,82,-4,82,82,-78,82,-148,82,-152,82,-156,-157,-158,-159,-160,-161,82,-165,-166,82,-170,-171,-172,82,-4,-4,82,-90,-108,-110,82,-47,82,-4,-56,-131,36,36,36,-176,-85,-91,82,36,36,-4,-4,82,-65,-79,-84,-101,-105,-98,-100,36,]),'SEMICOLON':([3,35,36,37,48,49,50,51,53,57,59,60,61,79,82,83,87,88,90,91,101,103,108,113,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,133,141,142,143,144,145,146,147,149,150,151,162,163,172,174,178,179,181,189,190,191,192,196,200,201,205,206,212,213,215,217,221,223,231,233,240,242,245,247,251,253,255,256,266,268,272,277,278,279,280,281,287,288,291,292,293,294,296,297,298,311,319,320,322,323,326,334,338,355,362,365,370,371,379,382,],[5,-4,-4,-4,-4,-29,-5,-4,-35,86,-28,-4,-33,-4,-4,-41,-4,114,-32,-4,-4,-43,-5,-4,-4,-34,-37,-179,177,-74,-75,-76,-4,-123,-124,-125,-126,-127,-128,-4,-4,-4,-4,-4,-177,-178,-180,-184,-185,-186,-39,-40,-27,-4,-4,-8,-4,-4,-4,-4,-4,260,264,-109,-4,-48,-4,-36,-145,-147,-149,-151,-153,-155,-162,-164,-167,-169,-173,-175,-181,-183,-42,-46,-70,-31,-146,-92,-95,-150,-135,-132,-4,-163,-168,-174,-106,-107,-4,-130,-154,335,-81,-45,340,-144,357,-80,-4,-137,378,-66,-134,-136,]),'FROM':([4,5,54,],[9,-2,9,]),'VAR':([4,5,6,8,13,41,54,64,273,274,],[-4,-2,11,-11,-10,11,-4,-14,11,-56,]),'FUNCTION':([4,5,6,8,10,12,13,19,20,21,54,64,86,110,111,112,114,173,360,361,],[-4,-2,-4,-11,17,-18,-10,-17,-15,-16,-4,-14,-4,-26,-24,-25,-4,-30,17,-57,]),'MAIN':([4,5,6,8,10,12,13,16,18,19,20,21,54,64,86,110,111,112,114,173,360,361,369,],[-4,-2,-4,-11,-4,-18,-10,32,-50,-17,-15,-16,-4,-14,-4,-26,-24,-25,-4,-30,-4,-57,-49,]),'IMPORT':([4,5,7,8,15,54,],[-4,-2,14,-13,-12,-4,]),'DATAFRAME':([11,86,114,],[24,24,24,]),'DATE':([11,86,114,],[25,25,25,]),'INT':([11,17,33,34,86,109,114,309,],[26,-4,44,-9,26,26,26,26,]),'FLOAT':([11,17,33,34,86,109,114,309,],[27,-4,45,-9,27,27,27,27,]),'CHAR':([11,17,33,34,86,109,114,309,],[28,-4,46,-9,28,28,28,28,]),'IF':([12,19,20,21,41,55,66,68,69,70,71,72,76,77,86,110,111,112,114,168,173,176,177,214,260,263,264,273,274,299,300,307,335,340,353,354,356,357,358,359,],[-18,-17,-15,-16,-4,74,74,-118,-119,-120,-121,-122,-96,-97,-4,-26,-24,-25,-4,74,-30,-73,-4,-78,-4,-108,-110,-4,-56,-85,-91,74,-4,-4,-79,-84,-101,-105,-98,-100,]),'PRINT':([12,19,20,21,41,55,66,68,69,70,71,72,76,77,86,110,111,112,114,168,173,176,177,214,260,263,264,273,274,299,300,307,335,340,353,354,356,357,358,359,],[-18,-17,-15,-16,-4,75,75,-118,-119,-120,-121,-122,-96,-97,-4,-26,-24,-25,-4,75,-30,-73,-4,-78,-4,-108,-110,-4,-56,-85,-91,75,-4,-4,-79,-84,-101,-105,-98,-100,]),'FOR':([12,19,20,21,41,55,66,68,69,70,71,72,76,77,86,110,111,112,114,168,173,176,177,214,260,263,264,273,274,299,300,307,335,340,353,354,356,357,358,359,],[-18,-17,-15,-16,-4,80,80,-118,-119,-120,-121,-122,-96,-97,-4,-26,-24,-25,-4,80,-30,-73,-4,-78,-4,-108,-110,-4,-56,-85,-91,80,-4,-4,-79,-84,-101,-105,-98,-100,]),'DO':([12,19,20,21,41,55,66,68,69,70,71,72,76,77,86,110,111,112,114,168,173,176,177,214,260,263,264,273,274,299,300,307,335,340,353,354,356,357,358,359,],[-18,-17,-15,-16,-4,81,81,-118,-119,-120,-121,-122,-96,-97,-4,-26,-24,-25,-4,81,-30,-73,-4,-78,-4,-108,-110,-4,-56,-85,-91,81,-4,-4,-79,-84,-101,-105,-98,-100,]),'RBRACKET':([12,19,20,21,41,55,65,66,67,68,69,70,71,72,76,77,86,94,110,111,112,114,168,173,176,177,209,214,260,263,264,273,274,299,300,307,327,335,340,341,343,345,353,354,356,357,358,359,378,],[-18,-17,-15,-16,-4,-4,93,-4,-72,-118,-119,-120,-121,-122,-96,-97,-4,-71,-26,-24,-25,-4,-4,-30,-73,-4,272,-78,-4,-108,-110,-4,-56,-85,-91,-4,-4,-4,-4,361,-64,-67,-79,-84,-101,-105,-98,-100,-63,]),'RETURN':([12,19,20,21,66,67,68,69,70,71,72,76,77,86,94,110,111,112,114,173,176,177,214,260,263,264,273,274,299,300,307,327,335,340,353,354,356,357,358,359,],[-18,-17,-15,-16,-4,-72,-118,-119,-120,-121,-122,-96,-97,-4,-71,-26,-24,-25,-4,-30,-73,-4,-78,-4,-108,-110,-4,-56,-85,-91,-4,344,-4,-4,-79,-84,-101,-105,-98,-100,]),'VOID':([17,33,34,],[-4,47,-9,]),'AS':([29,],[38,]),'END':([30,93,],[40,-68,]),'LBRACKET':([31,32,34,42,81,106,107,195,210,258,259,321,324,336,337,339,],[41,-4,-9,-69,-4,168,-99,-4,274,168,-82,-4,168,168,-83,-104,]),'COMMA':([35,36,37,48,49,50,51,53,60,61,79,82,83,87,91,101,103,108,113,115,117,118,119,124,133,141,142,143,144,145,146,147,149,150,151,156,157,159,161,162,163,174,178,179,181,189,190,191,192,205,206,211,212,213,215,217,221,223,225,226,227,229,230,231,233,240,242,245,247,251,253,255,256,265,266,268,275,276,278,281,284,289,291,292,293,294,296,297,313,314,315,316,317,319,323,330,332,333,346,347,352,363,367,380,381,],[-4,-4,-4,58,-29,-5,-4,-35,89,-33,-4,-4,-41,-4,-4,-4,-43,-5,58,-4,-34,-37,-179,-4,-4,-4,-4,-4,-4,-177,-178,-180,-184,-185,-186,198,-86,203,-115,-39,-40,-4,-4,-8,-4,-4,-4,-4,-4,-4,-48,-4,89,-36,-145,-147,-149,-151,284,284,284,284,284,-153,-155,-162,-164,-167,-169,-173,-175,-181,-183,203,-42,-46,309,-62,-146,-150,-131,-4,-4,-163,-168,-174,-106,-107,-6,-7,284,331,284,-154,-45,349,-139,-4,-4,284,284,309,374,374,-138,]),'LSQBRACKET':([36,37,50,79,82,83,91,108,115,205,206,331,],[-4,52,-5,104,-4,-41,116,-5,52,269,-48,351,]),'LPAREN':([36,50,56,74,75,78,80,82,84,85,95,96,97,98,99,100,102,104,108,131,132,134,135,136,137,138,139,140,148,152,153,180,194,198,203,207,208,216,218,222,224,232,234,235,236,237,238,239,241,243,244,246,248,249,250,252,254,261,262,267,269,271,295,342,344,],[-4,-5,-4,97,98,100,105,-4,109,-55,132,-4,132,132,132,-112,132,-44,-111,180,-182,183,183,183,183,183,183,-93,132,100,-77,132,132,-4,132,132,271,132,-148,132,-152,132,-156,-157,-158,-159,-160,-161,132,-165,-166,132,-170,-171,-172,132,-4,132,-90,132,-47,132,-176,132,-65,]),'ASSIGN':([36,50,73,79,82,83,101,103,108,162,163,165,166,205,206,266,268,323,],[-4,-5,96,-4,-4,-41,-4,-43,-5,-39,-40,96,-102,-4,-48,-42,-46,-45,]),'RPAREN':([36,50,79,82,83,99,100,101,103,108,109,119,124,133,141,142,143,144,145,146,147,149,150,151,154,155,156,157,158,159,160,161,162,163,169,171,178,179,181,189,190,191,192,193,194,197,199,202,204,205,206,211,215,217,219,220,221,223,228,231,233,240,242,245,247,251,253,255,256,257,265,266,268,275,276,278,281,282,283,284,291,292,293,294,296,297,301,302,304,305,306,308,310,312,313,314,316,318,319,323,325,330,332,346,348,349,350,363,366,368,372,373,377,381,],[-4,-5,-4,-4,-41,-4,-112,-4,-43,-5,-4,-179,-4,-4,-4,-4,-4,-4,-177,-178,-180,-184,-185,-186,195,196,-4,-86,201,-4,-114,-115,-39,-40,210,-59,-4,-8,-4,-4,-4,-4,-4,256,-4,-87,-89,-113,-117,-4,-48,-4,-145,-147,280,-94,-149,-151,288,-153,-155,-162,-164,-167,-169,-173,-175,-181,-183,297,-4,-42,-46,-4,-62,-146,-150,288,-4,-131,-4,-163,-168,-174,-106,-107,-88,-116,-4,-103,326,-58,-61,-133,-6,-7,-4,288,-154,-45,339,-4,-139,-4,288,-4,-143,-4,-142,-4,-60,288,288,-138,]),'CTE_INT':([52,95,96,97,98,99,100,102,104,116,132,148,153,180,194,198,203,207,216,218,222,224,232,234,235,236,237,238,239,241,243,244,246,248,249,250,252,254,261,262,267,269,271,283,284,289,295,304,305,333,342,344,349,368,],[63,150,-4,150,150,150,-112,150,-44,63,-182,150,-77,150,150,-4,150,150,150,-148,150,-152,150,-156,-157,-158,-159,-160,-161,150,-165,-166,150,-170,-171,-172,150,-4,150,-90,150,-47,150,313,-131,313,-176,313,-103,313,150,-65,313,313,]),'RSQBRACKET':([62,63,79,82,83,92,101,103,108,119,124,133,141,142,143,144,145,146,147,149,150,151,162,163,164,175,178,179,181,189,190,191,192,205,206,215,217,221,223,231,233,240,242,245,247,251,253,255,256,266,268,278,281,291,292,293,294,296,297,303,319,323,367,375,376,380,383,],[91,-4,-4,-4,-41,-38,-4,-43,-5,-179,-4,-4,-4,-4,-4,-4,-177,-178,-180,-184,-185,-186,-39,-40,206,213,-4,-8,-4,-4,-4,-4,-4,-4,-48,-145,-147,-149,-151,-153,-155,-162,-164,-167,-169,-173,-175,-181,-183,-42,-46,-146,-150,-4,-163,-168,-174,-106,-107,206,-154,-45,-4,381,-141,-4,-140,]),'POWER':([79,82,83,101,103,108,119,144,145,146,147,149,150,151,162,163,179,192,205,206,255,256,266,268,296,297,323,],[-4,-4,-41,-4,-43,-5,-179,-4,-177,-178,-180,-184,-185,-186,-39,-40,-8,254,-4,-48,-181,-183,-42,-46,-106,-107,-45,]),'MULTIPLY':([79,82,83,101,103,108,119,143,144,145,146,147,149,150,151,162,163,179,191,192,205,206,251,253,255,256,266,268,294,296,297,323,],[-4,-4,-41,-4,-43,-5,-179,-4,-4,-177,-178,-180,-184,-185,-186,-39,-40,-8,248,-4,-4,-48,-173,-175,-181,-183,-42,-46,-174,-106,-107,-45,]),'DIVIDE':([79,82,83,101,103,108,119,143,144,145,146,147,149,150,151,162,163,179,191,192,205,206,251,253,255,256,266,268,294,296,297,323,],[-4,-4,-41,-4,-43,-5,-179,-4,-4,-177,-178,-180,-184,-185,-186,-39,-40,-8,249,-4,-4,-48,-173,-175,-181,-183,-42,-46,-174,-106,-107,-45,]),'MODULE':([79,82,83,101,103,108,119,143,144,145,146,147,149,150,151,162,163,179,191,192,205,206,251,253,255,256,266,268,294,296,297,323,],[-4,-4,-41,-4,-43,-5,-179,-4,-4,-177,-178,-180,-184,-185,-186,-39,-40,-8,250,-4,-4,-48,-173,-175,-181,-183,-42,-46,-174,-106,-107,-45,]),'PLUS':([79,82,83,101,103,108,119,142,143,144,145,146,147,149,150,151,162,163,179,190,191,192,205,206,245,247,251,253,255,256,266,268,293,294,296,297,323,],[-4,-4,-41,-4,-43,-5,-179,-4,-4,-4,-177,-178,-180,-184,-185,-186,-39,-40,-8,243,-4,-4,-4,-48,-167,-169,-173,-175,-181,-183,-42,-46,-168,-174,-106,-107,-45,]),'MINUS':([79,82,83,101,103,108,119,142,143,144,145,146,147,149,150,151,162,163,179,190,191,192,205,206,245,247,251,253,255,256,266,268,293,294,296,297,323,],[-4,-4,-41,-4,-43,-5,-179,-4,-4,-4,-177,-178,-180,-184,-185,-186,-39,-40,-8,244,-4,-4,-4,-48,-167,-169,-173,-175,-181,-183,-42,-46,-168,-174,-106,-107,-45,]),'GTHAN':([79,82,83,101,103,108,119,141,142,143,144,145,146,147,149,150,151,162,163,179,189,190,191,192,205,206,240,242,245,247,251,253,255,256,266,268,292,293,294,296,297,323,],[-4,-4,-41,-4,-43,-5,-179,-4,-4,-4,-4,-177,-178,-180,-184,-185,-186,-39,-40,-8,234,-4,-4,-4,-4,-48,-162,-164,-167,-169,-173,-175,-181,-183,-42,-46,-163,-168,-174,-106,-107,-45,]),'EQUAL':([79,82,83,101,103,108,119,141,142,143,144,145,146,147,149,150,151,162,163,179,189,190,191,192,205,206,240,242,245,247,251,253,255,256,266,268,292,293,294,296,297,323,],[-4,-4,-41,-4,-43,-5,-179,-4,-4,-4,-4,-177,-178,-180,-184,-185,-186,-39,-40,-8,235,-4,-4,-4,-4,-48,-162,-164,-167,-169,-173,-175,-181,-183,-42,-46,-163,-168,-174,-106,-107,-45,]),'NOTEQUAL':([79,82,83,101,103,108,119,141,142,143,144,145,146,147,149,150,151,162,163,179,189,190,191,192,205,206,240,242,245,247,251,253,255,256,266,268,292,293,294,296,297,323,],[-4,-4,-41,-4,-43,-5,-179,-4,-4,-4,-4,-177,-178,-180,-184,-185,-186,-39,-40,-8,236,-4,-4,-4,-4,-48,-162,-164,-167,-169,-173,-175,-181,-183,-42,-46,-163,-168,-174,-106,-107,-45,]),'LTHAN':([79,82,83,101,103,108,119,141,142,143,144,145,146,147,149,150,151,162,163,179,189,190,191,192,205,206,240,242,245,247,251,253,255,256,266,268,292,293,294,296,297,323,],[-4,-4,-41,-4,-43,-5,-179,-4,-4,-4,-4,-177,-178,-180,-184,-185,-186,-39,-40,-8,237,-4,-4,-4,-4,-48,-162,-164,-167,-169,-173,-175,-181,-183,-42,-46,-163,-168,-174,-106,-107,-45,]),'GORE':([79,82,83,101,103,108,119,141,142,143,144,145,146,147,149,150,151,162,163,179,189,190,191,192,205,206,240,242,245,247,251,253,255,256,266,268,292,293,294,296,297,323,],[-4,-4,-41,-4,-43,-5,-179,-4,-4,-4,-4,-177,-178,-180,-184,-185,-186,-39,-40,-8,238,-4,-4,-4,-4,-48,-162,-164,-167,-169,-173,-175,-181,-183,-42,-46,-163,-168,-174,-106,-107,-45,]),'LORE':([79,82,83,101,103,108,119,141,142,143,144,145,146,147,149,150,151,162,163,179,189,190,191,192,205,206,240,242,245,247,251,253,255,256,266,268,292,293,294,296,297,323,],[-4,-4,-41,-4,-43,-5,-179,-4,-4,-4,-4,-177,-178,-180,-184,-185,-186,-39,-40,-8,239,-4,-4,-4,-4,-48,-162,-164,-167,-169,-173,-175,-181,-183,-42,-46,-163,-168,-174,-106,-107,-45,]),'AND':([79,82,83,101,103,108,119,133,141,142,143,144,145,146,147,149,150,151,162,163,179,181,189,190,191,192,205,206,231,233,240,242,245,247,251,253,255,256,266,268,291,292,293,294,296,297,319,323,],[-4,-4,-41,-4,-43,-5,-179,-4,-4,-4,-4,-4,-177,-178,-180,-184,-185,-186,-39,-40,-8,224,-4,-4,-4,-4,-4,-48,-153,-155,-162,-164,-167,-169,-173,-175,-181,-183,-42,-46,-4,-163,-168,-174,-106,-107,-154,-45,]),'OR':([79,82,83,101,103,108,119,124,133,141,142,143,144,145,146,147,149,150,151,162,163,178,179,181,189,190,191,192,205,206,221,223,231,233,240,242,245,247,251,253,255,256,266,268,281,291,292,293,294,296,297,319,323,],[-4,-4,-41,-4,-43,-5,-179,-4,-4,-4,-4,-4,-4,-177,-178,-180,-184,-185,-186,-39,-40,218,-8,-4,-4,-4,-4,-4,-4,-48,-149,-151,-153,-155,-162,-164,-167,-169,-173,-175,-181,-183,-42,-46,-150,-4,-163,-168,-174,-106,-107,-154,-45,]),'TO':([79,82,83,101,103,108,119,124,133,141,142,143,144,145,146,147,149,150,151,162,163,178,179,181,189,190,191,192,205,206,215,217,221,223,231,233,240,242,245,247,251,253,255,256,266,268,270,278,281,291,292,293,294,296,297,319,323,],[-4,-4,-41,-4,-43,-5,-179,-4,-4,-4,-4,-4,-4,-177,-178,-180,-184,-185,-186,-39,-40,-4,-8,-4,-4,-4,-4,-4,-4,-48,-145,-147,-149,-151,-153,-155,-162,-164,-167,-169,-173,-175,-181,-183,-42,-46,305,-146,-150,-4,-163,-168,-174,-106,-107,-154,-45,]),'EXPLORATION':([95,96,153,],[134,-4,-77,]),'FINANCIAL_STATE':([95,96,153,],[135,-4,-77,]),'DUMMI_REGRESSION':([95,96,153,],[136,-4,-77,]),'SEASON_ANALYSIS':([95,96,153,],[137,-4,-77,]),'TREND_PREDICTION':([95,96,153,],[138,-4,-77,]),'MODEL_PREDICT':([95,96,153,],[139,-4,-77,]),'READ':([95,96,153,],[140,-4,-77,]),'CTE_FLOAT':([95,96,97,98,99,100,102,104,132,148,153,180,194,198,203,207,216,218,222,224,232,234,235,236,237,238,239,241,243,244,246,248,249,250,252,254,261,262,267,269,271,295,342,344,],[149,-4,149,149,149,-112,149,-44,-182,149,-77,149,149,-4,149,149,149,-148,149,-152,149,-156,-157,-158,-159,-160,-161,149,-165,-166,149,-170,-171,-172,149,-4,149,-90,149,-47,149,-176,149,-65,]),'CTE_CHAR':([95,96,97,98,99,100,102,104,132,148,153,180,194,198,203,207,216,218,222,224,232,234,235,236,237,238,239,241,243,244,246,248,249,250,252,254,261,262,267,269,271,295,342,344,351,374,],[151,-4,151,151,151,-112,151,-44,-182,151,-77,151,151,-4,151,151,151,-148,151,-152,151,-156,-157,-158,-159,-160,-161,151,-165,-166,151,-170,-171,-172,151,-4,151,-90,151,-47,151,-176,151,-65,367,380,]),'WHILE':([167,272,],[208,-70,]),'ELSE':([272,298,],[-70,321,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'goto_main':([3,],[4,]),'program_libraries':([4,54,],[6,64,]),'from_library':([4,54,],[7,7,]),'empty':([4,6,10,17,32,35,36,37,41,48,51,54,55,56,60,63,66,79,81,82,86,87,91,96,99,101,109,113,114,115,124,133,141,142,143,144,156,159,168,174,177,178,181,189,190,191,192,194,195,198,205,211,212,254,260,265,273,275,283,289,291,298,304,307,316,321,327,330,333,335,340,346,349,360,362,363,367,368,380,],[8,12,18,34,34,49,50,53,12,59,61,8,67,85,90,92,67,103,107,108,112,49,118,153,160,163,171,59,112,53,179,179,179,179,179,179,199,204,67,61,214,217,223,233,242,247,253,160,259,262,268,276,90,295,300,204,12,310,314,314,179,322,314,67,332,337,345,350,314,354,359,276,314,18,371,310,376,314,376,]),'program_vars':([6,41,273,],[10,55,307,]),'import_library':([7,],[13,]),'program_function':([10,360,],[16,369,]),'var_type':([11,86,114,],[19,111,111,]),'var_c_type':([11,86,114,],[20,20,20,]),'var_s_type':([11,86,114,],[21,21,21,]),'c_type':([11,86,114,],[22,22,22,]),'s_type':([11,86,109,114,309,],[23,23,170,23,328,]),'program_main':([16,],[30,]),'main_id':([16,],[31,]),'resources':([17,32,],[33,42,]),'id_saver':([22,23,43,55,58,66,89,95,97,98,99,102,105,148,168,170,180,182,184,185,186,187,188,194,203,207,216,222,232,241,246,252,261,267,271,285,286,290,307,328,329,342,364,],[35,37,56,83,87,83,115,83,83,83,83,83,166,83,83,211,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,346,83,83,83,]),'end':([30,],[39,]),'f_type':([33,],[43,]),'add_c_var':([35,87,],[48,113,]),'var_s_array':([37,115,],[51,174,]),'var_c_type2':([48,113,],[57,172,]),'add_s_var':([51,174,],[60,212,]),'var_s_dimesions':([52,116,],[62,175,]),'inner_body':([55,66,168,307,],[65,94,209,327,]),'statement':([55,66,168,307,],[66,66,66,66,]),'assign':([55,66,168,307,],[68,68,68,68,]),'condition':([55,66,168,307,],[69,69,69,69,]),'print':([55,66,168,307,],[70,70,70,70,]),'cycle':([55,66,168,307,],[71,71,71,71,]),'call_void_function':([55,66,168,307,],[72,72,72,72,]),'variable':([55,66,95,97,98,99,102,148,168,180,182,184,185,186,187,188,194,203,207,216,222,232,241,246,252,261,267,271,285,286,290,307,329,342,364,],[73,73,119,119,119,119,119,119,73,119,225,226,227,228,229,230,119,119,119,119,119,119,119,119,119,119,119,119,315,316,318,73,347,119,373,]),'for':([55,66,168,307,],[76,76,76,76,]),'while':([55,66,168,307,],[77,77,77,77,]),'function_saver':([55,66,95,97,98,99,102,148,168,180,194,203,207,216,222,232,241,246,252,261,267,271,307,342,],[78,78,152,152,152,152,152,152,78,152,152,152,152,152,152,152,152,152,152,152,152,152,78,152,]),'var_id_saver':([55,66,95,97,98,99,102,148,168,180,182,184,185,186,187,188,194,203,207,216,222,232,241,246,252,261,267,271,285,286,290,307,329,342,364,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'func_creator':([56,],[84,]),'var_s_type2':([60,212,],[88,277,]),'keep_assign':([73,165,],[95,207,]),'function_flag':([78,152,],[99,194,]),'variable_array':([79,],[101,]),'save_var':([79,],[102,]),'seed':([81,],[106,]),'var_multiple':([86,114,],[110,173,]),'var_s_matrix':([91,],[117,]),'specialf_assign':([95,],[120,]),'exp':([95,97,98,99,102,148,180,194,203,207,216,261,267,271,342,],[121,154,157,161,164,193,220,161,161,270,278,157,303,306,362,]),'special_function':([95,],[122,]),'read':([95,],[123,]),'t_exp':([95,97,98,99,102,148,180,194,203,207,216,222,261,267,271,342,],[124,124,124,124,124,124,124,124,124,124,124,281,124,124,124,124,]),'exploration':([95,],[125,]),'financial_state':([95,],[126,]),'dummi_regression':([95,],[127,]),'season_analysis':([95,],[128,]),'trend_prediction':([95,],[129,]),'model_predict':([95,],[130,]),'np_read':([95,],[131,]),'expression':([95,97,98,99,102,148,180,194,203,207,216,222,261,267,271,342,],[133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,]),'m_exp':([95,97,98,99,102,148,180,194,203,207,216,222,232,241,261,267,271,342,],[141,141,141,141,141,141,141,141,141,141,141,141,291,292,141,141,141,141,]),'term':([95,97,98,99,102,148,180,194,203,207,216,222,232,241,246,261,267,271,342,],[142,142,142,142,142,142,142,142,142,142,142,142,142,142,293,142,142,142,142,]),'sub_factor':([95,97,98,99,102,148,180,194,203,207,216,222,232,241,246,252,261,267,271,342,],[143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,294,143,143,143,143,]),'factor':([95,97,98,99,102,148,180,194,203,207,216,222,232,241,246,252,261,267,271,342,],[144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,]),'factor_exp':([95,97,98,99,102,148,180,194,203,207,216,222,232,241,246,252,261,267,271,342,],[145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,]),'factor_cte':([95,97,98,99,102,148,180,194,203,207,216,222,232,241,246,252,261,267,271,342,],[146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,]),'call_function':([95,97,98,99,102,148,180,194,203,207,216,222,232,241,246,252,261,267,271,342,],[147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,]),'false_button':([95,97,98,99,102,148,180,194,203,207,216,222,232,241,246,252,261,267,271,342,],[148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,]),'print_many':([98,261,],[155,301,]),'print_type':([98,261,],[156,156,]),'call_params':([99,194,],[158,257,]),'check_param':([99,194,203,],[159,159,265,]),'clear_dimension':([101,],[162,]),'for_control':([105,],[165,]),'body':([106,258,324,336,],[167,298,338,355,]),'param':([109,],[169,]),'end_assign':([120,],[176,]),'release_exp':([124,133,141,142,143,144,291,],[178,181,189,190,191,192,319,]),'tag_sp':([134,135,136,137,138,139,],[182,184,185,186,187,188,]),'print_many2':([156,],[197,]),'verify_params':([158,],[200,]),'exp_many':([159,265,],[202,302,]),'index_arr_mat':([164,303,],[205,323,]),'exp_or':([178,],[215,]),'exp_keep_or':([178,],[216,]),'valid_exp_read':([180,],[219,]),'t_exp_and':([181,],[221,]),'keep_and':([181,],[222,]),'expression_comp':([189,],[231,]),'expression_comp_2':([189,],[232,]),'m_exp_sr':([190,],[240,]),'m_exp_sr_2':([190,],[241,]),'term_pc':([191,],[245,]),'term_pc_2':([191,],[246,]),'sub_factor_pc':([192,],[251,]),'sub_factor_pc_2':([192,],[252,]),'release_false_button':([193,],[255,]),'condition_GOTOF':([195,],[258,]),'print_many_np':([198,],[261,]),'check_void':([200,],[263,]),'variable_matrix':([205,],[266,]),'test':([205,],[267,]),'add_func_glob':([210,],[273,]),'add_params':([211,346,],[275,363,]),'read_np':([219,],[279,]),'explore_cte':([225,],[282,]),'sp_param':([225,226,227,229,230,315,317,347,352,],[283,285,286,289,290,329,333,364,368,]),'np_check_size':([228,282,318,348,373,377,],[287,311,334,365,379,382,]),'check_not_void':([257,],[296,]),'end_print_np':([260,],[299,]),'for_np1':([270,],[304,]),'param2':([275,363,],[308,372,]),'int_const_saver':([283,289,304,333,349,368,],[312,317,325,352,366,377,]),'condition2':([298,],[320,]),'for_end':([304,],[324,]),'dr_array':([316,],[330,]),'condition_GOTO':([321,],[336,]),'return':([327,],[341,]),'return_np':([327,],[342,]),'empty_path_return':([327,],[343,]),'dr_int':([330,],[348,]),'end_condition':([335,],[353,]),'for_np2':([338,],[356,]),'gotoV':([340,],[358,]),'end_function':([341,],[360,]),'return_quad':([362,],[370,]),'dr_array_mp':([367,380,],[375,383,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID goto_main program_libraries program_vars program_function program_main end','program',8,'p_program','parser.py',48),
  ('goto_main -> SEMICOLON','goto_main',1,'p_goto_main','parser.py',52),
  ('end -> END','end',1,'p_end','parser.py',57),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',96),
  ('id_saver -> ID empty','id_saver',2,'p_id_saver','parser.py',103),
  ('int_const_saver -> CTE_INT','int_const_saver',1,'p_int_const_saver','parser.py',112),
  ('int_const_saver -> empty','int_const_saver',1,'p_int_const_saver','parser.py',113),
  ('release_exp -> empty','release_exp',1,'p_release_exp','parser.py',125),
  ('resources -> empty','resources',1,'p_resources','parser.py',131),
  ('program_libraries -> from_library import_library','program_libraries',2,'p_program_libraries','parser.py',174),
  ('program_libraries -> empty','program_libraries',1,'p_program_libraries','parser.py',175),
  ('from_library -> FROM ID','from_library',2,'p_from_library','parser.py',178),
  ('from_library -> empty','from_library',1,'p_from_library','parser.py',179),
  ('import_library -> IMPORT ID AS ID program_libraries','import_library',5,'p_import_library','parser.py',182),
  ('var_type -> var_c_type','var_type',1,'p_var_type','parser.py',187),
  ('var_type -> var_s_type','var_type',1,'p_var_type','parser.py',188),
  ('program_vars -> VAR var_type','program_vars',2,'p_program_vars','parser.py',191),
  ('program_vars -> empty','program_vars',1,'p_program_vars','parser.py',192),
  ('s_type -> INT','s_type',1,'p_s_type','parser.py',202),
  ('s_type -> FLOAT','s_type',1,'p_s_type','parser.py',203),
  ('s_type -> CHAR','s_type',1,'p_s_type','parser.py',204),
  ('c_type -> DATAFRAME','c_type',1,'p_c_type','parser.py',211),
  ('c_type -> DATE','c_type',1,'p_c_type','parser.py',212),
  ('var_multiple -> var_type','var_multiple',1,'p_var_multiple','parser.py',219),
  ('var_multiple -> empty','var_multiple',1,'p_var_multiple','parser.py',220),
  ('var_c_type -> c_type id_saver add_c_var var_c_type2 SEMICOLON var_multiple','var_c_type',6,'p_var_c_type','parser.py',223),
  ('var_c_type2 -> COMMA id_saver add_c_var var_c_type2','var_c_type2',4,'p_var_c_type2','parser.py',226),
  ('var_c_type2 -> empty','var_c_type2',1,'p_var_c_type2','parser.py',227),
  ('add_c_var -> empty','add_c_var',1,'p_add_c_var','parser.py',230),
  ('var_s_type -> s_type id_saver var_s_array add_s_var var_s_type2 SEMICOLON var_multiple','var_s_type',7,'p_var_s_type','parser.py',236),
  ('var_s_type2 -> COMMA id_saver var_s_array add_s_var var_s_type2','var_s_type2',5,'p_var_s_type2','parser.py',239),
  ('var_s_type2 -> empty','var_s_type2',1,'p_var_s_type2','parser.py',240),
  ('add_s_var -> empty','add_s_var',1,'p_add_s_var','parser.py',245),
  ('var_s_array -> LSQBRACKET var_s_dimesions RSQBRACKET var_s_matrix','var_s_array',4,'p_var_s_array','parser.py',254),
  ('var_s_array -> empty','var_s_array',1,'p_var_s_array','parser.py',255),
  ('var_s_matrix -> LSQBRACKET var_s_dimesions RSQBRACKET','var_s_matrix',3,'p_var_s_matrix','parser.py',260),
  ('var_s_matrix -> empty','var_s_matrix',1,'p_var_s_matrix','parser.py',261),
  ('var_s_dimesions -> CTE_INT empty','var_s_dimesions',2,'p_var_s_dimesions','parser.py',265),
  ('variable -> var_id_saver variable_array clear_dimension','variable',3,'p_variable','parser.py',282),
  ('clear_dimension -> empty','clear_dimension',1,'p_clear_dimension','parser.py',285),
  ('var_id_saver -> id_saver','var_id_saver',1,'p_var_id_saver','parser.py',289),
  ('variable_array -> save_var exp index_arr_mat variable_matrix','variable_array',4,'p_variable_array','parser.py',311),
  ('variable_array -> empty','variable_array',1,'p_variable_array','parser.py',312),
  ('save_var -> LSQBRACKET','save_var',1,'p_save_var','parser.py',316),
  ('variable_matrix -> test exp index_arr_mat','variable_matrix',3,'p_variable_matrix','parser.py',322),
  ('variable_matrix -> empty','variable_matrix',1,'p_variable_matrix','parser.py',323),
  ('test -> LSQBRACKET','test',1,'p_test','parser.py',326),
  ('index_arr_mat -> RSQBRACKET','index_arr_mat',1,'p_index_arr_mat','parser.py',330),
  ('program_function -> FUNCTION resources f_type id_saver func_creator LPAREN param RPAREN add_func_glob program_vars inner_body return end_function program_function','program_function',14,'p_program_function','parser.py',366),
  ('program_function -> empty','program_function',1,'p_program_function','parser.py',367),
  ('f_type -> INT','f_type',1,'p_f_type','parser.py',372),
  ('f_type -> FLOAT','f_type',1,'p_f_type','parser.py',373),
  ('f_type -> CHAR','f_type',1,'p_f_type','parser.py',374),
  ('f_type -> VOID','f_type',1,'p_f_type','parser.py',375),
  ('func_creator -> empty','func_creator',1,'p_func_creator','parser.py',385),
  ('add_func_glob -> LBRACKET','add_func_glob',1,'p_add_func_glob','parser.py',395),
  ('end_function -> RBRACKET','end_function',1,'p_end_function','parser.py',404),
  ('param -> s_type id_saver add_params param2','param',4,'p_param','parser.py',412),
  ('param -> empty','param',1,'p_param','parser.py',413),
  ('param2 -> COMMA s_type id_saver add_params param2','param2',5,'p_param2','parser.py',417),
  ('param2 -> empty','param2',1,'p_param2','parser.py',418),
  ('add_params -> empty','add_params',1,'p_add_params','parser.py',422),
  ('return -> return_np exp return_quad SEMICOLON','return',4,'p_return','parser.py',430),
  ('return -> empty_path_return','return',1,'p_return','parser.py',431),
  ('return_np -> RETURN','return_np',1,'p_return_np','parser.py',434),
  ('return_quad -> empty','return_quad',1,'p_return_quad','parser.py',443),
  ('empty_path_return -> empty','empty_path_return',1,'p_empty_path_return','parser.py',452),
  ('program_main -> main_id LBRACKET program_vars inner_body RBRACKET','program_main',5,'p_program_main','parser.py',463),
  ('main_id -> MAIN resources','main_id',2,'p_main_id','parser.py',466),
  ('body -> LBRACKET inner_body RBRACKET','body',3,'p_body','parser.py',476),
  ('inner_body -> statement inner_body','inner_body',2,'p_inner_body','parser.py',480),
  ('inner_body -> empty','inner_body',1,'p_inner_body','parser.py',481),
  ('assign -> variable keep_assign specialf_assign end_assign','assign',4,'p_assign','parser.py',486),
  ('specialf_assign -> exp','specialf_assign',1,'p_specialf_assign','parser.py',490),
  ('specialf_assign -> special_function','specialf_assign',1,'p_specialf_assign','parser.py',491),
  ('specialf_assign -> read','specialf_assign',1,'p_specialf_assign','parser.py',492),
  ('keep_assign -> ASSIGN empty','keep_assign',2,'p_keep_assign','parser.py',496),
  ('end_assign -> SEMICOLON empty','end_assign',2,'p_end_assign','parser.py',512),
  ('condition -> IF LPAREN exp RPAREN condition_GOTOF body condition2 SEMICOLON end_condition','condition',9,'p_condition','parser.py',520),
  ('condition2 -> ELSE condition_GOTO body','condition2',3,'p_condition2','parser.py',523),
  ('condition2 -> empty','condition2',1,'p_condition2','parser.py',524),
  ('condition_GOTOF -> empty','condition_GOTOF',1,'p_condition_GOTOF','parser.py',528),
  ('condition_GOTO -> empty','condition_GOTO',1,'p_condition_GOTO','parser.py',535),
  ('end_condition -> empty','end_condition',1,'p_end_condition','parser.py',540),
  ('print -> PRINT LPAREN print_many RPAREN SEMICOLON end_print_np','print',6,'p_print','parser.py',549),
  ('print_type -> exp','print_type',1,'p_print_type','parser.py',552),
  ('print_many -> print_type print_many2','print_many',2,'p_print_many','parser.py',555),
  ('print_many2 -> COMMA print_many_np print_many','print_many2',3,'p_print_many2','parser.py',558),
  ('print_many2 -> empty','print_many2',1,'p_print_many2','parser.py',559),
  ('print_many_np -> empty','print_many_np',1,'p_print_many_np','parser.py',562),
  ('end_print_np -> empty','end_print_np',1,'p_end_print_np','parser.py',566),
  ('read -> np_read LPAREN valid_exp_read read_np','read',4,'p_read','parser.py',572),
  ('np_read -> READ','np_read',1,'p_np_read','parser.py',575),
  ('valid_exp_read -> exp','valid_exp_read',1,'p_valid_exp_read','parser.py',578),
  ('read_np -> RPAREN','read_np',1,'p_read_np','parser.py',587),
  ('cycle -> for','cycle',1,'p_cycle','parser.py',596),
  ('cycle -> while','cycle',1,'p_cycle','parser.py',597),
  ('while -> DO seed body WHILE LPAREN exp RPAREN SEMICOLON gotoV','while',9,'p_while','parser.py',601),
  ('seed -> empty','seed',1,'p_seed','parser.py',605),
  ('gotoV -> empty','gotoV',1,'p_gotoV','parser.py',610),
  ('for -> FOR LPAREN for_control keep_assign exp for_np1 for_end body for_np2','for',9,'p_for','parser.py',616),
  ('for_control -> id_saver','for_control',1,'p_for_control','parser.py',619),
  ('for_np1 -> TO','for_np1',1,'p_for_np1','parser.py',629),
  ('for_end -> int_const_saver RPAREN','for_end',2,'p_for_end','parser.py',634),
  ('for_np2 -> SEMICOLON','for_np2',1,'p_for_np2','parser.py',647),
  ('call_function -> function_saver function_flag call_params check_not_void','call_function',4,'p_call_function','parser.py',691),
  ('check_not_void -> RPAREN','check_not_void',1,'p_check_not_void','parser.py',696),
  ('call_void_function -> function_saver function_flag call_params verify_params check_void','call_void_function',5,'p_call_void_function','parser.py',718),
  ('verify_params -> RPAREN','verify_params',1,'p_verify_params','parser.py',721),
  ('check_void -> SEMICOLON','check_void',1,'p_check_void','parser.py',731),
  ('function_saver -> ID empty','function_saver',2,'p_function_saver','parser.py',745),
  ('function_flag -> LPAREN','function_flag',1,'p_function_flag','parser.py',757),
  ('call_params -> check_param exp_many','call_params',2,'p_call_params','parser.py',800),
  ('call_params -> empty','call_params',1,'p_call_params','parser.py',801),
  ('check_param -> exp','check_param',1,'p_check_param','parser.py',806),
  ('exp_many -> COMMA check_param exp_many','exp_many',3,'p_exp_many','parser.py',821),
  ('exp_many -> empty','exp_many',1,'p_exp_many','parser.py',822),
  ('statement -> assign','statement',1,'p_statement','parser.py',826),
  ('statement -> condition','statement',1,'p_statement','parser.py',827),
  ('statement -> print','statement',1,'p_statement','parser.py',828),
  ('statement -> cycle','statement',1,'p_statement','parser.py',829),
  ('statement -> call_void_function','statement',1,'p_statement','parser.py',830),
  ('special_function -> exploration','special_function',1,'p_special_function','parser.py',834),
  ('special_function -> financial_state','special_function',1,'p_special_function','parser.py',835),
  ('special_function -> dummi_regression','special_function',1,'p_special_function','parser.py',836),
  ('special_function -> season_analysis','special_function',1,'p_special_function','parser.py',837),
  ('special_function -> trend_prediction','special_function',1,'p_special_function','parser.py',838),
  ('special_function -> model_predict','special_function',1,'p_special_function','parser.py',839),
  ('tag_sp -> LPAREN','tag_sp',1,'p_tag_sp','parser.py',844),
  ('exploration -> EXPLORATION tag_sp variable explore_cte np_check_size','exploration',5,'p_exploration','parser.py',857),
  ('sp_param -> COMMA','sp_param',1,'p_sp_param','parser.py',860),
  ('np_check_size -> RPAREN','np_check_size',1,'p_np_check_size','parser.py',878),
  ('explore_cte -> sp_param int_const_saver','explore_cte',2,'p_explore_cte','parser.py',907),
  ('financial_state -> FINANCIAL_STATE tag_sp variable sp_param variable sp_param variable sp_param variable np_check_size','financial_state',10,'p_financial_state','parser.py',912),
  ('season_analysis -> SEASON_ANALYSIS tag_sp variable np_check_size','season_analysis',4,'p_season_analysis','parser.py',916),
  ('trend_prediction -> TREND_PREDICTION tag_sp variable sp_param int_const_saver sp_param int_const_saver sp_param int_const_saver np_check_size','trend_prediction',10,'p_trend_prediction','parser.py',922),
  ('dummi_regression -> DUMMI_REGRESSION tag_sp variable sp_param variable dr_array dr_int np_check_size','dummi_regression',8,'p_dummi_regression','parser.py',926),
  ('dr_array -> COMMA LSQBRACKET CTE_CHAR dr_array_mp RSQBRACKET','dr_array',5,'p_dr_array','parser.py',929),
  ('dr_array -> empty','dr_array',1,'p_dr_array','parser.py',930),
  ('dr_array_mp -> COMMA CTE_CHAR dr_array_mp','dr_array_mp',3,'p_dr_array_mp','parser.py',933),
  ('dr_array_mp -> empty','dr_array_mp',1,'p_dr_array_mp','parser.py',934),
  ('dr_int -> COMMA int_const_saver','dr_int',2,'p_dr_int','parser.py',937),
  ('dr_int -> empty','dr_int',1,'p_dr_int','parser.py',938),
  ('model_predict -> MODEL_PREDICT tag_sp variable sp_param variable np_check_size','model_predict',6,'p_model_predict','parser.py',942),
  ('exp -> t_exp release_exp exp_or','exp',3,'p_exp','parser.py',947),
  ('exp_or -> exp_keep_or exp','exp_or',2,'p_exp_or','parser.py',951),
  ('exp_or -> empty','exp_or',1,'p_exp_or','parser.py',952),
  ('exp_keep_or -> OR','exp_keep_or',1,'p_exp_keep_or','parser.py',955),
  ('t_exp -> expression release_exp t_exp_and','t_exp',3,'p_t_exp','parser.py',964),
  ('t_exp_and -> keep_and t_exp','t_exp_and',2,'p_t_exp_and','parser.py',969),
  ('t_exp_and -> empty','t_exp_and',1,'p_t_exp_and','parser.py',970),
  ('keep_and -> AND','keep_and',1,'p_keep_and','parser.py',973),
  ('expression -> m_exp release_exp expression_comp','expression',3,'p_expression','parser.py',982),
  ('expression_comp -> expression_comp_2 m_exp release_exp','expression_comp',3,'p_expression_comp','parser.py',988),
  ('expression_comp -> empty','expression_comp',1,'p_expression_comp','parser.py',989),
  ('expression_comp_2 -> GTHAN','expression_comp_2',1,'p_expression_comp_2','parser.py',994),
  ('expression_comp_2 -> EQUAL','expression_comp_2',1,'p_expression_comp_2','parser.py',995),
  ('expression_comp_2 -> NOTEQUAL','expression_comp_2',1,'p_expression_comp_2','parser.py',996),
  ('expression_comp_2 -> LTHAN','expression_comp_2',1,'p_expression_comp_2','parser.py',997),
  ('expression_comp_2 -> GORE','expression_comp_2',1,'p_expression_comp_2','parser.py',998),
  ('expression_comp_2 -> LORE','expression_comp_2',1,'p_expression_comp_2','parser.py',999),
  ('m_exp -> term release_exp m_exp_sr','m_exp',3,'p_m_exp','parser.py',1009),
  ('m_exp_sr -> m_exp_sr_2 m_exp','m_exp_sr',2,'p_m_exp_sr','parser.py',1016),
  ('m_exp_sr -> empty','m_exp_sr',1,'p_m_exp_sr','parser.py',1017),
  ('m_exp_sr_2 -> PLUS','m_exp_sr_2',1,'p_m_exp_sr_2','parser.py',1020),
  ('m_exp_sr_2 -> MINUS','m_exp_sr_2',1,'p_m_exp_sr_2','parser.py',1021),
  ('term -> sub_factor release_exp term_pc','term',3,'p_term','parser.py',1029),
  ('term_pc -> term_pc_2 term','term_pc',2,'p_term_pc','parser.py',1035),
  ('term_pc -> empty','term_pc',1,'p_term_pc','parser.py',1036),
  ('term_pc_2 -> MULTIPLY','term_pc_2',1,'p_term_pc_2','parser.py',1039),
  ('term_pc_2 -> DIVIDE','term_pc_2',1,'p_term_pc_2','parser.py',1040),
  ('term_pc_2 -> MODULE','term_pc_2',1,'p_term_pc_2','parser.py',1041),
  ('sub_factor -> factor release_exp sub_factor_pc','sub_factor',3,'p_sub_factor','parser.py',1047),
  ('sub_factor_pc -> sub_factor_pc_2 sub_factor','sub_factor_pc',2,'p_sub_factor_pc','parser.py',1053),
  ('sub_factor_pc -> empty','sub_factor_pc',1,'p_sub_factor_pc','parser.py',1054),
  ('sub_factor_pc_2 -> POWER empty','sub_factor_pc_2',2,'p_sub_factor_pc_2','parser.py',1057),
  ('factor -> factor_exp','factor',1,'p_factor','parser.py',1065),
  ('factor -> factor_cte','factor',1,'p_factor','parser.py',1066),
  ('factor -> variable','factor',1,'p_factor','parser.py',1067),
  ('factor -> call_function','factor',1,'p_factor','parser.py',1068),
  ('factor_exp -> false_button exp release_false_button','factor_exp',3,'p_factor_exp','parser.py',1075),
  ('false_button -> LPAREN','false_button',1,'p_false_button','parser.py',1080),
  ('release_false_button -> RPAREN','release_false_button',1,'p_release_false_button','parser.py',1086),
  ('factor_cte -> CTE_FLOAT','factor_cte',1,'p_factor_cte','parser.py',1093),
  ('factor_cte -> CTE_INT','factor_cte',1,'p_factor_cte','parser.py',1094),
  ('factor_cte -> CTE_CHAR','factor_cte',1,'p_factor_cte','parser.py',1095),
]
