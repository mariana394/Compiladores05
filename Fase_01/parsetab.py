
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS ASSIGN CHAR COLON COMMA CTE_CHAR CTE_FLOAT CTE_INT DATAFRAME DATE DIVIDE DO DUMMI_REGRESSION ELSE END EQUAL EXPLORATION FINANCIAL_STATE FLOAT FOR FROM FUNCTION GTHAN ID IF IMPORT INT LBRACKET LPAREN LSQBRACKET LTHAN MAIN MINUS MODEL_PREDICT MODULE MULTIPLY NOTEQUAL OR PLUS POWER PRINT PROGRAM RBRACKET READ RETURN RPAREN RSQBRACKET SEASON_ANALYSIS SEMICOLON TO TREND_PREDICTION VAR VOID WHILEprogram : PROGRAM ID SEMICOLON program_libraries program_vars program_function program_main ENDempty : id_saver : ID empty int_const_saver : CTE_INT emptyprogram_libraries : from_library import_library \n                         | emptyfrom_library : FROM ID\n                    | emptyimport_library : IMPORT ID AS ID  program_librariesvar_type : var_c_type\n                | var_s_typeprogram_vars : VAR var_type  \n                    | emptys_type : INT \n              | FLOAT\n              | CHARc_type : DATAFRAME\n              | DATEvar_multiple : var_type\n                    | emptyvar_c_type : c_type id_saver add_c_var var_c_type2 SEMICOLON var_multiplevar_c_type2 : COMMA id_saver add_c_var var_c_type2\n                   | emptyadd_c_var : emptyvar_s_type : s_type id_saver var_s_array add_s_var var_s_type2 SEMICOLON var_multiplevar_s_type2 : COMMA id_saver var_s_array add_s_var var_s_type2\n                   | emptyadd_s_var : emptyvar_s_array : LSQBRACKET var_s_dimesions RSQBRACKET var_s_matrix \n                   | emptyvar_s_matrix : LSQBRACKET var_s_dimesions RSQBRACKET\n                    | emptyvar_s_dimesions : CTE_INT emptyvariable : id_saver variable_arrayvariable_array : LSQBRACKET exp RSQBRACKET variable_matrix\n                      | emptyvariable_matrix : LSQBRACKET exp RSQBRACKET\n                       | emptyprogram_function : FUNCTION f_type id_saver func_creator LPAREN param RPAREN LBRACKET program_vars inner_body return RBRACKET program_function\n                        | emptyf_type : INT \n              | FLOAT\n              | CHAR\n              | VOIDfunc_creator : emptyparam : s_type id_saver add_params param2param2 : COMMA s_type id_saver add_params param2\n              | emptyadd_params : emptyreturn : RETURN exp SEMICOLON\n              | emptyprogram_main : MAIN main_id LBRACKET program_vars inner_body RBRACKETmain_id : emptybody : LBRACKET inner_body RBRACKETinner_body :  statement inner_body\n                  | emptyassign : variable keep_assign specialf_assign SEMICOLONspecialf_assign : exp\n                       | special_function\n                       | readkeep_assign : ASSIGN emptycondition : IF LPAREN exp RPAREN body condition2 SEMICOLONcondition2 : ELSE body\n                 | emptyprint : PRINT LPAREN print_many RPAREN SEMICOLONprint_type : expprint_many : print_type print_many2 print_many2 : COMMA print_type print_many2\n                   | emptyread : READ LPAREN variable RPARENcycle : for\n             | whilewhile : DO body WHILE LPAREN exp RPAREN SEMICOLONfor : FOR LPAREN ID TO for_end RPAREN body SEMICOLONfor_end : int_const_saver\n               | IDcall_function : test LPAREN exp exp_many RPAREN test : ID emptyexp_many : COMMA exp exp_many\n                | emptystatement : assign\n                 | condition\n                 | print\n                 | cycle\n                 | call_functionspecial_function : exploration\n                        | financial_state\n                        | dummi_regression\n                        | season_analysis\n                        | trend_prediction\n                        | model_predictexploration : EXPLORATION LPAREN variable explore_var explor_cte RPARENexplore_var : COMMA variable\n                   | emptyexplor_cte : COMMA int_const_saver\n                  | emptyfinancial_state : FINANCIAL_STATE LPAREN variable COMMA variable COMMA variable COMMA variable RPARENseason_analysis : SEASON_ANALYSIS LPAREN variable RPARENtrend_prediction : TREND_PREDICTION LPAREN variable COMMA int_const_saver COMMA int_const_saver COMMA int_const_saver RPARENdummi_regression : DUMMI_REGRESSION LPAREN variable COMMA variable dr_array dr_int RPARENdr_array : COMMA LSQBRACKET CTE_CHAR dr_array_mp RSQBRACKET\n                | emptydr_array_mp : COMMA CTE_CHAR dr_array_mp\n                   | emptydr_int : COMMA int_const_saver\n              | emptymodel_predict : MODEL_PREDICT LPAREN variable COMMA variable COMMA RPARENexp : t_exp exp_orexp_or : OR exp\n              | emptyt_exp : expression t_exp_andt_exp_and : AND t_exp\n                 | emptyexpression : m_exp expression_compexpression_comp : expression_comp_2 m_exp\n                       | emptyexpression_comp_2 : EQUAL\n                         | NOTEQUAL\n                         | LTHAN\n                         | GTHANm_exp : term m_exp_srm_exp_sr : m_exp_sr_2 m_exp\n                | emptym_exp_sr_2 : PLUS\n                  | MINUSterm : sub_factor term_pcterm_pc : term_pc_2 term\n               | emptyterm_pc_2 : MULTIPLY\n                 | DIVIDE\n                 | MODULEsub_factor : factor sub_factor_pcsub_factor_pc : sub_factor_pc_2 sub_factor\n                     | emptysub_factor_pc_2 : POWER emptyfactor : factor_exp\n              | factor_cte\n              | variable\n              | call_functionfactor_exp : LPAREN exp RPARENfactor_cte : CTE_FLOAT\n                  | CTE_INT\n                  | CTE_CHAR'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,40,],[0,-1,]),'ID':([2,8,11,13,18,19,20,21,22,23,24,25,26,27,31,32,33,34,35,39,51,55,62,64,67,72,74,75,76,77,78,82,83,90,91,92,93,95,102,103,104,105,106,108,110,113,117,133,152,162,167,169,171,174,176,177,178,179,180,181,183,185,186,187,188,190,192,193,195,197,198,199,201,203,208,211,214,215,217,236,238,240,242,251,254,256,257,260,271,282,286,292,298,309,],[3,14,-13,28,-12,-10,-11,37,37,-17,-18,-14,-15,-16,37,-41,-42,-43,-44,50,-2,37,87,-2,37,87,-81,-82,-83,-84,-85,-71,-72,37,-21,-19,-20,-2,151,-2,151,151,151,151,159,87,-25,151,-61,-2,-57,151,37,151,37,37,37,37,37,37,151,-117,-118,-119,-120,151,-124,-125,151,-129,-130,-131,151,-2,151,151,245,151,87,-135,-65,-77,151,37,37,37,37,37,151,-62,-73,37,-74,37,]),'SEMICOLON':([3,36,37,38,44,45,46,47,49,54,56,57,58,65,66,68,69,85,94,96,98,99,107,109,116,118,120,121,122,123,124,125,126,127,128,129,130,131,134,141,142,143,144,145,146,147,148,149,150,151,165,166,168,170,173,175,182,184,189,191,194,196,200,202,204,206,213,216,221,222,224,225,232,233,234,235,237,240,243,244,252,258,261,263,269,283,284,285,288,290,308,312,319,322,],[4,-2,-2,-2,-2,-24,-3,-2,-30,64,-23,-2,-28,-2,95,-27,-2,-2,-2,-2,-29,-32,-34,-36,-22,-2,-138,167,-58,-59,-60,-2,-86,-87,-88,-89,-90,-91,-2,-2,-2,-2,-2,-136,-137,-139,-141,-142,-143,-2,-2,-31,-108,-110,-111,-113,-114,-116,-121,-123,-126,-128,-132,-134,-3,238,-2,-54,-26,-109,-140,-112,-115,-122,-127,-133,-2,-77,-35,-38,-70,-98,282,-64,286,-63,-37,298,300,-92,-107,-100,-97,-99,]),'FROM':([4,50,],[8,8,]),'VAR':([4,5,7,12,50,51,61,162,],[-2,10,-6,-5,-2,10,-9,10,]),'FUNCTION':([4,5,7,9,11,12,18,19,20,50,61,64,91,92,93,95,117,287,],[-2,-2,-6,16,-13,-5,-12,-10,-11,-2,-9,-2,-21,-19,-20,-2,-25,16,]),'MAIN':([4,5,7,9,11,12,15,17,18,19,20,50,61,64,91,92,93,95,117,287,299,],[-2,-2,-6,-2,-13,-5,30,-40,-12,-10,-11,-2,-9,-2,-21,-19,-20,-2,-25,-2,-39,]),'IMPORT':([4,6,7,14,50,],[-2,13,-8,-7,-2,]),'DATAFRAME':([10,64,95,],[23,23,23,]),'DATE':([10,64,95,],[24,24,24,]),'INT':([10,16,63,64,95,219,],[25,32,25,25,25,25,]),'FLOAT':([10,16,63,64,95,219,],[26,33,26,26,26,26,]),'CHAR':([10,16,63,64,95,219,],[27,34,27,27,27,27,]),'IF':([11,18,19,20,51,62,64,72,74,75,76,77,78,82,83,91,92,93,95,113,117,162,167,217,238,240,282,286,298,],[-13,-12,-10,-11,-2,80,-2,80,-81,-82,-83,-84,-85,-71,-72,-21,-19,-20,-2,80,-25,-2,-57,80,-65,-77,-62,-73,-74,]),'PRINT':([11,18,19,20,51,62,64,72,74,75,76,77,78,82,83,91,92,93,95,113,117,162,167,217,238,240,282,286,298,],[-13,-12,-10,-11,-2,81,-2,81,-81,-82,-83,-84,-85,-71,-72,-21,-19,-20,-2,81,-25,-2,-57,81,-65,-77,-62,-73,-74,]),'FOR':([11,18,19,20,51,62,64,72,74,75,76,77,78,82,83,91,92,93,95,113,117,162,167,217,238,240,282,286,298,],[-13,-12,-10,-11,-2,86,-2,86,-81,-82,-83,-84,-85,-71,-72,-21,-19,-20,-2,86,-25,-2,-57,86,-65,-77,-62,-73,-74,]),'DO':([11,18,19,20,51,62,64,72,74,75,76,77,78,82,83,91,92,93,95,113,117,162,167,217,238,240,282,286,298,],[-13,-12,-10,-11,-2,88,-2,88,-81,-82,-83,-84,-85,-71,-72,-21,-19,-20,-2,88,-25,-2,-57,88,-65,-77,-62,-73,-74,]),'RBRACKET':([11,18,19,20,51,62,64,71,72,73,74,75,76,77,78,82,83,91,92,93,95,101,113,117,161,162,167,217,238,240,250,270,272,282,286,298,300,],[-13,-12,-10,-11,-2,-2,-2,100,-2,-56,-81,-82,-83,-84,-85,-71,-72,-21,-19,-20,-2,-55,-2,-25,216,-2,-57,-2,-65,-77,-2,287,-51,-62,-73,-74,-50,]),'RETURN':([11,18,19,20,64,72,73,74,75,76,77,78,82,83,91,92,93,95,101,117,162,167,217,238,240,250,282,286,298,],[-13,-12,-10,-11,-2,-2,-56,-81,-82,-83,-84,-85,-71,-72,-21,-19,-20,-2,-55,-25,-2,-57,-2,-65,-77,271,-62,-73,-74,]),'VOID':([16,],[35,]),'AS':([28,],[39,]),'END':([29,100,],[40,-52,]),'LBRACKET':([30,41,42,88,114,205,262,267,],[-2,51,-53,113,162,113,113,113,]),'COMMA':([36,37,38,44,45,46,47,49,57,58,65,69,85,94,96,98,99,107,109,115,118,120,125,134,141,142,143,144,145,146,147,148,149,150,151,155,156,157,163,164,165,166,168,170,173,175,182,184,189,191,194,196,200,202,204,213,222,224,225,226,227,228,230,231,232,233,234,235,239,240,241,243,244,248,253,255,268,273,277,278,279,280,281,284,289,294,295,302,307,310,320,321,],[-2,-2,-2,55,-24,-3,-2,-30,67,-28,-2,-2,-2,55,-2,-29,-32,-34,-36,-2,-2,-138,-2,-2,-2,-2,-2,-2,-136,-137,-139,-141,-142,-143,-2,208,-66,211,219,-49,67,-31,-108,-110,-111,-113,-114,-116,-121,-123,-126,-128,-132,-134,-3,-2,-109,-140,-112,254,256,257,259,260,-115,-122,-127,-133,208,-77,211,-35,-38,-2,275,-94,-4,-2,-93,292,293,296,297,-37,219,304,-102,309,313,315,315,-101,]),'LSQBRACKET':([37,38,46,69,85,87,96,111,151,204,213,293,],[-2,48,-3,97,108,-2,48,-3,-2,-3,242,303,]),'LPAREN':([37,43,46,52,53,80,81,84,86,87,102,103,104,105,106,108,111,132,133,135,136,137,138,139,140,151,152,160,169,174,183,185,186,187,188,190,192,193,195,197,198,199,201,203,204,208,211,215,236,242,271,],[-2,-2,-3,63,-45,104,105,106,110,-2,133,-2,133,133,133,133,-78,171,133,176,177,178,179,180,181,-2,-61,215,133,133,133,-117,-118,-119,-120,133,-124,-125,133,-129,-130,-131,133,-2,-78,133,133,133,-135,133,133,]),'RPAREN':([37,46,85,89,107,109,115,120,125,134,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,163,164,168,170,172,173,175,182,184,189,191,194,196,200,202,204,207,209,210,212,213,218,220,222,223,224,225,226,229,232,233,234,235,239,240,241,243,244,245,246,247,248,249,253,255,264,265,268,273,274,276,277,279,284,289,291,294,295,297,301,305,306,311,314,318,321,],[-2,-3,-2,114,-34,-36,-2,-138,-2,-2,-2,-2,-2,-2,-136,-137,-139,-141,-142,-143,-2,205,206,-2,-66,-2,-2,-49,-108,-110,224,-111,-113,-114,-116,-121,-123,-126,-128,-132,-134,-3,-67,-69,240,-80,-2,-46,-48,-109,252,-140,-112,-2,258,-115,-122,-127,-133,-2,-77,-2,-35,-38,-76,267,-75,-2,269,-2,-94,-68,-79,-4,-2,290,-96,-93,-2,-37,-2,-95,-2,-102,308,-47,312,-106,-105,319,322,-101,]),'CTE_INT':([48,97,102,103,104,105,106,108,133,152,169,174,183,185,186,187,188,190,192,193,195,197,198,199,201,203,208,211,214,215,236,242,259,271,275,296,304,313,],[60,60,149,-2,149,149,149,149,149,-61,149,149,149,-117,-118,-119,-120,149,-124,-125,149,-129,-130,-131,149,-2,149,149,248,149,-135,149,248,149,248,248,248,248,]),'RSQBRACKET':([59,60,70,85,107,109,119,120,125,134,141,142,143,144,145,146,147,148,149,150,151,158,168,170,173,175,182,184,189,191,194,196,200,202,204,213,222,224,225,232,233,234,235,240,243,244,266,284,310,316,317,320,323,],[69,-2,-33,-2,-34,-36,166,-138,-2,-2,-2,-2,-2,-2,-136,-137,-139,-141,-142,-143,-2,213,-108,-110,-111,-113,-114,-116,-121,-123,-126,-128,-132,-134,-3,-2,-109,-140,-112,-115,-122,-127,-133,-77,-35,-38,284,-37,-2,321,-104,-2,-103,]),'ASSIGN':([79,85,87,107,109,111,213,243,244,284,],[103,-2,-2,-34,-36,-3,-2,-35,-38,-37,]),'POWER':([85,107,109,120,144,145,146,147,148,149,150,151,204,213,224,240,243,244,284,],[-2,-34,-36,-138,203,-136,-137,-139,-141,-142,-143,-2,-3,-2,-140,-77,-35,-38,-37,]),'MULTIPLY':([85,107,109,120,143,144,145,146,147,148,149,150,151,200,202,204,213,224,235,240,243,244,284,],[-2,-34,-36,-138,197,-2,-136,-137,-139,-141,-142,-143,-2,-132,-134,-3,-2,-140,-133,-77,-35,-38,-37,]),'DIVIDE':([85,107,109,120,143,144,145,146,147,148,149,150,151,200,202,204,213,224,235,240,243,244,284,],[-2,-34,-36,-138,198,-2,-136,-137,-139,-141,-142,-143,-2,-132,-134,-3,-2,-140,-133,-77,-35,-38,-37,]),'MODULE':([85,107,109,120,143,144,145,146,147,148,149,150,151,200,202,204,213,224,235,240,243,244,284,],[-2,-34,-36,-138,199,-2,-136,-137,-139,-141,-142,-143,-2,-132,-134,-3,-2,-140,-133,-77,-35,-38,-37,]),'PLUS':([85,107,109,120,142,143,144,145,146,147,148,149,150,151,194,196,200,202,204,213,224,234,235,240,243,244,284,],[-2,-34,-36,-138,192,-2,-2,-136,-137,-139,-141,-142,-143,-2,-126,-128,-132,-134,-3,-2,-140,-127,-133,-77,-35,-38,-37,]),'MINUS':([85,107,109,120,142,143,144,145,146,147,148,149,150,151,194,196,200,202,204,213,224,234,235,240,243,244,284,],[-2,-34,-36,-138,193,-2,-2,-136,-137,-139,-141,-142,-143,-2,-126,-128,-132,-134,-3,-2,-140,-127,-133,-77,-35,-38,-37,]),'EQUAL':([85,107,109,120,141,142,143,144,145,146,147,148,149,150,151,189,191,194,196,200,202,204,213,224,233,234,235,240,243,244,284,],[-2,-34,-36,-138,185,-2,-2,-2,-136,-137,-139,-141,-142,-143,-2,-121,-123,-126,-128,-132,-134,-3,-2,-140,-122,-127,-133,-77,-35,-38,-37,]),'NOTEQUAL':([85,107,109,120,141,142,143,144,145,146,147,148,149,150,151,189,191,194,196,200,202,204,213,224,233,234,235,240,243,244,284,],[-2,-34,-36,-138,186,-2,-2,-2,-136,-137,-139,-141,-142,-143,-2,-121,-123,-126,-128,-132,-134,-3,-2,-140,-122,-127,-133,-77,-35,-38,-37,]),'LTHAN':([85,107,109,120,141,142,143,144,145,146,147,148,149,150,151,189,191,194,196,200,202,204,213,224,233,234,235,240,243,244,284,],[-2,-34,-36,-138,187,-2,-2,-2,-136,-137,-139,-141,-142,-143,-2,-121,-123,-126,-128,-132,-134,-3,-2,-140,-122,-127,-133,-77,-35,-38,-37,]),'GTHAN':([85,107,109,120,141,142,143,144,145,146,147,148,149,150,151,189,191,194,196,200,202,204,213,224,233,234,235,240,243,244,284,],[-2,-34,-36,-138,188,-2,-2,-2,-136,-137,-139,-141,-142,-143,-2,-121,-123,-126,-128,-132,-134,-3,-2,-140,-122,-127,-133,-77,-35,-38,-37,]),'AND':([85,107,109,120,134,141,142,143,144,145,146,147,148,149,150,151,182,184,189,191,194,196,200,202,204,213,224,232,233,234,235,240,243,244,284,],[-2,-34,-36,-138,174,-2,-2,-2,-2,-136,-137,-139,-141,-142,-143,-2,-114,-116,-121,-123,-126,-128,-132,-134,-3,-2,-140,-115,-122,-127,-133,-77,-35,-38,-37,]),'OR':([85,107,109,120,125,134,141,142,143,144,145,146,147,148,149,150,151,173,175,182,184,189,191,194,196,200,202,204,213,224,225,232,233,234,235,240,243,244,284,],[-2,-34,-36,-138,169,-2,-2,-2,-2,-2,-136,-137,-139,-141,-142,-143,-2,-111,-113,-114,-116,-121,-123,-126,-128,-132,-134,-3,-2,-140,-112,-115,-122,-127,-133,-77,-35,-38,-37,]),'READ':([102,103,152,],[132,-2,-61,]),'EXPLORATION':([102,103,152,],[135,-2,-61,]),'FINANCIAL_STATE':([102,103,152,],[136,-2,-61,]),'DUMMI_REGRESSION':([102,103,152,],[137,-2,-61,]),'SEASON_ANALYSIS':([102,103,152,],[138,-2,-61,]),'TREND_PREDICTION':([102,103,152,],[139,-2,-61,]),'MODEL_PREDICT':([102,103,152,],[140,-2,-61,]),'CTE_FLOAT':([102,103,104,105,106,108,133,152,169,174,183,185,186,187,188,190,192,193,195,197,198,199,201,203,208,211,215,236,242,271,],[148,-2,148,148,148,148,148,-61,148,148,148,-117,-118,-119,-120,148,-124,-125,148,-129,-130,-131,148,-2,148,148,148,-135,148,148,]),'CTE_CHAR':([102,103,104,105,106,108,133,152,169,174,183,185,186,187,188,190,192,193,195,197,198,199,201,203,208,211,215,236,242,271,303,315,],[150,-2,150,150,150,150,150,-61,150,150,150,-117,-118,-119,-120,150,-124,-125,150,-129,-130,-131,150,-2,150,150,150,-135,150,150,310,320,]),'WHILE':([112,216,],[160,-54,]),'TO':([159,],[214,]),'ELSE':([216,237,],[-54,262,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_libraries':([4,50,],[5,61,]),'from_library':([4,50,],[6,6,]),'empty':([4,5,9,30,36,37,38,43,44,47,50,51,57,60,62,64,65,69,72,85,87,94,95,96,103,113,115,118,125,134,141,142,143,144,151,155,157,162,163,165,203,213,217,226,237,239,241,248,250,253,273,279,287,289,294,310,320,],[7,11,17,42,45,46,49,53,56,58,7,11,68,70,73,93,45,99,73,109,111,56,93,49,152,73,164,58,170,175,184,191,196,202,204,209,212,11,220,68,236,244,73,255,263,209,212,268,272,276,164,295,17,220,306,317,317,]),'program_vars':([5,51,162,],[9,62,217,]),'import_library':([6,],[12,]),'program_function':([9,287,],[15,299,]),'var_type':([10,64,95,],[18,92,92,]),'var_c_type':([10,64,95,],[19,19,19,]),'var_s_type':([10,64,95,],[20,20,20,]),'c_type':([10,64,95,],[21,21,21,]),'s_type':([10,63,64,95,219,],[22,90,22,22,251,]),'program_main':([15,],[29,]),'f_type':([16,],[31,]),'id_saver':([21,22,31,55,62,67,72,90,102,104,105,106,108,113,133,169,171,174,176,177,178,179,180,181,183,190,195,201,208,211,215,217,242,251,254,256,257,260,271,292,309,],[36,38,43,65,85,96,85,115,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,273,85,85,85,85,85,85,85,]),'main_id':([30,],[41,]),'add_c_var':([36,65,],[44,94,]),'var_s_array':([38,96,],[47,118,]),'func_creator':([43,],[52,]),'var_c_type2':([44,94,],[54,116,]),'add_s_var':([47,118,],[57,165,]),'var_s_dimesions':([48,97,],[59,119,]),'var_s_type2':([57,165,],[66,221,]),'inner_body':([62,72,113,217,],[71,101,161,250,]),'statement':([62,72,113,217,],[72,72,72,72,]),'assign':([62,72,113,217,],[74,74,74,74,]),'condition':([62,72,113,217,],[75,75,75,75,]),'print':([62,72,113,217,],[76,76,76,76,]),'cycle':([62,72,113,217,],[77,77,77,77,]),'call_function':([62,72,102,104,105,106,108,113,133,169,174,183,190,195,201,208,211,215,217,242,271,],[78,78,147,147,147,147,147,78,147,147,147,147,147,147,147,147,147,147,78,147,147,]),'variable':([62,72,102,104,105,106,108,113,133,169,171,174,176,177,178,179,180,181,183,190,195,201,208,211,215,217,242,254,256,257,260,271,292,309,],[79,79,120,120,120,120,120,79,120,120,223,120,226,227,228,229,230,231,120,120,120,120,120,120,120,79,120,277,278,279,281,120,302,314,]),'for':([62,72,113,217,],[82,82,82,82,]),'while':([62,72,113,217,],[83,83,83,83,]),'test':([62,72,102,104,105,106,108,113,133,169,174,183,190,195,201,208,211,215,217,242,271,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'param':([63,],[89,]),'var_multiple':([64,95,],[91,117,]),'var_s_matrix':([69,],[98,]),'keep_assign':([79,],[102,]),'variable_array':([85,],[107,]),'body':([88,205,262,267,],[112,237,283,285,]),'specialf_assign':([102,],[121,]),'exp':([102,104,105,106,108,133,169,208,211,215,242,271,],[122,153,156,157,158,172,222,156,241,249,266,288,]),'special_function':([102,],[123,]),'read':([102,],[124,]),'t_exp':([102,104,105,106,108,133,169,174,208,211,215,242,271,],[125,125,125,125,125,125,125,225,125,125,125,125,125,]),'exploration':([102,],[126,]),'financial_state':([102,],[127,]),'dummi_regression':([102,],[128,]),'season_analysis':([102,],[129,]),'trend_prediction':([102,],[130,]),'model_predict':([102,],[131,]),'expression':([102,104,105,106,108,133,169,174,208,211,215,242,271,],[134,134,134,134,134,134,134,134,134,134,134,134,134,]),'m_exp':([102,104,105,106,108,133,169,174,183,190,208,211,215,242,271,],[141,141,141,141,141,141,141,141,232,233,141,141,141,141,141,]),'term':([102,104,105,106,108,133,169,174,183,190,195,208,211,215,242,271,],[142,142,142,142,142,142,142,142,142,142,234,142,142,142,142,142,]),'sub_factor':([102,104,105,106,108,133,169,174,183,190,195,201,208,211,215,242,271,],[143,143,143,143,143,143,143,143,143,143,143,235,143,143,143,143,143,]),'factor':([102,104,105,106,108,133,169,174,183,190,195,201,208,211,215,242,271,],[144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,]),'factor_exp':([102,104,105,106,108,133,169,174,183,190,195,201,208,211,215,242,271,],[145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,]),'factor_cte':([102,104,105,106,108,133,169,174,183,190,195,201,208,211,215,242,271,],[146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,]),'print_many':([105,],[154,]),'print_type':([105,208,],[155,239,]),'add_params':([115,273,],[163,289,]),'exp_or':([125,],[168,]),'t_exp_and':([134,],[173,]),'expression_comp':([141,],[182,]),'expression_comp_2':([141,],[183,]),'m_exp_sr':([142,],[189,]),'m_exp_sr_2':([142,],[190,]),'term_pc':([143,],[194,]),'term_pc_2':([143,],[195,]),'sub_factor_pc':([144,],[200,]),'sub_factor_pc_2':([144,],[201,]),'print_many2':([155,239,],[207,264,]),'exp_many':([157,241,],[210,265,]),'param2':([163,289,],[218,301,]),'variable_matrix':([213,],[243,]),'for_end':([214,],[246,]),'int_const_saver':([214,259,275,296,304,313,],[247,280,291,307,311,318,]),'explore_var':([226,],[253,]),'condition2':([237,],[261,]),'return':([250,],[270,]),'explor_cte':([253,],[274,]),'dr_array':([279,],[294,]),'dr_int':([294,],[305,]),'dr_array_mp':([310,320,],[316,323,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON program_libraries program_vars program_function program_main END','program',8,'p_program','parser.py',25),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',30),
  ('id_saver -> ID empty','id_saver',2,'p_id_saver','parser.py',37),
  ('int_const_saver -> CTE_INT empty','int_const_saver',2,'p_int_const_saver','parser.py',45),
  ('program_libraries -> from_library import_library','program_libraries',2,'p_program_libraries','parser.py',52),
  ('program_libraries -> empty','program_libraries',1,'p_program_libraries','parser.py',53),
  ('from_library -> FROM ID','from_library',2,'p_from_library','parser.py',56),
  ('from_library -> empty','from_library',1,'p_from_library','parser.py',57),
  ('import_library -> IMPORT ID AS ID program_libraries','import_library',5,'p_import_library','parser.py',60),
  ('var_type -> var_c_type','var_type',1,'p_var_type','parser.py',65),
  ('var_type -> var_s_type','var_type',1,'p_var_type','parser.py',66),
  ('program_vars -> VAR var_type','program_vars',2,'p_program_vars','parser.py',69),
  ('program_vars -> empty','program_vars',1,'p_program_vars','parser.py',70),
  ('s_type -> INT','s_type',1,'p_s_type','parser.py',80),
  ('s_type -> FLOAT','s_type',1,'p_s_type','parser.py',81),
  ('s_type -> CHAR','s_type',1,'p_s_type','parser.py',82),
  ('c_type -> DATAFRAME','c_type',1,'p_c_type','parser.py',89),
  ('c_type -> DATE','c_type',1,'p_c_type','parser.py',90),
  ('var_multiple -> var_type','var_multiple',1,'p_var_multiple','parser.py',97),
  ('var_multiple -> empty','var_multiple',1,'p_var_multiple','parser.py',98),
  ('var_c_type -> c_type id_saver add_c_var var_c_type2 SEMICOLON var_multiple','var_c_type',6,'p_var_c_type','parser.py',101),
  ('var_c_type2 -> COMMA id_saver add_c_var var_c_type2','var_c_type2',4,'p_var_c_type2','parser.py',104),
  ('var_c_type2 -> empty','var_c_type2',1,'p_var_c_type2','parser.py',105),
  ('add_c_var -> empty','add_c_var',1,'p_add_c_var','parser.py',108),
  ('var_s_type -> s_type id_saver var_s_array add_s_var var_s_type2 SEMICOLON var_multiple','var_s_type',7,'p_var_s_type','parser.py',114),
  ('var_s_type2 -> COMMA id_saver var_s_array add_s_var var_s_type2','var_s_type2',5,'p_var_s_type2','parser.py',117),
  ('var_s_type2 -> empty','var_s_type2',1,'p_var_s_type2','parser.py',118),
  ('add_s_var -> empty','add_s_var',1,'p_add_s_var','parser.py',122),
  ('var_s_array -> LSQBRACKET var_s_dimesions RSQBRACKET var_s_matrix','var_s_array',4,'p_var_s_array','parser.py',130),
  ('var_s_array -> empty','var_s_array',1,'p_var_s_array','parser.py',131),
  ('var_s_matrix -> LSQBRACKET var_s_dimesions RSQBRACKET','var_s_matrix',3,'p_var_s_matrix','parser.py',134),
  ('var_s_matrix -> empty','var_s_matrix',1,'p_var_s_matrix','parser.py',135),
  ('var_s_dimesions -> CTE_INT empty','var_s_dimesions',2,'p_var_s_dimesions','parser.py',139),
  ('variable -> id_saver variable_array','variable',2,'p_variable','parser.py',156),
  ('variable_array -> LSQBRACKET exp RSQBRACKET variable_matrix','variable_array',4,'p_variable_array','parser.py',161),
  ('variable_array -> empty','variable_array',1,'p_variable_array','parser.py',162),
  ('variable_matrix -> LSQBRACKET exp RSQBRACKET','variable_matrix',3,'p_variable_matrix','parser.py',165),
  ('variable_matrix -> empty','variable_matrix',1,'p_variable_matrix','parser.py',166),
  ('program_function -> FUNCTION f_type id_saver func_creator LPAREN param RPAREN LBRACKET program_vars inner_body return RBRACKET program_function','program_function',13,'p_program_function','parser.py',172),
  ('program_function -> empty','program_function',1,'p_program_function','parser.py',173),
  ('f_type -> INT','f_type',1,'p_f_type','parser.py',176),
  ('f_type -> FLOAT','f_type',1,'p_f_type','parser.py',177),
  ('f_type -> CHAR','f_type',1,'p_f_type','parser.py',178),
  ('f_type -> VOID','f_type',1,'p_f_type','parser.py',179),
  ('func_creator -> empty','func_creator',1,'p_func_creator','parser.py',187),
  ('param -> s_type id_saver add_params param2','param',4,'p_param','parser.py',195),
  ('param2 -> COMMA s_type id_saver add_params param2','param2',5,'p_param2','parser.py',198),
  ('param2 -> empty','param2',1,'p_param2','parser.py',199),
  ('add_params -> empty','add_params',1,'p_add_params','parser.py',203),
  ('return -> RETURN exp SEMICOLON','return',3,'p_return','parser.py',210),
  ('return -> empty','return',1,'p_return','parser.py',211),
  ('program_main -> MAIN main_id LBRACKET program_vars inner_body RBRACKET','program_main',6,'p_program_main','parser.py',215),
  ('main_id -> empty','main_id',1,'p_main_id','parser.py',218),
  ('body -> LBRACKET inner_body RBRACKET','body',3,'p_body','parser.py',225),
  ('inner_body -> statement inner_body','inner_body',2,'p_inner_body','parser.py',229),
  ('inner_body -> empty','inner_body',1,'p_inner_body','parser.py',230),
  ('assign -> variable keep_assign specialf_assign SEMICOLON','assign',4,'p_assign','parser.py',235),
  ('specialf_assign -> exp','specialf_assign',1,'p_specialf_assign','parser.py',239),
  ('specialf_assign -> special_function','specialf_assign',1,'p_specialf_assign','parser.py',240),
  ('specialf_assign -> read','specialf_assign',1,'p_specialf_assign','parser.py',241),
  ('keep_assign -> ASSIGN empty','keep_assign',2,'p_keep_assign','parser.py',245),
  ('condition -> IF LPAREN exp RPAREN body condition2 SEMICOLON','condition',7,'p_condition','parser.py',250),
  ('condition2 -> ELSE body','condition2',2,'p_condition2','parser.py',253),
  ('condition2 -> empty','condition2',1,'p_condition2','parser.py',254),
  ('print -> PRINT LPAREN print_many RPAREN SEMICOLON','print',5,'p_print','parser.py',258),
  ('print_type -> exp','print_type',1,'p_print_type','parser.py',262),
  ('print_many -> print_type print_many2','print_many',2,'p_print_many','parser.py',265),
  ('print_many2 -> COMMA print_type print_many2','print_many2',3,'p_print_many2','parser.py',268),
  ('print_many2 -> empty','print_many2',1,'p_print_many2','parser.py',269),
  ('read -> READ LPAREN variable RPAREN','read',4,'p_read','parser.py',275),
  ('cycle -> for','cycle',1,'p_cycle','parser.py',279),
  ('cycle -> while','cycle',1,'p_cycle','parser.py',280),
  ('while -> DO body WHILE LPAREN exp RPAREN SEMICOLON','while',7,'p_while','parser.py',284),
  ('for -> FOR LPAREN ID TO for_end RPAREN body SEMICOLON','for',8,'p_for','parser.py',288),
  ('for_end -> int_const_saver','for_end',1,'p_for_end','parser.py',291),
  ('for_end -> ID','for_end',1,'p_for_end','parser.py',292),
  ('call_function -> test LPAREN exp exp_many RPAREN','call_function',5,'p_call_function','parser.py',297),
  ('test -> ID empty','test',2,'p_test','parser.py',302),
  ('exp_many -> COMMA exp exp_many','exp_many',3,'p_exp_many','parser.py',309),
  ('exp_many -> empty','exp_many',1,'p_exp_many','parser.py',310),
  ('statement -> assign','statement',1,'p_statement','parser.py',314),
  ('statement -> condition','statement',1,'p_statement','parser.py',315),
  ('statement -> print','statement',1,'p_statement','parser.py',316),
  ('statement -> cycle','statement',1,'p_statement','parser.py',317),
  ('statement -> call_function','statement',1,'p_statement','parser.py',318),
  ('special_function -> exploration','special_function',1,'p_special_function','parser.py',322),
  ('special_function -> financial_state','special_function',1,'p_special_function','parser.py',323),
  ('special_function -> dummi_regression','special_function',1,'p_special_function','parser.py',324),
  ('special_function -> season_analysis','special_function',1,'p_special_function','parser.py',325),
  ('special_function -> trend_prediction','special_function',1,'p_special_function','parser.py',326),
  ('special_function -> model_predict','special_function',1,'p_special_function','parser.py',327),
  ('exploration -> EXPLORATION LPAREN variable explore_var explor_cte RPAREN','exploration',6,'p_exploration','parser.py',333),
  ('explore_var -> COMMA variable','explore_var',2,'p_explore_var','parser.py',336),
  ('explore_var -> empty','explore_var',1,'p_explore_var','parser.py',337),
  ('explor_cte -> COMMA int_const_saver','explor_cte',2,'p_explor_cte','parser.py',340),
  ('explor_cte -> empty','explor_cte',1,'p_explor_cte','parser.py',341),
  ('financial_state -> FINANCIAL_STATE LPAREN variable COMMA variable COMMA variable COMMA variable RPAREN','financial_state',10,'p_financial_state','parser.py',345),
  ('season_analysis -> SEASON_ANALYSIS LPAREN variable RPAREN','season_analysis',4,'p_season_analysis','parser.py',349),
  ('trend_prediction -> TREND_PREDICTION LPAREN variable COMMA int_const_saver COMMA int_const_saver COMMA int_const_saver RPAREN','trend_prediction',10,'p_trend_prediction','parser.py',355),
  ('dummi_regression -> DUMMI_REGRESSION LPAREN variable COMMA variable dr_array dr_int RPAREN','dummi_regression',8,'p_dummi_regression','parser.py',359),
  ('dr_array -> COMMA LSQBRACKET CTE_CHAR dr_array_mp RSQBRACKET','dr_array',5,'p_dr_array','parser.py',362),
  ('dr_array -> empty','dr_array',1,'p_dr_array','parser.py',363),
  ('dr_array_mp -> COMMA CTE_CHAR dr_array_mp','dr_array_mp',3,'p_dr_array_mp','parser.py',366),
  ('dr_array_mp -> empty','dr_array_mp',1,'p_dr_array_mp','parser.py',367),
  ('dr_int -> COMMA int_const_saver','dr_int',2,'p_dr_int','parser.py',370),
  ('dr_int -> empty','dr_int',1,'p_dr_int','parser.py',371),
  ('model_predict -> MODEL_PREDICT LPAREN variable COMMA variable COMMA RPAREN','model_predict',7,'p_model_predict','parser.py',375),
  ('exp -> t_exp exp_or','exp',2,'p_exp','parser.py',380),
  ('exp_or -> OR exp','exp_or',2,'p_exp_or','parser.py',383),
  ('exp_or -> empty','exp_or',1,'p_exp_or','parser.py',384),
  ('t_exp -> expression t_exp_and','t_exp',2,'p_t_exp','parser.py',388),
  ('t_exp_and -> AND t_exp','t_exp_and',2,'p_t_exp_and','parser.py',391),
  ('t_exp_and -> empty','t_exp_and',1,'p_t_exp_and','parser.py',392),
  ('expression -> m_exp expression_comp','expression',2,'p_expression','parser.py',396),
  ('expression_comp -> expression_comp_2 m_exp','expression_comp',2,'p_expression_comp','parser.py',399),
  ('expression_comp -> empty','expression_comp',1,'p_expression_comp','parser.py',400),
  ('expression_comp_2 -> EQUAL','expression_comp_2',1,'p_expression_comp_2','parser.py',403),
  ('expression_comp_2 -> NOTEQUAL','expression_comp_2',1,'p_expression_comp_2','parser.py',404),
  ('expression_comp_2 -> LTHAN','expression_comp_2',1,'p_expression_comp_2','parser.py',405),
  ('expression_comp_2 -> GTHAN','expression_comp_2',1,'p_expression_comp_2','parser.py',406),
  ('m_exp -> term m_exp_sr','m_exp',2,'p_m_exp','parser.py',411),
  ('m_exp_sr -> m_exp_sr_2 m_exp','m_exp_sr',2,'p_m_exp_sr','parser.py',415),
  ('m_exp_sr -> empty','m_exp_sr',1,'p_m_exp_sr','parser.py',416),
  ('m_exp_sr_2 -> PLUS','m_exp_sr_2',1,'p_m_exp_sr_2','parser.py',419),
  ('m_exp_sr_2 -> MINUS','m_exp_sr_2',1,'p_m_exp_sr_2','parser.py',420),
  ('term -> sub_factor term_pc','term',2,'p_term','parser.py',426),
  ('term_pc -> term_pc_2 term','term_pc',2,'p_term_pc','parser.py',429),
  ('term_pc -> empty','term_pc',1,'p_term_pc','parser.py',430),
  ('term_pc_2 -> MULTIPLY','term_pc_2',1,'p_term_pc_2','parser.py',433),
  ('term_pc_2 -> DIVIDE','term_pc_2',1,'p_term_pc_2','parser.py',434),
  ('term_pc_2 -> MODULE','term_pc_2',1,'p_term_pc_2','parser.py',435),
  ('sub_factor -> factor sub_factor_pc','sub_factor',2,'p_sub_factor','parser.py',440),
  ('sub_factor_pc -> sub_factor_pc_2 sub_factor','sub_factor_pc',2,'p_sub_factor_pc','parser.py',443),
  ('sub_factor_pc -> empty','sub_factor_pc',1,'p_sub_factor_pc','parser.py',444),
  ('sub_factor_pc_2 -> POWER empty','sub_factor_pc_2',2,'p_sub_factor_pc_2','parser.py',447),
  ('factor -> factor_exp','factor',1,'p_factor','parser.py',453),
  ('factor -> factor_cte','factor',1,'p_factor','parser.py',454),
  ('factor -> variable','factor',1,'p_factor','parser.py',455),
  ('factor -> call_function','factor',1,'p_factor','parser.py',456),
  ('factor_exp -> LPAREN exp RPAREN','factor_exp',3,'p_factor_exp','parser.py',459),
  ('factor_cte -> CTE_FLOAT','factor_cte',1,'p_factor_cte','parser.py',462),
  ('factor_cte -> CTE_INT','factor_cte',1,'p_factor_cte','parser.py',463),
  ('factor_cte -> CTE_CHAR','factor_cte',1,'p_factor_cte','parser.py',464),
]
