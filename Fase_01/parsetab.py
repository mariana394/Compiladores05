
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS ASSIGN CHAR COLON COMMA CTE_CHAR CTE_FLOAT CTE_INT DATAFRAME DATE DIVIDE DO DUMMI_REGRESSION ELSE END EQUAL EXPLORATION FINANCIAL_STATE FLOAT FOR FROM FUNCTION GORE GTHAN ID IF IMPORT INT LBRACKET LORE LPAREN LSQBRACKET LTHAN MAIN MINUS MODEL_PREDICT MODULE MULTIPLY NOTEQUAL OR PLUS POWER PRINT PROGRAM RBRACKET READ RETURN RPAREN RSQBRACKET SEASON_ANALYSIS SEMICOLON TO TREND_PREDICTION VAR VOID WHILEprogram : PROGRAM ID SEMICOLON program_libraries program_vars program_function program_main endend : END emptyempty : id_saver : ID empty int_const_saver : CTE_INT \n                       | emptyrelease_exp : emptyprogram_libraries : from_library import_library \n                         | emptyfrom_library : FROM ID\n                    | emptyimport_library : IMPORT ID AS ID  program_librariesvar_type : var_c_type\n                | var_s_typeprogram_vars : VAR var_type  \n                    | emptys_type : INT \n              | FLOAT\n              | CHARc_type : DATAFRAME\n              | DATEvar_multiple : var_type\n                    | emptyvar_c_type : c_type id_saver add_c_var var_c_type2 SEMICOLON var_multiplevar_c_type2 : COMMA id_saver add_c_var var_c_type2\n                   | emptyadd_c_var : emptyvar_s_type : s_type id_saver var_s_array add_s_var var_s_type2 SEMICOLON var_multiplevar_s_type2 : COMMA id_saver var_s_array add_s_var var_s_type2\n                   | emptyadd_s_var : emptyvar_s_array : LSQBRACKET var_s_dimesions RSQBRACKET var_s_matrix \n                   | emptyvar_s_matrix : LSQBRACKET var_s_dimesions RSQBRACKET\n                    | emptyvar_s_dimesions : CTE_INT emptyvariable : id_saver variable_arrayvariable_array : LSQBRACKET exp RSQBRACKET variable_matrix\n                      | emptyvariable_matrix : LSQBRACKET exp RSQBRACKET\n                       | emptyprogram_function : FUNCTION f_type id_saver func_creator LPAREN param RPAREN LBRACKET program_vars inner_body return RBRACKET program_function\n                        | emptyf_type : INT \n              | FLOAT\n              | CHAR\n              | VOIDfunc_creator : emptyparam : s_type id_saver add_params param2param2 : COMMA s_type id_saver add_params param2\n              | emptyadd_params : emptyreturn : RETURN exp SEMICOLON\n              | emptyprogram_main : MAIN main_id LBRACKET program_vars inner_body RBRACKETmain_id : emptybody : LBRACKET inner_body RBRACKETinner_body :  statement inner_body\n                  | emptyassign : variable keep_assign specialf_assign end_assignspecialf_assign : exp\n                       | special_function\n                       | readkeep_assign : ASSIGN emptyend_assign : SEMICOLON emptycondition : IF LPAREN exp RPAREN condition_GOTOF body condition2 SEMICOLON end_conditioncondition2 : ELSE condition_GOTO body\n                 | emptycondition_GOTOF : emptycondition_GOTO : emptyend_condition : emptyprint : PRINT LPAREN print_many RPAREN SEMICOLON end_print_npprint_type : expprint_many : print_type print_many2 print_many2 : COMMA print_many_np print_many\n                   | emptyprint_many_np : emptyend_print_np : emptyread : READ LPAREN variable RPAREN read_npread_np : emptycycle : for\n             | whilewhile : DO seed body WHILE LPAREN exp RPAREN SEMICOLON gotoVseed : emptygotoV : emptyfor : FOR LPAREN for_control keep_assign exp for_np1 for_end body for_np2for_control : id_saverfor_np1 :  TOfor_end : int_const_saver RPARENfor_np2 : SEMICOLONcall_function : function_saver LPAREN exp exp_many RPAREN function_saver : ID emptyexp_many : COMMA exp exp_many\n                | emptystatement : assign\n                 | condition\n                 | print\n                 | cycle\n                 | call_functionspecial_function : exploration\n                        | financial_state\n                        | dummi_regression\n                        | season_analysis\n                        | trend_prediction\n                        | model_predictexploration : EXPLORATION LPAREN variable explore_var explor_cte RPARENexplore_var : COMMA variable\n                   | emptyexplor_cte : COMMA int_const_saver\n                  | emptyfinancial_state : FINANCIAL_STATE LPAREN variable COMMA variable COMMA variable COMMA variable RPARENseason_analysis : SEASON_ANALYSIS LPAREN variable RPARENtrend_prediction : TREND_PREDICTION LPAREN variable COMMA int_const_saver COMMA int_const_saver COMMA int_const_saver RPARENdummi_regression : DUMMI_REGRESSION LPAREN variable COMMA variable dr_array dr_int RPARENdr_array : COMMA LSQBRACKET CTE_CHAR dr_array_mp RSQBRACKET\n                | emptydr_array_mp : COMMA CTE_CHAR dr_array_mp\n                   | emptydr_int : COMMA int_const_saver\n              | emptymodel_predict : MODEL_PREDICT LPAREN variable COMMA variable COMMA RPARENexp : t_exp release_exp exp_orexp_or : exp_keep_or  exp\n              | emptyexp_keep_or : ORt_exp : expression release_exp t_exp_andt_exp_and : keep_and t_exp\n                 | emptykeep_and : AND expression : m_exp release_exp expression_compexpression_comp :  expression_comp_2  m_exp release_exp\n                       |  emptyexpression_comp_2 : GTHAN\n                         | EQUAL\n                         | NOTEQUAL\n                         | LTHAN\n                         | GORE\n                         | LORE\n                         m_exp : term release_exp m_exp_srm_exp_sr : m_exp_sr_2 m_exp\n                | emptym_exp_sr_2 : PLUS\n                  | MINUSterm : sub_factor release_exp term_pcterm_pc : term_pc_2 term\n               | emptyterm_pc_2 : MULTIPLY\n                 | DIVIDE\n                 | MODULEsub_factor : factor release_exp sub_factor_pcsub_factor_pc : sub_factor_pc_2 sub_factor\n                     | emptysub_factor_pc_2 : POWER emptyfactor : factor_exp\n              | factor_cte\n              | variable\n              | call_functionfactor_exp : false_button exp release_false_buttonfalse_button : LPARENrelease_false_button : RPARENfactor_cte : CTE_FLOAT\n                  | CTE_INT\n                  | CTE_CHAR'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,40,41,52,],[0,-1,-3,-2,]),'ID':([2,8,11,13,18,19,20,21,22,23,24,25,26,27,31,32,33,34,35,39,53,57,64,66,69,74,76,77,78,79,80,84,85,92,93,94,95,97,104,105,106,107,108,110,112,119,135,150,155,165,166,171,172,175,177,178,179,180,181,182,192,195,198,201,206,208,210,213,215,223,225,226,227,228,229,230,232,234,235,237,239,240,241,243,245,250,251,252,253,255,259,262,267,269,270,273,278,280,281,289,317,323,328,339,340,342,343,344,345,346,],[3,14,-16,28,-15,-13,-14,37,37,-20,-21,-17,-18,-19,37,-44,-45,-46,-47,51,-3,37,90,-3,37,90,-95,-96,-97,-98,-99,-81,-82,37,-24,-22,-23,-3,154,-3,154,154,154,154,37,-28,-159,154,-64,90,-3,-60,-3,37,37,37,37,37,37,37,-3,154,154,90,-65,154,-125,154,-129,154,-133,-134,-135,-136,-137,-138,154,-142,-143,154,-147,-148,-149,154,-3,-3,154,-77,-91,154,154,37,37,37,37,37,-153,-72,-78,154,37,-3,-3,-66,-71,-86,-90,-83,-85,37,]),'SEMICOLON':([3,36,37,38,45,46,47,48,50,56,58,59,60,67,68,70,71,87,96,98,100,101,109,111,118,120,122,123,124,125,126,127,128,129,130,131,132,133,136,143,144,145,146,147,148,149,151,152,153,154,169,170,173,174,176,183,184,185,186,188,190,197,205,207,209,212,214,222,224,231,233,236,238,242,244,246,247,253,256,257,260,263,264,265,271,274,275,276,277,279,292,293,304,305,307,308,311,313,315,326,338,341,349,356,359,],[4,-3,-3,-3,-3,-27,-4,-3,-33,66,-26,-3,-31,-3,97,-30,-3,-3,-3,-3,-32,-35,-37,-39,-25,-3,-156,172,-61,-62,-63,-3,-100,-101,-102,-103,-104,-105,-3,-3,-3,-3,-3,-154,-155,-157,-161,-162,-163,-3,-3,-34,-3,-7,-3,-3,-3,-3,-3,-4,250,-3,-29,-122,-124,-126,-128,-130,-132,-139,-141,-144,-146,-150,-152,-158,-160,-91,-38,-41,-57,-123,-3,-127,-112,-3,-140,-145,-151,-3,-79,-80,-131,323,-68,-40,328,330,-106,343,-121,-67,-114,-111,-113,]),'FROM':([4,51,],[8,8,]),'VAR':([4,5,7,12,51,53,63,166,],[-3,10,-9,-8,-3,10,-12,10,]),'FUNCTION':([4,5,7,9,11,12,18,19,20,51,63,66,93,94,95,97,119,312,],[-3,-3,-9,16,-16,-8,-15,-13,-14,-3,-12,-3,-24,-22,-23,-3,-28,16,]),'MAIN':([4,5,7,9,11,12,15,17,18,19,20,51,63,66,93,94,95,97,119,312,329,],[-3,-3,-9,-3,-16,-8,30,-43,-15,-13,-14,-3,-12,-3,-24,-22,-23,-3,-28,-3,-42,]),'IMPORT':([4,6,7,14,51,],[-3,13,-11,-10,-3,]),'DATAFRAME':([10,66,97,],[23,23,23,]),'DATE':([10,66,97,],[24,24,24,]),'INT':([10,16,65,66,97,203,],[25,32,25,25,25,25,]),'FLOAT':([10,16,65,66,97,203,],[26,33,26,26,26,26,]),'CHAR':([10,16,65,66,97,203,],[27,34,27,27,27,27,]),'IF':([11,18,19,20,53,64,66,74,76,77,78,79,80,84,85,93,94,95,97,119,165,166,171,172,201,206,250,253,280,281,323,328,339,340,342,343,344,345,],[-16,-15,-13,-14,-3,82,-3,82,-95,-96,-97,-98,-99,-81,-82,-24,-22,-23,-3,-28,82,-3,-60,-3,82,-65,-3,-91,-72,-78,-3,-3,-66,-71,-86,-90,-83,-85,]),'PRINT':([11,18,19,20,53,64,66,74,76,77,78,79,80,84,85,93,94,95,97,119,165,166,171,172,201,206,250,253,280,281,323,328,339,340,342,343,344,345,],[-16,-15,-13,-14,-3,83,-3,83,-95,-96,-97,-98,-99,-81,-82,-24,-22,-23,-3,-28,83,-3,-60,-3,83,-65,-3,-91,-72,-78,-3,-3,-66,-71,-86,-90,-83,-85,]),'FOR':([11,18,19,20,53,64,66,74,76,77,78,79,80,84,85,93,94,95,97,119,165,166,171,172,201,206,250,253,280,281,323,328,339,340,342,343,344,345,],[-16,-15,-13,-14,-3,88,-3,88,-95,-96,-97,-98,-99,-81,-82,-24,-22,-23,-3,-28,88,-3,-60,-3,88,-65,-3,-91,-72,-78,-3,-3,-66,-71,-86,-90,-83,-85,]),'DO':([11,18,19,20,53,64,66,74,76,77,78,79,80,84,85,93,94,95,97,119,165,166,171,172,201,206,250,253,280,281,323,328,339,340,342,343,344,345,],[-16,-15,-13,-14,-3,89,-3,89,-95,-96,-97,-98,-99,-81,-82,-24,-22,-23,-3,-28,89,-3,-60,-3,89,-65,-3,-91,-72,-78,-3,-3,-66,-71,-86,-90,-83,-85,]),'RBRACKET':([11,18,19,20,53,64,66,73,74,75,76,77,78,79,80,84,85,93,94,95,97,103,119,165,166,171,172,200,201,206,250,253,261,280,281,288,290,323,328,330,339,340,342,343,344,345,],[-16,-15,-13,-14,-3,-3,-3,102,-3,-59,-95,-96,-97,-98,-99,-81,-82,-24,-22,-23,-3,-58,-28,-3,-3,-60,-3,260,-3,-65,-3,-91,-3,-72,-78,312,-54,-3,-3,-53,-66,-71,-86,-90,-83,-85,]),'RETURN':([11,18,19,20,66,74,75,76,77,78,79,80,84,85,93,94,95,97,103,119,166,171,172,201,206,250,253,261,280,281,323,328,339,340,342,343,344,345,],[-16,-15,-13,-14,-3,-3,-59,-95,-96,-97,-98,-99,-81,-82,-24,-22,-23,-3,-58,-28,-3,-60,-3,-3,-65,-3,-91,289,-72,-78,-3,-3,-66,-71,-86,-90,-83,-85,]),'VOID':([16,],[35,]),'AS':([28,],[39,]),'END':([29,102,],[41,-55,]),'LBRACKET':([30,42,43,89,113,114,116,189,248,249,306,309,324,325,327,],[-3,53,-56,-3,165,-84,166,-3,165,-69,-3,165,165,-70,-89,]),'COMMA':([36,37,38,45,46,47,48,50,59,60,67,71,87,96,98,100,101,109,111,117,120,122,127,136,143,144,145,146,147,148,149,151,152,153,154,158,159,160,167,168,169,170,173,174,176,183,184,185,186,188,197,207,209,212,214,216,217,218,220,221,222,224,231,233,236,238,242,244,246,247,253,254,256,257,263,265,266,268,272,274,275,276,277,291,297,298,299,300,301,302,303,304,308,314,319,320,321,332,337,347,357,358,],[-3,-3,-3,57,-27,-4,-3,-33,69,-31,-3,-3,-3,57,-3,-32,-35,-37,-39,-3,-3,-156,-3,-3,-3,-3,-3,-3,-154,-155,-157,-161,-162,-163,-3,192,-73,195,203,-52,69,-34,-3,-7,-3,-3,-3,-3,-3,-4,-3,-122,-124,-126,-128,267,269,270,272,273,-130,-132,-139,-141,-144,-146,-150,-152,-158,-160,-91,195,-38,-41,-123,-127,295,-108,-3,-3,-140,-145,-151,-3,-107,317,318,321,-5,-6,322,-131,-40,203,334,-116,-3,346,350,352,352,-115,]),'LSQBRACKET':([37,38,47,71,87,90,98,115,154,188,197,318,],[-3,49,-4,99,110,-3,49,-4,-3,-4,255,333,]),'LPAREN':([37,44,47,54,55,82,83,86,88,90,104,105,106,107,108,110,115,134,135,137,138,139,140,141,142,150,154,155,188,192,195,198,199,208,210,213,215,223,225,226,227,228,229,230,232,234,235,237,239,240,241,243,245,251,252,255,259,278,289,],[-3,-3,-4,65,-48,106,107,108,112,-3,135,-3,135,135,135,135,-92,175,-159,177,178,179,180,181,182,135,-3,-64,-92,-3,135,135,259,135,-125,135,-129,135,-133,-134,-135,-136,-137,-138,135,-142,-143,135,-147,-148,-149,135,-3,135,-77,135,135,-153,135,]),'RPAREN':([37,47,87,91,109,111,117,122,127,136,143,144,145,146,147,148,149,151,152,153,154,156,157,158,159,160,167,168,173,174,176,183,184,185,186,187,188,191,193,194,196,197,202,204,207,209,211,212,214,216,219,222,224,231,233,236,238,242,244,246,247,253,254,256,257,263,265,266,268,274,275,276,277,282,283,285,286,287,291,294,295,296,297,299,301,302,304,308,310,314,316,319,320,322,331,334,335,336,348,350,351,355,358,],[-3,-4,-3,116,-37,-39,-3,-156,-3,-3,-3,-3,-3,-3,-154,-155,-157,-161,-162,-163,-3,189,190,-3,-73,-3,-3,-52,-3,-7,-3,-3,-3,-3,-3,247,-4,-74,-76,253,-94,-3,-49,-51,-122,-124,264,-126,-128,-3,271,-130,-132,-139,-141,-144,-146,-150,-152,-158,-160,-91,-3,-38,-41,-123,-127,-3,-108,-3,-140,-145,-151,-75,-93,-3,-88,311,-3,315,-3,-110,-107,-3,-5,-6,-131,-40,327,-3,-109,-3,-116,338,-50,-3,349,-120,-119,-3,356,359,-115,]),'ASSIGN':([37,47,81,87,90,109,111,115,162,163,197,256,257,308,],[-3,-4,105,-3,-3,-37,-39,-4,105,-87,-3,-38,-41,-40,]),'CTE_INT':([49,99,104,105,106,107,108,110,135,150,155,192,195,198,208,210,213,215,223,225,226,227,228,229,230,232,234,235,237,239,240,241,243,245,251,252,255,259,272,278,285,286,289,295,321,334,350,],[62,62,152,-3,152,152,152,152,-159,152,-64,-3,152,152,152,-125,152,-129,152,-133,-134,-135,-136,-137,-138,152,-142,-143,152,-147,-148,-149,152,-3,152,-77,152,152,301,-153,301,-88,152,301,301,301,301,]),'RSQBRACKET':([61,62,72,87,109,111,121,122,127,136,143,144,145,146,147,148,149,151,152,153,154,161,173,174,176,183,184,185,186,188,197,207,209,212,214,222,224,231,233,236,238,242,244,246,247,253,256,257,263,265,274,275,276,277,284,304,308,347,353,354,357,360,],[71,-3,-36,-3,-37,-39,170,-156,-3,-3,-3,-3,-3,-3,-154,-155,-157,-161,-162,-163,-3,197,-3,-7,-3,-3,-3,-3,-3,-4,-3,-122,-124,-126,-128,-130,-132,-139,-141,-144,-146,-150,-152,-158,-160,-91,-38,-41,-123,-127,-3,-140,-145,-151,308,-131,-40,-3,358,-118,-3,-117,]),'POWER':([87,109,111,122,146,147,148,149,151,152,153,154,174,186,188,197,246,247,253,256,257,308,],[-3,-37,-39,-156,-3,-154,-155,-157,-161,-162,-163,-3,-7,245,-4,-3,-158,-160,-91,-38,-41,-40,]),'MULTIPLY':([87,109,111,122,145,146,147,148,149,151,152,153,154,174,185,186,188,197,242,244,246,247,253,256,257,277,308,],[-3,-37,-39,-156,-3,-3,-154,-155,-157,-161,-162,-163,-3,-7,239,-3,-4,-3,-150,-152,-158,-160,-91,-38,-41,-151,-40,]),'DIVIDE':([87,109,111,122,145,146,147,148,149,151,152,153,154,174,185,186,188,197,242,244,246,247,253,256,257,277,308,],[-3,-37,-39,-156,-3,-3,-154,-155,-157,-161,-162,-163,-3,-7,240,-3,-4,-3,-150,-152,-158,-160,-91,-38,-41,-151,-40,]),'MODULE':([87,109,111,122,145,146,147,148,149,151,152,153,154,174,185,186,188,197,242,244,246,247,253,256,257,277,308,],[-3,-37,-39,-156,-3,-3,-154,-155,-157,-161,-162,-163,-3,-7,241,-3,-4,-3,-150,-152,-158,-160,-91,-38,-41,-151,-40,]),'PLUS':([87,109,111,122,144,145,146,147,148,149,151,152,153,154,174,184,185,186,188,197,236,238,242,244,246,247,253,256,257,276,277,308,],[-3,-37,-39,-156,-3,-3,-3,-154,-155,-157,-161,-162,-163,-3,-7,234,-3,-3,-4,-3,-144,-146,-150,-152,-158,-160,-91,-38,-41,-145,-151,-40,]),'MINUS':([87,109,111,122,144,145,146,147,148,149,151,152,153,154,174,184,185,186,188,197,236,238,242,244,246,247,253,256,257,276,277,308,],[-3,-37,-39,-156,-3,-3,-3,-154,-155,-157,-161,-162,-163,-3,-7,235,-3,-3,-4,-3,-144,-146,-150,-152,-158,-160,-91,-38,-41,-145,-151,-40,]),'GTHAN':([87,109,111,122,143,144,145,146,147,148,149,151,152,153,154,174,183,184,185,186,188,197,231,233,236,238,242,244,246,247,253,256,257,275,276,277,308,],[-3,-37,-39,-156,-3,-3,-3,-3,-154,-155,-157,-161,-162,-163,-3,-7,225,-3,-3,-3,-4,-3,-139,-141,-144,-146,-150,-152,-158,-160,-91,-38,-41,-140,-145,-151,-40,]),'EQUAL':([87,109,111,122,143,144,145,146,147,148,149,151,152,153,154,174,183,184,185,186,188,197,231,233,236,238,242,244,246,247,253,256,257,275,276,277,308,],[-3,-37,-39,-156,-3,-3,-3,-3,-154,-155,-157,-161,-162,-163,-3,-7,226,-3,-3,-3,-4,-3,-139,-141,-144,-146,-150,-152,-158,-160,-91,-38,-41,-140,-145,-151,-40,]),'NOTEQUAL':([87,109,111,122,143,144,145,146,147,148,149,151,152,153,154,174,183,184,185,186,188,197,231,233,236,238,242,244,246,247,253,256,257,275,276,277,308,],[-3,-37,-39,-156,-3,-3,-3,-3,-154,-155,-157,-161,-162,-163,-3,-7,227,-3,-3,-3,-4,-3,-139,-141,-144,-146,-150,-152,-158,-160,-91,-38,-41,-140,-145,-151,-40,]),'LTHAN':([87,109,111,122,143,144,145,146,147,148,149,151,152,153,154,174,183,184,185,186,188,197,231,233,236,238,242,244,246,247,253,256,257,275,276,277,308,],[-3,-37,-39,-156,-3,-3,-3,-3,-154,-155,-157,-161,-162,-163,-3,-7,228,-3,-3,-3,-4,-3,-139,-141,-144,-146,-150,-152,-158,-160,-91,-38,-41,-140,-145,-151,-40,]),'GORE':([87,109,111,122,143,144,145,146,147,148,149,151,152,153,154,174,183,184,185,186,188,197,231,233,236,238,242,244,246,247,253,256,257,275,276,277,308,],[-3,-37,-39,-156,-3,-3,-3,-3,-154,-155,-157,-161,-162,-163,-3,-7,229,-3,-3,-3,-4,-3,-139,-141,-144,-146,-150,-152,-158,-160,-91,-38,-41,-140,-145,-151,-40,]),'LORE':([87,109,111,122,143,144,145,146,147,148,149,151,152,153,154,174,183,184,185,186,188,197,231,233,236,238,242,244,246,247,253,256,257,275,276,277,308,],[-3,-37,-39,-156,-3,-3,-3,-3,-154,-155,-157,-161,-162,-163,-3,-7,230,-3,-3,-3,-4,-3,-139,-141,-144,-146,-150,-152,-158,-160,-91,-38,-41,-140,-145,-151,-40,]),'AND':([87,109,111,122,136,143,144,145,146,147,148,149,151,152,153,154,174,176,183,184,185,186,188,197,222,224,231,233,236,238,242,244,246,247,253,256,257,274,275,276,277,304,308,],[-3,-37,-39,-156,-3,-3,-3,-3,-3,-154,-155,-157,-161,-162,-163,-3,-7,215,-3,-3,-3,-3,-4,-3,-130,-132,-139,-141,-144,-146,-150,-152,-158,-160,-91,-38,-41,-3,-140,-145,-151,-131,-40,]),'OR':([87,109,111,122,127,136,143,144,145,146,147,148,149,151,152,153,154,173,174,176,183,184,185,186,188,197,212,214,222,224,231,233,236,238,242,244,246,247,253,256,257,265,274,275,276,277,304,308,],[-3,-37,-39,-156,-3,-3,-3,-3,-3,-3,-154,-155,-157,-161,-162,-163,-3,210,-7,-3,-3,-3,-3,-3,-4,-3,-126,-128,-130,-132,-139,-141,-144,-146,-150,-152,-158,-160,-91,-38,-41,-127,-3,-140,-145,-151,-131,-40,]),'TO':([87,109,111,122,127,136,143,144,145,146,147,148,149,151,152,153,154,173,174,176,183,184,185,186,188,197,207,209,212,214,222,224,231,233,236,238,242,244,246,247,253,256,257,258,263,265,274,275,276,277,304,308,],[-3,-37,-39,-156,-3,-3,-3,-3,-3,-3,-154,-155,-157,-161,-162,-163,-3,-3,-7,-3,-3,-3,-3,-3,-4,-3,-122,-124,-126,-128,-130,-132,-139,-141,-144,-146,-150,-152,-158,-160,-91,-38,-41,286,-123,-127,-3,-140,-145,-151,-131,-40,]),'READ':([104,105,155,],[134,-3,-64,]),'EXPLORATION':([104,105,155,],[137,-3,-64,]),'FINANCIAL_STATE':([104,105,155,],[138,-3,-64,]),'DUMMI_REGRESSION':([104,105,155,],[139,-3,-64,]),'SEASON_ANALYSIS':([104,105,155,],[140,-3,-64,]),'TREND_PREDICTION':([104,105,155,],[141,-3,-64,]),'MODEL_PREDICT':([104,105,155,],[142,-3,-64,]),'CTE_FLOAT':([104,105,106,107,108,110,135,150,155,192,195,198,208,210,213,215,223,225,226,227,228,229,230,232,234,235,237,239,240,241,243,245,251,252,255,259,278,289,],[151,-3,151,151,151,151,-159,151,-64,-3,151,151,151,-125,151,-129,151,-133,-134,-135,-136,-137,-138,151,-142,-143,151,-147,-148,-149,151,-3,151,-77,151,151,-153,151,]),'CTE_CHAR':([104,105,106,107,108,110,135,150,155,192,195,198,208,210,213,215,223,225,226,227,228,229,230,232,234,235,237,239,240,241,243,245,251,252,255,259,278,289,333,352,],[153,-3,153,153,153,153,-159,153,-64,-3,153,153,153,-125,153,-129,153,-133,-134,-135,-136,-137,-138,153,-142,-143,153,-147,-148,-149,153,-3,153,-77,153,153,-153,153,347,357,]),'WHILE':([164,260,],[199,-57,]),'ELSE':([260,279,],[-57,306,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_libraries':([4,51,],[5,63,]),'from_library':([4,51,],[6,6,]),'empty':([4,5,9,30,36,37,38,41,44,45,48,51,53,59,62,64,66,67,71,74,87,89,90,96,97,98,105,117,120,127,136,143,144,145,146,154,158,160,165,166,167,169,172,173,176,183,184,185,186,189,192,197,201,216,245,250,254,261,264,266,272,274,279,285,291,295,299,306,312,314,319,321,323,328,334,347,350,357,],[7,11,17,43,46,47,50,52,55,58,60,7,11,70,72,75,95,46,101,75,111,114,115,58,95,50,155,168,60,174,174,174,174,174,174,188,193,196,75,11,204,70,206,209,214,224,233,238,244,249,252,257,75,268,278,281,196,290,293,296,302,174,307,302,168,302,320,325,17,204,336,302,340,345,302,354,302,354,]),'program_vars':([5,53,166,],[9,64,201,]),'import_library':([6,],[12,]),'program_function':([9,312,],[15,329,]),'var_type':([10,66,97,],[18,94,94,]),'var_c_type':([10,66,97,],[19,19,19,]),'var_s_type':([10,66,97,],[20,20,20,]),'c_type':([10,66,97,],[21,21,21,]),'s_type':([10,65,66,97,203,],[22,92,22,22,262,]),'program_main':([15,],[29,]),'f_type':([16,],[31,]),'id_saver':([21,22,31,57,64,69,74,92,104,106,107,108,110,112,150,165,175,177,178,179,180,181,182,195,198,201,208,213,223,232,237,243,251,255,259,262,267,269,270,273,289,317,346,],[36,38,44,67,87,98,87,117,87,87,87,87,87,163,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,291,87,87,87,87,87,87,87,]),'end':([29,],[40,]),'main_id':([30,],[42,]),'add_c_var':([36,67,],[45,96,]),'var_s_array':([38,98,],[48,120,]),'func_creator':([44,],[54,]),'var_c_type2':([45,96,],[56,118,]),'add_s_var':([48,120,],[59,169,]),'var_s_dimesions':([49,99,],[61,121,]),'var_s_type2':([59,169,],[68,205,]),'inner_body':([64,74,165,201,],[73,103,200,261,]),'statement':([64,74,165,201,],[74,74,74,74,]),'assign':([64,74,165,201,],[76,76,76,76,]),'condition':([64,74,165,201,],[77,77,77,77,]),'print':([64,74,165,201,],[78,78,78,78,]),'cycle':([64,74,165,201,],[79,79,79,79,]),'call_function':([64,74,104,106,107,108,110,150,165,195,198,201,208,213,223,232,237,243,251,255,259,289,],[80,80,149,149,149,149,149,149,80,149,149,80,149,149,149,149,149,149,149,149,149,149,]),'variable':([64,74,104,106,107,108,110,150,165,175,177,178,179,180,181,182,195,198,201,208,213,223,232,237,243,251,255,259,267,269,270,273,289,317,346,],[81,81,122,122,122,122,122,122,81,211,216,217,218,219,220,221,122,122,81,122,122,122,122,122,122,122,122,122,297,298,299,303,122,332,351,]),'for':([64,74,165,201,],[84,84,84,84,]),'while':([64,74,165,201,],[85,85,85,85,]),'function_saver':([64,74,104,106,107,108,110,150,165,195,198,201,208,213,223,232,237,243,251,255,259,289,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'param':([65,],[91,]),'var_multiple':([66,97,],[93,119,]),'var_s_matrix':([71,],[100,]),'keep_assign':([81,162,],[104,198,]),'variable_array':([87,],[109,]),'seed':([89,],[113,]),'specialf_assign':([104,],[123,]),'exp':([104,106,107,108,110,150,195,198,208,251,255,259,289,],[124,156,159,160,161,187,254,258,263,159,284,287,313,]),'special_function':([104,],[125,]),'read':([104,],[126,]),'t_exp':([104,106,107,108,110,150,195,198,208,213,251,255,259,289,],[127,127,127,127,127,127,127,127,127,265,127,127,127,127,]),'exploration':([104,],[128,]),'financial_state':([104,],[129,]),'dummi_regression':([104,],[130,]),'season_analysis':([104,],[131,]),'trend_prediction':([104,],[132,]),'model_predict':([104,],[133,]),'expression':([104,106,107,108,110,150,195,198,208,213,251,255,259,289,],[136,136,136,136,136,136,136,136,136,136,136,136,136,136,]),'m_exp':([104,106,107,108,110,150,195,198,208,213,223,232,251,255,259,289,],[143,143,143,143,143,143,143,143,143,143,274,275,143,143,143,143,]),'term':([104,106,107,108,110,150,195,198,208,213,223,232,237,251,255,259,289,],[144,144,144,144,144,144,144,144,144,144,144,144,276,144,144,144,144,]),'sub_factor':([104,106,107,108,110,150,195,198,208,213,223,232,237,243,251,255,259,289,],[145,145,145,145,145,145,145,145,145,145,145,145,145,277,145,145,145,145,]),'factor':([104,106,107,108,110,150,195,198,208,213,223,232,237,243,251,255,259,289,],[146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,]),'factor_exp':([104,106,107,108,110,150,195,198,208,213,223,232,237,243,251,255,259,289,],[147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,]),'factor_cte':([104,106,107,108,110,150,195,198,208,213,223,232,237,243,251,255,259,289,],[148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,]),'false_button':([104,106,107,108,110,150,195,198,208,213,223,232,237,243,251,255,259,289,],[150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,]),'print_many':([107,251,],[157,282,]),'print_type':([107,251,],[158,158,]),'for_control':([112,],[162,]),'body':([113,248,309,324,],[164,279,326,341,]),'add_params':([117,291,],[167,314,]),'end_assign':([123,],[171,]),'release_exp':([127,136,143,144,145,146,274,],[173,176,183,184,185,186,304,]),'print_many2':([158,],[191,]),'exp_many':([160,254,],[194,283,]),'param2':([167,314,],[202,331,]),'exp_or':([173,],[207,]),'exp_keep_or':([173,],[208,]),'t_exp_and':([176,],[212,]),'keep_and':([176,],[213,]),'expression_comp':([183,],[222,]),'expression_comp_2':([183,],[223,]),'m_exp_sr':([184,],[231,]),'m_exp_sr_2':([184,],[232,]),'term_pc':([185,],[236,]),'term_pc_2':([185,],[237,]),'sub_factor_pc':([186,],[242,]),'sub_factor_pc_2':([186,],[243,]),'release_false_button':([187,],[246,]),'condition_GOTOF':([189,],[248,]),'print_many_np':([192,],[251,]),'variable_matrix':([197,],[256,]),'explore_var':([216,],[266,]),'end_print_np':([250,],[280,]),'for_np1':([258,],[285,]),'return':([261,],[288,]),'read_np':([264,],[292,]),'explor_cte':([266,],[294,]),'int_const_saver':([272,285,295,321,334,350,],[300,310,316,337,348,355,]),'condition2':([279,],[305,]),'for_end':([285,],[309,]),'dr_array':([299,],[319,]),'condition_GOTO':([306,],[324,]),'dr_int':([319,],[335,]),'end_condition':([323,],[339,]),'for_np2':([326,],[342,]),'gotoV':([328,],[344,]),'dr_array_mp':([347,357,],[353,360,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON program_libraries program_vars program_function program_main end','program',8,'p_program','parser.py',34),
  ('end -> END empty','end',2,'p_end','parser.py',38),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',42),
  ('id_saver -> ID empty','id_saver',2,'p_id_saver','parser.py',49),
  ('int_const_saver -> CTE_INT','int_const_saver',1,'p_int_const_saver','parser.py',57),
  ('int_const_saver -> empty','int_const_saver',1,'p_int_const_saver','parser.py',58),
  ('release_exp -> empty','release_exp',1,'p_release_exp','parser.py',66),
  ('program_libraries -> from_library import_library','program_libraries',2,'p_program_libraries','parser.py',75),
  ('program_libraries -> empty','program_libraries',1,'p_program_libraries','parser.py',76),
  ('from_library -> FROM ID','from_library',2,'p_from_library','parser.py',79),
  ('from_library -> empty','from_library',1,'p_from_library','parser.py',80),
  ('import_library -> IMPORT ID AS ID program_libraries','import_library',5,'p_import_library','parser.py',83),
  ('var_type -> var_c_type','var_type',1,'p_var_type','parser.py',88),
  ('var_type -> var_s_type','var_type',1,'p_var_type','parser.py',89),
  ('program_vars -> VAR var_type','program_vars',2,'p_program_vars','parser.py',92),
  ('program_vars -> empty','program_vars',1,'p_program_vars','parser.py',93),
  ('s_type -> INT','s_type',1,'p_s_type','parser.py',103),
  ('s_type -> FLOAT','s_type',1,'p_s_type','parser.py',104),
  ('s_type -> CHAR','s_type',1,'p_s_type','parser.py',105),
  ('c_type -> DATAFRAME','c_type',1,'p_c_type','parser.py',112),
  ('c_type -> DATE','c_type',1,'p_c_type','parser.py',113),
  ('var_multiple -> var_type','var_multiple',1,'p_var_multiple','parser.py',120),
  ('var_multiple -> empty','var_multiple',1,'p_var_multiple','parser.py',121),
  ('var_c_type -> c_type id_saver add_c_var var_c_type2 SEMICOLON var_multiple','var_c_type',6,'p_var_c_type','parser.py',124),
  ('var_c_type2 -> COMMA id_saver add_c_var var_c_type2','var_c_type2',4,'p_var_c_type2','parser.py',127),
  ('var_c_type2 -> empty','var_c_type2',1,'p_var_c_type2','parser.py',128),
  ('add_c_var -> empty','add_c_var',1,'p_add_c_var','parser.py',131),
  ('var_s_type -> s_type id_saver var_s_array add_s_var var_s_type2 SEMICOLON var_multiple','var_s_type',7,'p_var_s_type','parser.py',137),
  ('var_s_type2 -> COMMA id_saver var_s_array add_s_var var_s_type2','var_s_type2',5,'p_var_s_type2','parser.py',140),
  ('var_s_type2 -> empty','var_s_type2',1,'p_var_s_type2','parser.py',141),
  ('add_s_var -> empty','add_s_var',1,'p_add_s_var','parser.py',145),
  ('var_s_array -> LSQBRACKET var_s_dimesions RSQBRACKET var_s_matrix','var_s_array',4,'p_var_s_array','parser.py',153),
  ('var_s_array -> empty','var_s_array',1,'p_var_s_array','parser.py',154),
  ('var_s_matrix -> LSQBRACKET var_s_dimesions RSQBRACKET','var_s_matrix',3,'p_var_s_matrix','parser.py',157),
  ('var_s_matrix -> empty','var_s_matrix',1,'p_var_s_matrix','parser.py',158),
  ('var_s_dimesions -> CTE_INT empty','var_s_dimesions',2,'p_var_s_dimesions','parser.py',162),
  ('variable -> id_saver variable_array','variable',2,'p_variable','parser.py',179),
  ('variable_array -> LSQBRACKET exp RSQBRACKET variable_matrix','variable_array',4,'p_variable_array','parser.py',189),
  ('variable_array -> empty','variable_array',1,'p_variable_array','parser.py',190),
  ('variable_matrix -> LSQBRACKET exp RSQBRACKET','variable_matrix',3,'p_variable_matrix','parser.py',193),
  ('variable_matrix -> empty','variable_matrix',1,'p_variable_matrix','parser.py',194),
  ('program_function -> FUNCTION f_type id_saver func_creator LPAREN param RPAREN LBRACKET program_vars inner_body return RBRACKET program_function','program_function',13,'p_program_function','parser.py',200),
  ('program_function -> empty','program_function',1,'p_program_function','parser.py',201),
  ('f_type -> INT','f_type',1,'p_f_type','parser.py',206),
  ('f_type -> FLOAT','f_type',1,'p_f_type','parser.py',207),
  ('f_type -> CHAR','f_type',1,'p_f_type','parser.py',208),
  ('f_type -> VOID','f_type',1,'p_f_type','parser.py',209),
  ('func_creator -> empty','func_creator',1,'p_func_creator','parser.py',217),
  ('param -> s_type id_saver add_params param2','param',4,'p_param','parser.py',225),
  ('param2 -> COMMA s_type id_saver add_params param2','param2',5,'p_param2','parser.py',228),
  ('param2 -> empty','param2',1,'p_param2','parser.py',229),
  ('add_params -> empty','add_params',1,'p_add_params','parser.py',233),
  ('return -> RETURN exp SEMICOLON','return',3,'p_return','parser.py',240),
  ('return -> empty','return',1,'p_return','parser.py',241),
  ('program_main -> MAIN main_id LBRACKET program_vars inner_body RBRACKET','program_main',6,'p_program_main','parser.py',245),
  ('main_id -> empty','main_id',1,'p_main_id','parser.py',248),
  ('body -> LBRACKET inner_body RBRACKET','body',3,'p_body','parser.py',255),
  ('inner_body -> statement inner_body','inner_body',2,'p_inner_body','parser.py',259),
  ('inner_body -> empty','inner_body',1,'p_inner_body','parser.py',260),
  ('assign -> variable keep_assign specialf_assign end_assign','assign',4,'p_assign','parser.py',265),
  ('specialf_assign -> exp','specialf_assign',1,'p_specialf_assign','parser.py',271),
  ('specialf_assign -> special_function','specialf_assign',1,'p_specialf_assign','parser.py',272),
  ('specialf_assign -> read','specialf_assign',1,'p_specialf_assign','parser.py',273),
  ('keep_assign -> ASSIGN empty','keep_assign',2,'p_keep_assign','parser.py',277),
  ('end_assign -> SEMICOLON empty','end_assign',2,'p_end_assign','parser.py',293),
  ('condition -> IF LPAREN exp RPAREN condition_GOTOF body condition2 SEMICOLON end_condition','condition',9,'p_condition','parser.py',298),
  ('condition2 -> ELSE condition_GOTO body','condition2',3,'p_condition2','parser.py',301),
  ('condition2 -> empty','condition2',1,'p_condition2','parser.py',302),
  ('condition_GOTOF -> empty','condition_GOTOF',1,'p_condition_GOTOF','parser.py',306),
  ('condition_GOTO -> empty','condition_GOTO',1,'p_condition_GOTO','parser.py',313),
  ('end_condition -> empty','end_condition',1,'p_end_condition','parser.py',318),
  ('print -> PRINT LPAREN print_many RPAREN SEMICOLON end_print_np','print',6,'p_print','parser.py',327),
  ('print_type -> exp','print_type',1,'p_print_type','parser.py',330),
  ('print_many -> print_type print_many2','print_many',2,'p_print_many','parser.py',333),
  ('print_many2 -> COMMA print_many_np print_many','print_many2',3,'p_print_many2','parser.py',336),
  ('print_many2 -> empty','print_many2',1,'p_print_many2','parser.py',337),
  ('print_many_np -> empty','print_many_np',1,'p_print_many_np','parser.py',340),
  ('end_print_np -> empty','end_print_np',1,'p_end_print_np','parser.py',344),
  ('read -> READ LPAREN variable RPAREN read_np','read',5,'p_read','parser.py',350),
  ('read_np -> empty','read_np',1,'p_read_np','parser.py',353),
  ('cycle -> for','cycle',1,'p_cycle','parser.py',357),
  ('cycle -> while','cycle',1,'p_cycle','parser.py',358),
  ('while -> DO seed body WHILE LPAREN exp RPAREN SEMICOLON gotoV','while',9,'p_while','parser.py',362),
  ('seed -> empty','seed',1,'p_seed','parser.py',366),
  ('gotoV -> empty','gotoV',1,'p_gotoV','parser.py',371),
  ('for -> FOR LPAREN for_control keep_assign exp for_np1 for_end body for_np2','for',9,'p_for','parser.py',377),
  ('for_control -> id_saver','for_control',1,'p_for_control','parser.py',380),
  ('for_np1 -> TO','for_np1',1,'p_for_np1','parser.py',389),
  ('for_end -> int_const_saver RPAREN','for_end',2,'p_for_end','parser.py',396),
  ('for_np2 -> SEMICOLON','for_np2',1,'p_for_np2','parser.py',404),
  ('call_function -> function_saver LPAREN exp exp_many RPAREN','call_function',5,'p_call_function','parser.py',450),
  ('function_saver -> ID empty','function_saver',2,'p_function_saver','parser.py',455),
  ('exp_many -> COMMA exp exp_many','exp_many',3,'p_exp_many','parser.py',462),
  ('exp_many -> empty','exp_many',1,'p_exp_many','parser.py',463),
  ('statement -> assign','statement',1,'p_statement','parser.py',467),
  ('statement -> condition','statement',1,'p_statement','parser.py',468),
  ('statement -> print','statement',1,'p_statement','parser.py',469),
  ('statement -> cycle','statement',1,'p_statement','parser.py',470),
  ('statement -> call_function','statement',1,'p_statement','parser.py',471),
  ('special_function -> exploration','special_function',1,'p_special_function','parser.py',475),
  ('special_function -> financial_state','special_function',1,'p_special_function','parser.py',476),
  ('special_function -> dummi_regression','special_function',1,'p_special_function','parser.py',477),
  ('special_function -> season_analysis','special_function',1,'p_special_function','parser.py',478),
  ('special_function -> trend_prediction','special_function',1,'p_special_function','parser.py',479),
  ('special_function -> model_predict','special_function',1,'p_special_function','parser.py',480),
  ('exploration -> EXPLORATION LPAREN variable explore_var explor_cte RPAREN','exploration',6,'p_exploration','parser.py',486),
  ('explore_var -> COMMA variable','explore_var',2,'p_explore_var','parser.py',489),
  ('explore_var -> empty','explore_var',1,'p_explore_var','parser.py',490),
  ('explor_cte -> COMMA int_const_saver','explor_cte',2,'p_explor_cte','parser.py',493),
  ('explor_cte -> empty','explor_cte',1,'p_explor_cte','parser.py',494),
  ('financial_state -> FINANCIAL_STATE LPAREN variable COMMA variable COMMA variable COMMA variable RPAREN','financial_state',10,'p_financial_state','parser.py',498),
  ('season_analysis -> SEASON_ANALYSIS LPAREN variable RPAREN','season_analysis',4,'p_season_analysis','parser.py',502),
  ('trend_prediction -> TREND_PREDICTION LPAREN variable COMMA int_const_saver COMMA int_const_saver COMMA int_const_saver RPAREN','trend_prediction',10,'p_trend_prediction','parser.py',508),
  ('dummi_regression -> DUMMI_REGRESSION LPAREN variable COMMA variable dr_array dr_int RPAREN','dummi_regression',8,'p_dummi_regression','parser.py',512),
  ('dr_array -> COMMA LSQBRACKET CTE_CHAR dr_array_mp RSQBRACKET','dr_array',5,'p_dr_array','parser.py',515),
  ('dr_array -> empty','dr_array',1,'p_dr_array','parser.py',516),
  ('dr_array_mp -> COMMA CTE_CHAR dr_array_mp','dr_array_mp',3,'p_dr_array_mp','parser.py',519),
  ('dr_array_mp -> empty','dr_array_mp',1,'p_dr_array_mp','parser.py',520),
  ('dr_int -> COMMA int_const_saver','dr_int',2,'p_dr_int','parser.py',523),
  ('dr_int -> empty','dr_int',1,'p_dr_int','parser.py',524),
  ('model_predict -> MODEL_PREDICT LPAREN variable COMMA variable COMMA RPAREN','model_predict',7,'p_model_predict','parser.py',528),
  ('exp -> t_exp release_exp exp_or','exp',3,'p_exp','parser.py',533),
  ('exp_or -> exp_keep_or exp','exp_or',2,'p_exp_or','parser.py',537),
  ('exp_or -> empty','exp_or',1,'p_exp_or','parser.py',538),
  ('exp_keep_or -> OR','exp_keep_or',1,'p_exp_keep_or','parser.py',541),
  ('t_exp -> expression release_exp t_exp_and','t_exp',3,'p_t_exp','parser.py',549),
  ('t_exp_and -> keep_and t_exp','t_exp_and',2,'p_t_exp_and','parser.py',554),
  ('t_exp_and -> empty','t_exp_and',1,'p_t_exp_and','parser.py',555),
  ('keep_and -> AND','keep_and',1,'p_keep_and','parser.py',558),
  ('expression -> m_exp release_exp expression_comp','expression',3,'p_expression','parser.py',566),
  ('expression_comp -> expression_comp_2 m_exp release_exp','expression_comp',3,'p_expression_comp','parser.py',572),
  ('expression_comp -> empty','expression_comp',1,'p_expression_comp','parser.py',573),
  ('expression_comp_2 -> GTHAN','expression_comp_2',1,'p_expression_comp_2','parser.py',578),
  ('expression_comp_2 -> EQUAL','expression_comp_2',1,'p_expression_comp_2','parser.py',579),
  ('expression_comp_2 -> NOTEQUAL','expression_comp_2',1,'p_expression_comp_2','parser.py',580),
  ('expression_comp_2 -> LTHAN','expression_comp_2',1,'p_expression_comp_2','parser.py',581),
  ('expression_comp_2 -> GORE','expression_comp_2',1,'p_expression_comp_2','parser.py',582),
  ('expression_comp_2 -> LORE','expression_comp_2',1,'p_expression_comp_2','parser.py',583),
  ('m_exp -> term release_exp m_exp_sr','m_exp',3,'p_m_exp','parser.py',593),
  ('m_exp_sr -> m_exp_sr_2 m_exp','m_exp_sr',2,'p_m_exp_sr','parser.py',600),
  ('m_exp_sr -> empty','m_exp_sr',1,'p_m_exp_sr','parser.py',601),
  ('m_exp_sr_2 -> PLUS','m_exp_sr_2',1,'p_m_exp_sr_2','parser.py',604),
  ('m_exp_sr_2 -> MINUS','m_exp_sr_2',1,'p_m_exp_sr_2','parser.py',605),
  ('term -> sub_factor release_exp term_pc','term',3,'p_term','parser.py',612),
  ('term_pc -> term_pc_2 term','term_pc',2,'p_term_pc','parser.py',618),
  ('term_pc -> empty','term_pc',1,'p_term_pc','parser.py',619),
  ('term_pc_2 -> MULTIPLY','term_pc_2',1,'p_term_pc_2','parser.py',622),
  ('term_pc_2 -> DIVIDE','term_pc_2',1,'p_term_pc_2','parser.py',623),
  ('term_pc_2 -> MODULE','term_pc_2',1,'p_term_pc_2','parser.py',624),
  ('sub_factor -> factor release_exp sub_factor_pc','sub_factor',3,'p_sub_factor','parser.py',629),
  ('sub_factor_pc -> sub_factor_pc_2 sub_factor','sub_factor_pc',2,'p_sub_factor_pc','parser.py',635),
  ('sub_factor_pc -> empty','sub_factor_pc',1,'p_sub_factor_pc','parser.py',636),
  ('sub_factor_pc_2 -> POWER empty','sub_factor_pc_2',2,'p_sub_factor_pc_2','parser.py',639),
  ('factor -> factor_exp','factor',1,'p_factor','parser.py',646),
  ('factor -> factor_cte','factor',1,'p_factor','parser.py',647),
  ('factor -> variable','factor',1,'p_factor','parser.py',648),
  ('factor -> call_function','factor',1,'p_factor','parser.py',649),
  ('factor_exp -> false_button exp release_false_button','factor_exp',3,'p_factor_exp','parser.py',655),
  ('false_button -> LPAREN','false_button',1,'p_false_button','parser.py',660),
  ('release_false_button -> RPAREN','release_false_button',1,'p_release_false_button','parser.py',666),
  ('factor_cte -> CTE_FLOAT','factor_cte',1,'p_factor_cte','parser.py',673),
  ('factor_cte -> CTE_INT','factor_cte',1,'p_factor_cte','parser.py',674),
  ('factor_cte -> CTE_CHAR','factor_cte',1,'p_factor_cte','parser.py',675),
]
