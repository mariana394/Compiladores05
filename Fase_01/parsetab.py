
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS ASSIGN CHAR COLON COMMA CTE_CHAR CTE_FLOAT CTE_INT DATAFRAME DATE DIVIDE DO DUMMI_REGRESSION ELSE END EQUAL EXPLORATION FINANCIAL_STATE FLOAT FOR FROM FUNCTION GORE GTHAN ID IF IMPORT INT LBRACKET LORE LPAREN LSQBRACKET LTHAN MAIN MINUS MODEL_PREDICT MODULE MULTIPLY NOTEQUAL OR PLUS POWER PRINT PROGRAM RBRACKET READ RETURN RPAREN RSQBRACKET SEASON_ANALYSIS SEMICOLON TO TREND_PREDICTION VAR VOID WHILEprogram : PROGRAM ID goto_main program_libraries program_vars program_function program_main end goto_main : SEMICOLONend : END empty : id_saver : ID empty int_const_saver : CTE_INT \n                       | emptyrelease_exp : emptyresources : emptyprogram_libraries : from_library import_library \n                         | emptyfrom_library : FROM ID\n                    | emptyimport_library : IMPORT ID AS ID  program_librariesvar_type : var_c_type\n                | var_s_typeprogram_vars : VAR var_type  \n                    | emptys_type : INT \n              | FLOAT\n              | CHARc_type : DATAFRAME\n              | DATEvar_multiple : var_type\n                    | emptyvar_c_type : c_type id_saver add_c_var var_c_type2 SEMICOLON var_multiplevar_c_type2 : COMMA id_saver add_c_var var_c_type2\n                   | emptyadd_c_var : emptyvar_s_type : s_type id_saver var_s_array add_s_var var_s_type2 SEMICOLON var_multiplevar_s_type2 : COMMA id_saver var_s_array add_s_var var_s_type2\n                   | emptyadd_s_var : emptyvar_s_array : LSQBRACKET var_s_dimesions RSQBRACKET var_s_matrix \n                   | emptyvar_s_matrix : LSQBRACKET var_s_dimesions RSQBRACKET\n                    | emptyvar_s_dimesions : CTE_INT emptyvariable : var_id_saver variable_array var_id_saver : id_savervariable_array : LSQBRACKET index_arr_mat RSQBRACKET variable_matrix\n                      | emptyvariable_matrix : LSQBRACKET index_arr_mat RSQBRACKET\n                       | emptyindex_arr_mat : expprogram_function : FUNCTION resources f_type id_saver func_creator  LPAREN param RPAREN add_func_glob program_vars inner_body return end_function program_function\n                        | emptyf_type : INT \n              | FLOAT\n              | CHAR\n              | VOIDfunc_creator : emptyadd_func_glob : LBRACKETend_function : RBRACKETparam : s_type id_saver add_params param2\n             | emptyparam2 : COMMA s_type id_saver add_params param2\n              | emptyadd_params : emptyreturn : return_np exp return_quad SEMICOLON\n              | empty_path_returnreturn_np : RETURNreturn_quad : emptyempty_path_return : emptyprogram_main :  main_id LBRACKET program_vars inner_body RBRACKETmain_id : MAIN resources body : LBRACKET inner_body RBRACKETinner_body :  statement inner_body\n                  | emptyassign : variable keep_assign specialf_assign end_assignspecialf_assign : exp\n                       | special_function\n                       | readkeep_assign : ASSIGN emptyend_assign : SEMICOLON emptycondition : IF LPAREN exp RPAREN condition_GOTOF body condition2 SEMICOLON end_conditioncondition2 : ELSE condition_GOTO body\n                 | emptycondition_GOTOF : emptycondition_GOTO : emptyend_condition : emptyprint : PRINT LPAREN print_many RPAREN SEMICOLON end_print_npprint_type : expprint_many : print_type print_many2 print_many2 : COMMA print_many_np print_many\n                   | emptyprint_many_np : emptyend_print_np : emptyread : np_read LPAREN valid_exp_read read_npnp_read : READvalid_exp_read : expread_np : RPARENcycle : for\n             | whilewhile : DO seed body WHILE LPAREN exp RPAREN SEMICOLON gotoVseed : emptygotoV : emptyfor : FOR LPAREN for_control keep_assign exp for_np1 for_end body for_np2for_control : id_saverfor_np1 :  TOfor_end : int_const_saver RPARENfor_np2 : SEMICOLONcall_function : function_saver function_flag call_params check_not_void check_not_void : RPARENcall_void_function : function_saver function_flag call_params verify_params check_voidverify_params : RPARENcheck_void : SEMICOLONfunction_saver : ID emptyfunction_flag : LPARENcall_params : check_param exp_many\n                   | emptycheck_param : expexp_many : COMMA check_param exp_many\n                | emptystatement : assign\n                 | condition\n                 | print\n                 | cycle\n                 | call_void_functionspecial_function : exploration\n                        | financial_state\n                        | dummi_regression\n                        | season_analysis\n                        | trend_prediction\n                        | model_predicttag_sp : LPARENexploration : EXPLORATION tag_sp variable explore_var np_check_sizesp_param : COMMAnp_check_size : RPARENexplore_var : sp_param variable explor_cte\n                   | emptyexplor_cte : sp_param int_const_saver\n                  | emptyfinancial_state : FINANCIAL_STATE tag_sp variable sp_param variable sp_param variable sp_param variable np_check_sizeseason_analysis : SEASON_ANALYSIS tag_sp variable np_check_sizetrend_prediction : TREND_PREDICTION tag_sp variable sp_param int_const_saver sp_param int_const_saver sp_param int_const_saver np_check_sizedummi_regression : DUMMI_REGRESSION tag_sp variable sp_param variable dr_array dr_int np_check_sizedr_array : COMMA LSQBRACKET CTE_CHAR dr_array_mp RSQBRACKET\n                | emptydr_array_mp : COMMA CTE_CHAR dr_array_mp\n                   | emptydr_int : COMMA int_const_saver\n              | emptymodel_predict : MODEL_PREDICT tag_sp variable sp_param variable np_check_sizeexp : t_exp release_exp exp_orexp_or : exp_keep_or  exp\n              | emptyexp_keep_or : ORt_exp : expression release_exp t_exp_andt_exp_and : keep_and t_exp\n                 | emptykeep_and : AND expression : m_exp release_exp expression_compexpression_comp :  expression_comp_2  m_exp release_exp\n                       |  emptyexpression_comp_2 : GTHAN\n                         | EQUAL\n                         | NOTEQUAL\n                         | LTHAN\n                         | GORE\n                         | LORE\n                         m_exp : term release_exp m_exp_srm_exp_sr : m_exp_sr_2 m_exp\n                | emptym_exp_sr_2 : PLUS\n                  | MINUSterm : sub_factor release_exp term_pcterm_pc : term_pc_2 term\n               | emptyterm_pc_2 : MULTIPLY\n                 | DIVIDE\n                 | MODULEsub_factor : factor release_exp sub_factor_pcsub_factor_pc : sub_factor_pc_2 sub_factor\n                     | emptysub_factor_pc_2 : POWER emptyfactor : factor_exp\n              | factor_cte\n              | variable\n              | call_functionfactor_exp : false_button exp release_false_buttonfalse_button : LPARENrelease_false_button : RPARENfactor_cte : CTE_FLOAT\n                  | CTE_INT\n                  | CTE_CHAR'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,39,40,],[0,-1,-3,]),'ID':([2,9,12,14,19,20,21,22,23,24,25,26,27,28,38,41,43,44,45,46,47,55,58,66,68,69,70,71,72,76,77,86,89,95,96,97,98,99,100,102,104,109,110,111,113,131,147,152,166,168,171,174,175,178,180,181,182,183,184,185,186,192,196,201,204,211,213,215,219,221,229,231,232,233,234,235,236,238,240,241,243,245,246,247,249,251,257,258,259,260,261,263,267,269,270,279,281,282,283,287,292,296,297,304,325,329,335,340,342,344,354,355,357,358,359,360,365,],[3,15,-18,29,-17,-15,-16,36,36,-22,-23,-19,-20,-21,54,-4,36,-48,-49,-50,-51,82,36,82,-115,-116,-117,-118,-119,-93,-94,-4,36,82,-4,82,82,82,-109,82,36,-26,-24,-25,-4,-182,82,-74,82,36,-30,-70,-4,82,36,-126,36,36,36,36,36,82,-4,82,82,-75,82,-148,82,-152,82,-156,-157,-158,-159,-160,-161,82,-165,-166,82,-170,-171,-172,82,-4,-4,82,-87,-105,-107,82,82,-4,-53,36,-128,36,36,36,-176,-82,-88,82,36,36,-4,-4,82,-62,-76,-81,-98,-102,-95,-97,36,]),'SEMICOLON':([3,35,36,37,48,49,50,51,53,57,59,60,61,79,82,83,87,88,90,91,101,103,107,112,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,132,140,141,142,143,144,145,146,148,149,150,170,172,176,177,179,187,188,189,190,194,198,199,203,209,210,212,214,218,220,228,230,237,239,242,244,248,250,252,253,264,265,268,273,274,275,276,277,284,285,288,289,290,291,293,294,295,308,316,317,319,320,323,334,338,356,363,366,371,372,380,383,],[5,-4,-4,-4,-4,-29,-5,-4,-35,86,-28,-4,-33,-4,-4,-40,-4,113,-32,-4,-39,-42,-5,-4,-4,-34,-37,-179,175,-71,-72,-73,-4,-120,-121,-122,-123,-124,-125,-4,-4,-4,-4,-4,-177,-178,-180,-184,-185,-186,-27,-4,-4,-8,-4,-4,-4,-4,-4,257,261,-106,-4,-4,-36,-145,-147,-149,-151,-153,-155,-162,-164,-167,-169,-173,-175,-181,-183,-41,-44,-67,-31,-146,-89,-92,-150,-135,-129,-4,-163,-168,-174,-103,-104,-4,-127,-154,335,-78,-43,340,-144,358,-77,-4,-137,379,-63,-134,-136,]),'FROM':([4,5,54,],[9,-2,9,]),'VAR':([4,5,6,8,13,41,54,64,269,270,],[-4,-2,11,-11,-10,11,-4,-14,11,-53,]),'FUNCTION':([4,5,6,8,10,12,13,19,20,21,54,64,86,109,110,111,113,171,361,362,],[-4,-2,-4,-11,17,-18,-10,-17,-15,-16,-4,-14,-4,-26,-24,-25,-4,-30,17,-54,]),'MAIN':([4,5,6,8,10,12,13,16,18,19,20,21,54,64,86,109,110,111,113,171,361,362,370,],[-4,-2,-4,-11,-4,-18,-10,32,-47,-17,-15,-16,-4,-14,-4,-26,-24,-25,-4,-30,-4,-54,-46,]),'IMPORT':([4,5,7,8,15,54,],[-4,-2,14,-13,-12,-4,]),'DATAFRAME':([11,86,113,],[24,24,24,]),'DATE':([11,86,113,],[25,25,25,]),'INT':([11,17,33,34,86,108,113,306,],[26,-4,44,-9,26,26,26,26,]),'FLOAT':([11,17,33,34,86,108,113,306,],[27,-4,45,-9,27,27,27,27,]),'CHAR':([11,17,33,34,86,108,113,306,],[28,-4,46,-9,28,28,28,28,]),'IF':([12,19,20,21,41,55,66,68,69,70,71,72,76,77,86,109,110,111,113,166,171,174,175,211,257,260,261,269,270,296,297,304,335,340,354,355,357,358,359,360,],[-18,-17,-15,-16,-4,74,74,-115,-116,-117,-118,-119,-93,-94,-4,-26,-24,-25,-4,74,-30,-70,-4,-75,-4,-105,-107,-4,-53,-82,-88,74,-4,-4,-76,-81,-98,-102,-95,-97,]),'PRINT':([12,19,20,21,41,55,66,68,69,70,71,72,76,77,86,109,110,111,113,166,171,174,175,211,257,260,261,269,270,296,297,304,335,340,354,355,357,358,359,360,],[-18,-17,-15,-16,-4,75,75,-115,-116,-117,-118,-119,-93,-94,-4,-26,-24,-25,-4,75,-30,-70,-4,-75,-4,-105,-107,-4,-53,-82,-88,75,-4,-4,-76,-81,-98,-102,-95,-97,]),'FOR':([12,19,20,21,41,55,66,68,69,70,71,72,76,77,86,109,110,111,113,166,171,174,175,211,257,260,261,269,270,296,297,304,335,340,354,355,357,358,359,360,],[-18,-17,-15,-16,-4,80,80,-115,-116,-117,-118,-119,-93,-94,-4,-26,-24,-25,-4,80,-30,-70,-4,-75,-4,-105,-107,-4,-53,-82,-88,80,-4,-4,-76,-81,-98,-102,-95,-97,]),'DO':([12,19,20,21,41,55,66,68,69,70,71,72,76,77,86,109,110,111,113,166,171,174,175,211,257,260,261,269,270,296,297,304,335,340,354,355,357,358,359,360,],[-18,-17,-15,-16,-4,81,81,-115,-116,-117,-118,-119,-93,-94,-4,-26,-24,-25,-4,81,-30,-70,-4,-75,-4,-105,-107,-4,-53,-82,-88,81,-4,-4,-76,-81,-98,-102,-95,-97,]),'RBRACKET':([12,19,20,21,41,55,65,66,67,68,69,70,71,72,76,77,86,94,109,110,111,113,166,171,174,175,206,211,257,260,261,269,270,296,297,304,324,335,340,341,343,345,354,355,357,358,359,360,379,],[-18,-17,-15,-16,-4,-4,93,-4,-69,-115,-116,-117,-118,-119,-93,-94,-4,-68,-26,-24,-25,-4,-4,-30,-70,-4,268,-75,-4,-105,-107,-4,-53,-82,-88,-4,-4,-4,-4,362,-61,-64,-76,-81,-98,-102,-95,-97,-60,]),'RETURN':([12,19,20,21,66,67,68,69,70,71,72,76,77,86,94,109,110,111,113,171,174,175,211,257,260,261,269,270,296,297,304,324,335,340,354,355,357,358,359,360,],[-18,-17,-15,-16,-4,-69,-115,-116,-117,-118,-119,-93,-94,-4,-68,-26,-24,-25,-4,-30,-70,-4,-75,-4,-105,-107,-4,-53,-82,-88,-4,344,-4,-4,-76,-81,-98,-102,-95,-97,]),'VOID':([17,33,34,],[-4,47,-9,]),'AS':([29,],[38,]),'END':([30,93,],[40,-65,]),'LBRACKET':([31,32,34,42,81,105,106,193,207,255,256,318,321,336,337,339,],[41,-4,-9,-66,-4,166,-96,-4,270,166,-79,-4,166,166,-80,-101,]),'COMMA':([35,36,37,48,49,50,51,53,60,61,79,82,83,87,91,101,103,107,112,114,116,117,118,123,132,140,141,142,143,144,145,146,148,149,150,155,156,158,160,172,176,177,179,187,188,189,190,203,208,209,210,212,214,218,220,222,223,224,226,227,228,230,237,239,242,244,248,250,252,253,262,264,265,271,272,274,277,281,286,288,289,290,291,293,294,309,310,311,312,313,314,316,320,330,332,333,346,348,353,364,368,381,382,],[-4,-4,-4,58,-29,-5,-4,-35,89,-33,-4,-4,-40,-4,-4,-39,-42,-5,58,-4,-34,-37,-179,-4,-4,-4,-4,-4,-4,-177,-178,-180,-184,-185,-186,196,-83,201,-112,-4,-4,-8,-4,-4,-4,-4,-4,-4,-4,89,-36,-145,-147,-149,-151,281,281,281,281,281,-153,-155,-162,-164,-167,-169,-173,-175,-181,-183,201,-41,-44,306,-59,-146,-150,-128,-4,-4,-163,-168,-174,-103,-104,281,281,331,281,-6,-7,-154,-43,350,-139,-4,-4,281,281,306,375,375,-138,]),'LSQBRACKET':([36,37,50,79,82,83,91,107,114,203,331,],[-4,52,-5,102,-4,-40,115,-5,52,263,352,]),'LPAREN':([36,50,56,74,75,78,80,82,84,85,95,96,97,98,99,100,102,107,130,131,133,134,135,136,137,138,139,147,151,152,178,192,196,201,204,205,213,215,219,221,229,231,232,233,234,235,236,238,240,241,243,245,246,247,249,251,258,259,263,267,292,342,344,],[-4,-5,-4,97,98,100,104,-4,108,-52,131,-4,131,131,131,-109,131,-108,178,-182,181,181,181,181,181,181,-90,131,100,-74,131,131,-4,131,131,267,131,-148,131,-152,131,-156,-157,-158,-159,-160,-161,131,-165,-166,131,-170,-171,-172,131,-4,131,-87,131,131,-176,131,-62,]),'ASSIGN':([36,50,73,79,82,83,101,103,107,163,164,203,264,265,320,],[-4,-5,96,-4,-4,-40,-39,-42,-5,96,-99,-4,-41,-44,-43,]),'RPAREN':([36,50,79,82,83,99,100,101,103,107,108,118,123,132,140,141,142,143,144,145,146,148,149,150,153,154,155,156,157,158,159,160,167,169,176,177,179,187,188,189,190,191,192,195,197,200,202,203,208,212,214,216,217,218,220,222,225,228,230,237,239,242,244,248,250,252,253,254,262,264,265,271,272,274,277,278,280,281,288,289,290,291,293,294,298,299,301,302,303,305,307,309,311,313,314,315,316,320,322,326,327,328,330,332,346,347,349,350,351,364,367,369,373,374,378,382,],[-4,-5,-4,-4,-40,-4,-109,-39,-42,-5,-4,-179,-4,-4,-4,-4,-4,-4,-177,-178,-180,-184,-185,-186,193,194,-4,-83,199,-4,-111,-112,207,-56,-4,-8,-4,-4,-4,-4,-4,253,-4,-84,-86,-110,-114,-4,-4,-145,-147,276,-91,-149,-151,-4,285,-153,-155,-162,-164,-167,-169,-173,-175,-181,-183,294,-4,-41,-44,-4,-59,-146,-150,285,-131,-128,-4,-163,-168,-174,-103,-104,-85,-113,-4,-100,323,-55,-58,-4,-4,-6,-7,285,-154,-43,339,-4,-130,-133,-4,-139,-4,-132,285,-4,-143,-4,-142,-4,-57,285,285,-138,]),'CTE_INT':([52,95,96,97,98,99,100,102,115,131,147,152,178,192,196,201,204,213,215,219,221,229,231,232,233,234,235,236,238,240,241,243,245,246,247,249,251,258,259,263,267,281,286,292,301,302,326,333,342,344,350,369,],[63,149,-4,149,149,149,-109,149,63,-182,149,-74,149,149,-4,149,149,149,-148,149,-152,149,-156,-157,-158,-159,-160,-161,149,-165,-166,149,-170,-171,-172,149,-4,149,-87,149,149,-128,313,-176,313,-100,313,313,149,-62,313,313,]),'RSQBRACKET':([62,63,79,82,83,92,101,103,107,118,123,132,140,141,142,143,144,145,146,148,149,150,161,162,173,176,177,179,187,188,189,190,203,212,214,218,220,228,230,237,239,242,244,248,250,252,253,264,265,274,277,288,289,290,291,293,294,300,316,320,368,376,377,381,384,],[91,-4,-4,-4,-40,-38,-39,-42,-5,-179,-4,-4,-4,-4,-4,-4,-177,-178,-180,-184,-185,-186,203,-45,210,-4,-8,-4,-4,-4,-4,-4,-4,-145,-147,-149,-151,-153,-155,-162,-164,-167,-169,-173,-175,-181,-183,-41,-44,-146,-150,-4,-163,-168,-174,-103,-104,320,-154,-43,-4,382,-141,-4,-140,]),'POWER':([79,82,83,101,103,107,118,143,144,145,146,148,149,150,177,190,203,252,253,264,265,293,294,320,],[-4,-4,-40,-39,-42,-5,-179,-4,-177,-178,-180,-184,-185,-186,-8,251,-4,-181,-183,-41,-44,-103,-104,-43,]),'MULTIPLY':([79,82,83,101,103,107,118,142,143,144,145,146,148,149,150,177,189,190,203,248,250,252,253,264,265,291,293,294,320,],[-4,-4,-40,-39,-42,-5,-179,-4,-4,-177,-178,-180,-184,-185,-186,-8,245,-4,-4,-173,-175,-181,-183,-41,-44,-174,-103,-104,-43,]),'DIVIDE':([79,82,83,101,103,107,118,142,143,144,145,146,148,149,150,177,189,190,203,248,250,252,253,264,265,291,293,294,320,],[-4,-4,-40,-39,-42,-5,-179,-4,-4,-177,-178,-180,-184,-185,-186,-8,246,-4,-4,-173,-175,-181,-183,-41,-44,-174,-103,-104,-43,]),'MODULE':([79,82,83,101,103,107,118,142,143,144,145,146,148,149,150,177,189,190,203,248,250,252,253,264,265,291,293,294,320,],[-4,-4,-40,-39,-42,-5,-179,-4,-4,-177,-178,-180,-184,-185,-186,-8,247,-4,-4,-173,-175,-181,-183,-41,-44,-174,-103,-104,-43,]),'PLUS':([79,82,83,101,103,107,118,141,142,143,144,145,146,148,149,150,177,188,189,190,203,242,244,248,250,252,253,264,265,290,291,293,294,320,],[-4,-4,-40,-39,-42,-5,-179,-4,-4,-4,-177,-178,-180,-184,-185,-186,-8,240,-4,-4,-4,-167,-169,-173,-175,-181,-183,-41,-44,-168,-174,-103,-104,-43,]),'MINUS':([79,82,83,101,103,107,118,141,142,143,144,145,146,148,149,150,177,188,189,190,203,242,244,248,250,252,253,264,265,290,291,293,294,320,],[-4,-4,-40,-39,-42,-5,-179,-4,-4,-4,-177,-178,-180,-184,-185,-186,-8,241,-4,-4,-4,-167,-169,-173,-175,-181,-183,-41,-44,-168,-174,-103,-104,-43,]),'GTHAN':([79,82,83,101,103,107,118,140,141,142,143,144,145,146,148,149,150,177,187,188,189,190,203,237,239,242,244,248,250,252,253,264,265,289,290,291,293,294,320,],[-4,-4,-40,-39,-42,-5,-179,-4,-4,-4,-4,-177,-178,-180,-184,-185,-186,-8,231,-4,-4,-4,-4,-162,-164,-167,-169,-173,-175,-181,-183,-41,-44,-163,-168,-174,-103,-104,-43,]),'EQUAL':([79,82,83,101,103,107,118,140,141,142,143,144,145,146,148,149,150,177,187,188,189,190,203,237,239,242,244,248,250,252,253,264,265,289,290,291,293,294,320,],[-4,-4,-40,-39,-42,-5,-179,-4,-4,-4,-4,-177,-178,-180,-184,-185,-186,-8,232,-4,-4,-4,-4,-162,-164,-167,-169,-173,-175,-181,-183,-41,-44,-163,-168,-174,-103,-104,-43,]),'NOTEQUAL':([79,82,83,101,103,107,118,140,141,142,143,144,145,146,148,149,150,177,187,188,189,190,203,237,239,242,244,248,250,252,253,264,265,289,290,291,293,294,320,],[-4,-4,-40,-39,-42,-5,-179,-4,-4,-4,-4,-177,-178,-180,-184,-185,-186,-8,233,-4,-4,-4,-4,-162,-164,-167,-169,-173,-175,-181,-183,-41,-44,-163,-168,-174,-103,-104,-43,]),'LTHAN':([79,82,83,101,103,107,118,140,141,142,143,144,145,146,148,149,150,177,187,188,189,190,203,237,239,242,244,248,250,252,253,264,265,289,290,291,293,294,320,],[-4,-4,-40,-39,-42,-5,-179,-4,-4,-4,-4,-177,-178,-180,-184,-185,-186,-8,234,-4,-4,-4,-4,-162,-164,-167,-169,-173,-175,-181,-183,-41,-44,-163,-168,-174,-103,-104,-43,]),'GORE':([79,82,83,101,103,107,118,140,141,142,143,144,145,146,148,149,150,177,187,188,189,190,203,237,239,242,244,248,250,252,253,264,265,289,290,291,293,294,320,],[-4,-4,-40,-39,-42,-5,-179,-4,-4,-4,-4,-177,-178,-180,-184,-185,-186,-8,235,-4,-4,-4,-4,-162,-164,-167,-169,-173,-175,-181,-183,-41,-44,-163,-168,-174,-103,-104,-43,]),'LORE':([79,82,83,101,103,107,118,140,141,142,143,144,145,146,148,149,150,177,187,188,189,190,203,237,239,242,244,248,250,252,253,264,265,289,290,291,293,294,320,],[-4,-4,-40,-39,-42,-5,-179,-4,-4,-4,-4,-177,-178,-180,-184,-185,-186,-8,236,-4,-4,-4,-4,-162,-164,-167,-169,-173,-175,-181,-183,-41,-44,-163,-168,-174,-103,-104,-43,]),'AND':([79,82,83,101,103,107,118,132,140,141,142,143,144,145,146,148,149,150,177,179,187,188,189,190,203,228,230,237,239,242,244,248,250,252,253,264,265,288,289,290,291,293,294,316,320,],[-4,-4,-40,-39,-42,-5,-179,-4,-4,-4,-4,-4,-177,-178,-180,-184,-185,-186,-8,221,-4,-4,-4,-4,-4,-153,-155,-162,-164,-167,-169,-173,-175,-181,-183,-41,-44,-4,-163,-168,-174,-103,-104,-154,-43,]),'OR':([79,82,83,101,103,107,118,123,132,140,141,142,143,144,145,146,148,149,150,176,177,179,187,188,189,190,203,218,220,228,230,237,239,242,244,248,250,252,253,264,265,277,288,289,290,291,293,294,316,320,],[-4,-4,-40,-39,-42,-5,-179,-4,-4,-4,-4,-4,-4,-177,-178,-180,-184,-185,-186,215,-8,-4,-4,-4,-4,-4,-4,-149,-151,-153,-155,-162,-164,-167,-169,-173,-175,-181,-183,-41,-44,-150,-4,-163,-168,-174,-103,-104,-154,-43,]),'TO':([79,82,83,101,103,107,118,123,132,140,141,142,143,144,145,146,148,149,150,176,177,179,187,188,189,190,203,212,214,218,220,228,230,237,239,242,244,248,250,252,253,264,265,266,274,277,288,289,290,291,293,294,316,320,],[-4,-4,-40,-39,-42,-5,-179,-4,-4,-4,-4,-4,-4,-177,-178,-180,-184,-185,-186,-4,-8,-4,-4,-4,-4,-4,-4,-145,-147,-149,-151,-153,-155,-162,-164,-167,-169,-173,-175,-181,-183,-41,-44,302,-146,-150,-4,-163,-168,-174,-103,-104,-154,-43,]),'EXPLORATION':([95,96,152,],[133,-4,-74,]),'FINANCIAL_STATE':([95,96,152,],[134,-4,-74,]),'DUMMI_REGRESSION':([95,96,152,],[135,-4,-74,]),'SEASON_ANALYSIS':([95,96,152,],[136,-4,-74,]),'TREND_PREDICTION':([95,96,152,],[137,-4,-74,]),'MODEL_PREDICT':([95,96,152,],[138,-4,-74,]),'READ':([95,96,152,],[139,-4,-74,]),'CTE_FLOAT':([95,96,97,98,99,100,102,131,147,152,178,192,196,201,204,213,215,219,221,229,231,232,233,234,235,236,238,240,241,243,245,246,247,249,251,258,259,263,267,292,342,344,],[148,-4,148,148,148,-109,148,-182,148,-74,148,148,-4,148,148,148,-148,148,-152,148,-156,-157,-158,-159,-160,-161,148,-165,-166,148,-170,-171,-172,148,-4,148,-87,148,148,-176,148,-62,]),'CTE_CHAR':([95,96,97,98,99,100,102,131,147,152,178,192,196,201,204,213,215,219,221,229,231,232,233,234,235,236,238,240,241,243,245,246,247,249,251,258,259,263,267,292,342,344,352,375,],[150,-4,150,150,150,-109,150,-182,150,-74,150,150,-4,150,150,150,-148,150,-152,150,-156,-157,-158,-159,-160,-161,150,-165,-166,150,-170,-171,-172,150,-4,150,-87,150,150,-176,150,-62,368,381,]),'WHILE':([165,268,],[205,-67,]),'ELSE':([268,295,],[-67,318,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'goto_main':([3,],[4,]),'program_libraries':([4,54,],[6,64,]),'from_library':([4,54,],[7,7,]),'empty':([4,6,10,17,32,35,36,37,41,48,51,54,55,56,60,63,66,79,81,82,86,87,91,96,99,108,112,113,114,123,132,140,141,142,143,155,158,166,172,175,176,179,187,188,189,190,192,193,196,203,208,209,222,251,257,262,269,271,286,288,295,301,304,309,311,318,324,326,330,333,335,340,346,350,361,363,364,368,369,381,],[8,12,18,34,34,49,50,53,12,59,61,8,67,85,90,92,67,103,106,107,111,49,117,152,159,169,59,111,53,177,177,177,177,177,177,197,202,67,61,211,214,220,230,239,244,250,159,256,259,265,272,90,280,292,297,202,12,307,314,177,319,314,67,328,332,337,345,314,351,314,355,360,272,314,18,372,307,377,314,377,]),'program_vars':([6,41,269,],[10,55,304,]),'import_library':([7,],[13,]),'program_function':([10,361,],[16,370,]),'var_type':([11,86,113,],[19,110,110,]),'var_c_type':([11,86,113,],[20,20,20,]),'var_s_type':([11,86,113,],[21,21,21,]),'c_type':([11,86,113,],[22,22,22,]),'s_type':([11,86,108,113,306,],[23,23,168,23,325,]),'program_main':([16,],[30,]),'main_id':([16,],[31,]),'resources':([17,32,],[33,42,]),'id_saver':([22,23,43,55,58,66,89,95,97,98,99,102,104,147,166,168,178,180,182,183,184,185,186,192,201,204,213,219,229,238,243,249,258,263,267,279,282,283,287,304,325,329,342,365,],[35,37,56,83,87,83,114,83,83,83,83,83,164,83,83,208,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,346,83,83,83,]),'end':([30,],[39,]),'f_type':([33,],[43,]),'add_c_var':([35,87,],[48,112,]),'var_s_array':([37,114,],[51,172,]),'var_c_type2':([48,112,],[57,170,]),'add_s_var':([51,172,],[60,209,]),'var_s_dimesions':([52,115,],[62,173,]),'inner_body':([55,66,166,304,],[65,94,206,324,]),'statement':([55,66,166,304,],[66,66,66,66,]),'assign':([55,66,166,304,],[68,68,68,68,]),'condition':([55,66,166,304,],[69,69,69,69,]),'print':([55,66,166,304,],[70,70,70,70,]),'cycle':([55,66,166,304,],[71,71,71,71,]),'call_void_function':([55,66,166,304,],[72,72,72,72,]),'variable':([55,66,95,97,98,99,102,147,166,178,180,182,183,184,185,186,192,201,204,213,219,229,238,243,249,258,263,267,279,282,283,287,304,329,342,365,],[73,73,118,118,118,118,118,118,73,118,222,223,224,225,226,227,118,118,118,118,118,118,118,118,118,118,118,118,309,310,311,315,73,348,118,374,]),'for':([55,66,166,304,],[76,76,76,76,]),'while':([55,66,166,304,],[77,77,77,77,]),'function_saver':([55,66,95,97,98,99,102,147,166,178,192,201,204,213,219,229,238,243,249,258,263,267,304,342,],[78,78,151,151,151,151,151,151,78,151,151,151,151,151,151,151,151,151,151,151,151,151,78,151,]),'var_id_saver':([55,66,95,97,98,99,102,147,166,178,180,182,183,184,185,186,192,201,204,213,219,229,238,243,249,258,263,267,279,282,283,287,304,329,342,365,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'func_creator':([56,],[84,]),'var_s_type2':([60,209,],[88,273,]),'keep_assign':([73,163,],[95,204,]),'function_flag':([78,151,],[99,192,]),'variable_array':([79,],[101,]),'seed':([81,],[105,]),'var_multiple':([86,113,],[109,171,]),'var_s_matrix':([91,],[116,]),'specialf_assign':([95,],[119,]),'exp':([95,97,98,99,102,147,178,192,201,204,213,258,263,267,342,],[120,153,156,160,162,191,217,160,160,266,274,156,162,303,363,]),'special_function':([95,],[121,]),'read':([95,],[122,]),'t_exp':([95,97,98,99,102,147,178,192,201,204,213,219,258,263,267,342,],[123,123,123,123,123,123,123,123,123,123,123,277,123,123,123,123,]),'exploration':([95,],[124,]),'financial_state':([95,],[125,]),'dummi_regression':([95,],[126,]),'season_analysis':([95,],[127,]),'trend_prediction':([95,],[128,]),'model_predict':([95,],[129,]),'np_read':([95,],[130,]),'expression':([95,97,98,99,102,147,178,192,201,204,213,219,258,263,267,342,],[132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,]),'m_exp':([95,97,98,99,102,147,178,192,201,204,213,219,229,238,258,263,267,342,],[140,140,140,140,140,140,140,140,140,140,140,140,288,289,140,140,140,140,]),'term':([95,97,98,99,102,147,178,192,201,204,213,219,229,238,243,258,263,267,342,],[141,141,141,141,141,141,141,141,141,141,141,141,141,141,290,141,141,141,141,]),'sub_factor':([95,97,98,99,102,147,178,192,201,204,213,219,229,238,243,249,258,263,267,342,],[142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,291,142,142,142,142,]),'factor':([95,97,98,99,102,147,178,192,201,204,213,219,229,238,243,249,258,263,267,342,],[143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,]),'factor_exp':([95,97,98,99,102,147,178,192,201,204,213,219,229,238,243,249,258,263,267,342,],[144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,]),'factor_cte':([95,97,98,99,102,147,178,192,201,204,213,219,229,238,243,249,258,263,267,342,],[145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,]),'call_function':([95,97,98,99,102,147,178,192,201,204,213,219,229,238,243,249,258,263,267,342,],[146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,]),'false_button':([95,97,98,99,102,147,178,192,201,204,213,219,229,238,243,249,258,263,267,342,],[147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,]),'print_many':([98,258,],[154,298,]),'print_type':([98,258,],[155,155,]),'call_params':([99,192,],[157,254,]),'check_param':([99,192,201,],[158,158,262,]),'index_arr_mat':([102,263,],[161,300,]),'for_control':([104,],[163,]),'body':([105,255,321,336,],[165,295,338,356,]),'param':([108,],[167,]),'end_assign':([119,],[174,]),'release_exp':([123,132,140,141,142,143,288,],[176,179,187,188,189,190,316,]),'tag_sp':([133,134,135,136,137,138,],[180,182,183,184,185,186,]),'print_many2':([155,],[195,]),'verify_params':([157,],[198,]),'exp_many':([158,262,],[200,299,]),'exp_or':([176,],[212,]),'exp_keep_or':([176,],[213,]),'valid_exp_read':([178,],[216,]),'t_exp_and':([179,],[218,]),'keep_and':([179,],[219,]),'expression_comp':([187,],[228,]),'expression_comp_2':([187,],[229,]),'m_exp_sr':([188,],[237,]),'m_exp_sr_2':([188,],[238,]),'term_pc':([189,],[242,]),'term_pc_2':([189,],[243,]),'sub_factor_pc':([190,],[248,]),'sub_factor_pc_2':([190,],[249,]),'release_false_button':([191,],[252,]),'condition_GOTOF':([193,],[255,]),'print_many_np':([196,],[258,]),'check_void':([198,],[260,]),'variable_matrix':([203,],[264,]),'add_func_glob':([207,],[269,]),'add_params':([208,346,],[271,364,]),'read_np':([216,],[275,]),'explore_var':([222,],[278,]),'sp_param':([222,223,224,226,227,309,310,312,348,353,],[279,282,283,286,287,326,329,333,365,369,]),'np_check_size':([225,278,315,349,374,378,],[284,308,334,366,380,383,]),'check_not_void':([254,],[293,]),'end_print_np':([257,],[296,]),'for_np1':([266,],[301,]),'param2':([271,364,],[305,373,]),'int_const_saver':([286,301,326,333,350,369,],[312,322,347,353,367,378,]),'condition2':([295,],[317,]),'for_end':([301,],[321,]),'explor_cte':([309,],[327,]),'dr_array':([311,],[330,]),'condition_GOTO':([318,],[336,]),'return':([324,],[341,]),'return_np':([324,],[342,]),'empty_path_return':([324,],[343,]),'dr_int':([330,],[349,]),'end_condition':([335,],[354,]),'for_np2':([338,],[357,]),'gotoV':([340,],[359,]),'end_function':([341,],[361,]),'return_quad':([363,],[371,]),'dr_array_mp':([368,381,],[376,384,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID goto_main program_libraries program_vars program_function program_main end','program',8,'p_program','parser.py',51),
  ('goto_main -> SEMICOLON','goto_main',1,'p_goto_main','parser.py',55),
  ('end -> END','end',1,'p_end','parser.py',59),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',83),
  ('id_saver -> ID empty','id_saver',2,'p_id_saver','parser.py',90),
  ('int_const_saver -> CTE_INT','int_const_saver',1,'p_int_const_saver','parser.py',99),
  ('int_const_saver -> empty','int_const_saver',1,'p_int_const_saver','parser.py',100),
  ('release_exp -> empty','release_exp',1,'p_release_exp','parser.py',112),
  ('resources -> empty','resources',1,'p_resources','parser.py',118),
  ('program_libraries -> from_library import_library','program_libraries',2,'p_program_libraries','parser.py',136),
  ('program_libraries -> empty','program_libraries',1,'p_program_libraries','parser.py',137),
  ('from_library -> FROM ID','from_library',2,'p_from_library','parser.py',140),
  ('from_library -> empty','from_library',1,'p_from_library','parser.py',141),
  ('import_library -> IMPORT ID AS ID program_libraries','import_library',5,'p_import_library','parser.py',144),
  ('var_type -> var_c_type','var_type',1,'p_var_type','parser.py',149),
  ('var_type -> var_s_type','var_type',1,'p_var_type','parser.py',150),
  ('program_vars -> VAR var_type','program_vars',2,'p_program_vars','parser.py',153),
  ('program_vars -> empty','program_vars',1,'p_program_vars','parser.py',154),
  ('s_type -> INT','s_type',1,'p_s_type','parser.py',164),
  ('s_type -> FLOAT','s_type',1,'p_s_type','parser.py',165),
  ('s_type -> CHAR','s_type',1,'p_s_type','parser.py',166),
  ('c_type -> DATAFRAME','c_type',1,'p_c_type','parser.py',173),
  ('c_type -> DATE','c_type',1,'p_c_type','parser.py',174),
  ('var_multiple -> var_type','var_multiple',1,'p_var_multiple','parser.py',181),
  ('var_multiple -> empty','var_multiple',1,'p_var_multiple','parser.py',182),
  ('var_c_type -> c_type id_saver add_c_var var_c_type2 SEMICOLON var_multiple','var_c_type',6,'p_var_c_type','parser.py',185),
  ('var_c_type2 -> COMMA id_saver add_c_var var_c_type2','var_c_type2',4,'p_var_c_type2','parser.py',188),
  ('var_c_type2 -> empty','var_c_type2',1,'p_var_c_type2','parser.py',189),
  ('add_c_var -> empty','add_c_var',1,'p_add_c_var','parser.py',192),
  ('var_s_type -> s_type id_saver var_s_array add_s_var var_s_type2 SEMICOLON var_multiple','var_s_type',7,'p_var_s_type','parser.py',198),
  ('var_s_type2 -> COMMA id_saver var_s_array add_s_var var_s_type2','var_s_type2',5,'p_var_s_type2','parser.py',201),
  ('var_s_type2 -> empty','var_s_type2',1,'p_var_s_type2','parser.py',202),
  ('add_s_var -> empty','add_s_var',1,'p_add_s_var','parser.py',207),
  ('var_s_array -> LSQBRACKET var_s_dimesions RSQBRACKET var_s_matrix','var_s_array',4,'p_var_s_array','parser.py',216),
  ('var_s_array -> empty','var_s_array',1,'p_var_s_array','parser.py',217),
  ('var_s_matrix -> LSQBRACKET var_s_dimesions RSQBRACKET','var_s_matrix',3,'p_var_s_matrix','parser.py',222),
  ('var_s_matrix -> empty','var_s_matrix',1,'p_var_s_matrix','parser.py',223),
  ('var_s_dimesions -> CTE_INT empty','var_s_dimesions',2,'p_var_s_dimesions','parser.py',227),
  ('variable -> var_id_saver variable_array','variable',2,'p_variable','parser.py',244),
  ('var_id_saver -> id_saver','var_id_saver',1,'p_var_id_saver','parser.py',247),
  ('variable_array -> LSQBRACKET index_arr_mat RSQBRACKET variable_matrix','variable_array',4,'p_variable_array','parser.py',265),
  ('variable_array -> empty','variable_array',1,'p_variable_array','parser.py',266),
  ('variable_matrix -> LSQBRACKET index_arr_mat RSQBRACKET','variable_matrix',3,'p_variable_matrix','parser.py',273),
  ('variable_matrix -> empty','variable_matrix',1,'p_variable_matrix','parser.py',274),
  ('index_arr_mat -> exp','index_arr_mat',1,'p_index_arr_mat','parser.py',278),
  ('program_function -> FUNCTION resources f_type id_saver func_creator LPAREN param RPAREN add_func_glob program_vars inner_body return end_function program_function','program_function',14,'p_program_function','parser.py',312),
  ('program_function -> empty','program_function',1,'p_program_function','parser.py',313),
  ('f_type -> INT','f_type',1,'p_f_type','parser.py',318),
  ('f_type -> FLOAT','f_type',1,'p_f_type','parser.py',319),
  ('f_type -> CHAR','f_type',1,'p_f_type','parser.py',320),
  ('f_type -> VOID','f_type',1,'p_f_type','parser.py',321),
  ('func_creator -> empty','func_creator',1,'p_func_creator','parser.py',333),
  ('add_func_glob -> LBRACKET','add_func_glob',1,'p_add_func_glob','parser.py',343),
  ('end_function -> RBRACKET','end_function',1,'p_end_function','parser.py',352),
  ('param -> s_type id_saver add_params param2','param',4,'p_param','parser.py',358),
  ('param -> empty','param',1,'p_param','parser.py',359),
  ('param2 -> COMMA s_type id_saver add_params param2','param2',5,'p_param2','parser.py',363),
  ('param2 -> empty','param2',1,'p_param2','parser.py',364),
  ('add_params -> empty','add_params',1,'p_add_params','parser.py',368),
  ('return -> return_np exp return_quad SEMICOLON','return',4,'p_return','parser.py',376),
  ('return -> empty_path_return','return',1,'p_return','parser.py',377),
  ('return_np -> RETURN','return_np',1,'p_return_np','parser.py',380),
  ('return_quad -> empty','return_quad',1,'p_return_quad','parser.py',389),
  ('empty_path_return -> empty','empty_path_return',1,'p_empty_path_return','parser.py',398),
  ('program_main -> main_id LBRACKET program_vars inner_body RBRACKET','program_main',5,'p_program_main','parser.py',409),
  ('main_id -> MAIN resources','main_id',2,'p_main_id','parser.py',412),
  ('body -> LBRACKET inner_body RBRACKET','body',3,'p_body','parser.py',422),
  ('inner_body -> statement inner_body','inner_body',2,'p_inner_body','parser.py',426),
  ('inner_body -> empty','inner_body',1,'p_inner_body','parser.py',427),
  ('assign -> variable keep_assign specialf_assign end_assign','assign',4,'p_assign','parser.py',432),
  ('specialf_assign -> exp','specialf_assign',1,'p_specialf_assign','parser.py',437),
  ('specialf_assign -> special_function','specialf_assign',1,'p_specialf_assign','parser.py',438),
  ('specialf_assign -> read','specialf_assign',1,'p_specialf_assign','parser.py',439),
  ('keep_assign -> ASSIGN empty','keep_assign',2,'p_keep_assign','parser.py',443),
  ('end_assign -> SEMICOLON empty','end_assign',2,'p_end_assign','parser.py',459),
  ('condition -> IF LPAREN exp RPAREN condition_GOTOF body condition2 SEMICOLON end_condition','condition',9,'p_condition','parser.py',467),
  ('condition2 -> ELSE condition_GOTO body','condition2',3,'p_condition2','parser.py',470),
  ('condition2 -> empty','condition2',1,'p_condition2','parser.py',471),
  ('condition_GOTOF -> empty','condition_GOTOF',1,'p_condition_GOTOF','parser.py',475),
  ('condition_GOTO -> empty','condition_GOTO',1,'p_condition_GOTO','parser.py',482),
  ('end_condition -> empty','end_condition',1,'p_end_condition','parser.py',487),
  ('print -> PRINT LPAREN print_many RPAREN SEMICOLON end_print_np','print',6,'p_print','parser.py',496),
  ('print_type -> exp','print_type',1,'p_print_type','parser.py',499),
  ('print_many -> print_type print_many2','print_many',2,'p_print_many','parser.py',502),
  ('print_many2 -> COMMA print_many_np print_many','print_many2',3,'p_print_many2','parser.py',505),
  ('print_many2 -> empty','print_many2',1,'p_print_many2','parser.py',506),
  ('print_many_np -> empty','print_many_np',1,'p_print_many_np','parser.py',509),
  ('end_print_np -> empty','end_print_np',1,'p_end_print_np','parser.py',513),
  ('read -> np_read LPAREN valid_exp_read read_np','read',4,'p_read','parser.py',519),
  ('np_read -> READ','np_read',1,'p_np_read','parser.py',523),
  ('valid_exp_read -> exp','valid_exp_read',1,'p_valid_exp_read','parser.py',527),
  ('read_np -> RPAREN','read_np',1,'p_read_np','parser.py',538),
  ('cycle -> for','cycle',1,'p_cycle','parser.py',545),
  ('cycle -> while','cycle',1,'p_cycle','parser.py',546),
  ('while -> DO seed body WHILE LPAREN exp RPAREN SEMICOLON gotoV','while',9,'p_while','parser.py',550),
  ('seed -> empty','seed',1,'p_seed','parser.py',554),
  ('gotoV -> empty','gotoV',1,'p_gotoV','parser.py',559),
  ('for -> FOR LPAREN for_control keep_assign exp for_np1 for_end body for_np2','for',9,'p_for','parser.py',565),
  ('for_control -> id_saver','for_control',1,'p_for_control','parser.py',568),
  ('for_np1 -> TO','for_np1',1,'p_for_np1','parser.py',577),
  ('for_end -> int_const_saver RPAREN','for_end',2,'p_for_end','parser.py',582),
  ('for_np2 -> SEMICOLON','for_np2',1,'p_for_np2','parser.py',595),
  ('call_function -> function_saver function_flag call_params check_not_void','call_function',4,'p_call_function','parser.py',641),
  ('check_not_void -> RPAREN','check_not_void',1,'p_check_not_void','parser.py',646),
  ('call_void_function -> function_saver function_flag call_params verify_params check_void','call_void_function',5,'p_call_void_function','parser.py',667),
  ('verify_params -> RPAREN','verify_params',1,'p_verify_params','parser.py',670),
  ('check_void -> SEMICOLON','check_void',1,'p_check_void','parser.py',679),
  ('function_saver -> ID empty','function_saver',2,'p_function_saver','parser.py',693),
  ('function_flag -> LPAREN','function_flag',1,'p_function_flag','parser.py',705),
  ('call_params -> check_param exp_many','call_params',2,'p_call_params','parser.py',723),
  ('call_params -> empty','call_params',1,'p_call_params','parser.py',724),
  ('check_param -> exp','check_param',1,'p_check_param','parser.py',729),
  ('exp_many -> COMMA check_param exp_many','exp_many',3,'p_exp_many','parser.py',743),
  ('exp_many -> empty','exp_many',1,'p_exp_many','parser.py',744),
  ('statement -> assign','statement',1,'p_statement','parser.py',748),
  ('statement -> condition','statement',1,'p_statement','parser.py',749),
  ('statement -> print','statement',1,'p_statement','parser.py',750),
  ('statement -> cycle','statement',1,'p_statement','parser.py',751),
  ('statement -> call_void_function','statement',1,'p_statement','parser.py',752),
  ('special_function -> exploration','special_function',1,'p_special_function','parser.py',756),
  ('special_function -> financial_state','special_function',1,'p_special_function','parser.py',757),
  ('special_function -> dummi_regression','special_function',1,'p_special_function','parser.py',758),
  ('special_function -> season_analysis','special_function',1,'p_special_function','parser.py',759),
  ('special_function -> trend_prediction','special_function',1,'p_special_function','parser.py',760),
  ('special_function -> model_predict','special_function',1,'p_special_function','parser.py',761),
  ('tag_sp -> LPAREN','tag_sp',1,'p_tag_sp','parser.py',766),
  ('exploration -> EXPLORATION tag_sp variable explore_var np_check_size','exploration',5,'p_exploration','parser.py',779),
  ('sp_param -> COMMA','sp_param',1,'p_sp_param','parser.py',782),
  ('np_check_size -> RPAREN','np_check_size',1,'p_np_check_size','parser.py',799),
  ('explore_var -> sp_param variable explor_cte','explore_var',3,'p_explore_var','parser.py',824),
  ('explore_var -> empty','explore_var',1,'p_explore_var','parser.py',825),
  ('explor_cte -> sp_param int_const_saver','explor_cte',2,'p_explor_cte','parser.py',829),
  ('explor_cte -> empty','explor_cte',1,'p_explor_cte','parser.py',830),
  ('financial_state -> FINANCIAL_STATE tag_sp variable sp_param variable sp_param variable sp_param variable np_check_size','financial_state',10,'p_financial_state','parser.py',835),
  ('season_analysis -> SEASON_ANALYSIS tag_sp variable np_check_size','season_analysis',4,'p_season_analysis','parser.py',839),
  ('trend_prediction -> TREND_PREDICTION tag_sp variable sp_param int_const_saver sp_param int_const_saver sp_param int_const_saver np_check_size','trend_prediction',10,'p_trend_prediction','parser.py',845),
  ('dummi_regression -> DUMMI_REGRESSION tag_sp variable sp_param variable dr_array dr_int np_check_size','dummi_regression',8,'p_dummi_regression','parser.py',849),
  ('dr_array -> COMMA LSQBRACKET CTE_CHAR dr_array_mp RSQBRACKET','dr_array',5,'p_dr_array','parser.py',852),
  ('dr_array -> empty','dr_array',1,'p_dr_array','parser.py',853),
  ('dr_array_mp -> COMMA CTE_CHAR dr_array_mp','dr_array_mp',3,'p_dr_array_mp','parser.py',856),
  ('dr_array_mp -> empty','dr_array_mp',1,'p_dr_array_mp','parser.py',857),
  ('dr_int -> COMMA int_const_saver','dr_int',2,'p_dr_int','parser.py',860),
  ('dr_int -> empty','dr_int',1,'p_dr_int','parser.py',861),
  ('model_predict -> MODEL_PREDICT tag_sp variable sp_param variable np_check_size','model_predict',6,'p_model_predict','parser.py',865),
  ('exp -> t_exp release_exp exp_or','exp',3,'p_exp','parser.py',870),
  ('exp_or -> exp_keep_or exp','exp_or',2,'p_exp_or','parser.py',874),
  ('exp_or -> empty','exp_or',1,'p_exp_or','parser.py',875),
  ('exp_keep_or -> OR','exp_keep_or',1,'p_exp_keep_or','parser.py',878),
  ('t_exp -> expression release_exp t_exp_and','t_exp',3,'p_t_exp','parser.py',887),
  ('t_exp_and -> keep_and t_exp','t_exp_and',2,'p_t_exp_and','parser.py',892),
  ('t_exp_and -> empty','t_exp_and',1,'p_t_exp_and','parser.py',893),
  ('keep_and -> AND','keep_and',1,'p_keep_and','parser.py',896),
  ('expression -> m_exp release_exp expression_comp','expression',3,'p_expression','parser.py',905),
  ('expression_comp -> expression_comp_2 m_exp release_exp','expression_comp',3,'p_expression_comp','parser.py',911),
  ('expression_comp -> empty','expression_comp',1,'p_expression_comp','parser.py',912),
  ('expression_comp_2 -> GTHAN','expression_comp_2',1,'p_expression_comp_2','parser.py',917),
  ('expression_comp_2 -> EQUAL','expression_comp_2',1,'p_expression_comp_2','parser.py',918),
  ('expression_comp_2 -> NOTEQUAL','expression_comp_2',1,'p_expression_comp_2','parser.py',919),
  ('expression_comp_2 -> LTHAN','expression_comp_2',1,'p_expression_comp_2','parser.py',920),
  ('expression_comp_2 -> GORE','expression_comp_2',1,'p_expression_comp_2','parser.py',921),
  ('expression_comp_2 -> LORE','expression_comp_2',1,'p_expression_comp_2','parser.py',922),
  ('m_exp -> term release_exp m_exp_sr','m_exp',3,'p_m_exp','parser.py',932),
  ('m_exp_sr -> m_exp_sr_2 m_exp','m_exp_sr',2,'p_m_exp_sr','parser.py',939),
  ('m_exp_sr -> empty','m_exp_sr',1,'p_m_exp_sr','parser.py',940),
  ('m_exp_sr_2 -> PLUS','m_exp_sr_2',1,'p_m_exp_sr_2','parser.py',943),
  ('m_exp_sr_2 -> MINUS','m_exp_sr_2',1,'p_m_exp_sr_2','parser.py',944),
  ('term -> sub_factor release_exp term_pc','term',3,'p_term','parser.py',952),
  ('term_pc -> term_pc_2 term','term_pc',2,'p_term_pc','parser.py',958),
  ('term_pc -> empty','term_pc',1,'p_term_pc','parser.py',959),
  ('term_pc_2 -> MULTIPLY','term_pc_2',1,'p_term_pc_2','parser.py',962),
  ('term_pc_2 -> DIVIDE','term_pc_2',1,'p_term_pc_2','parser.py',963),
  ('term_pc_2 -> MODULE','term_pc_2',1,'p_term_pc_2','parser.py',964),
  ('sub_factor -> factor release_exp sub_factor_pc','sub_factor',3,'p_sub_factor','parser.py',970),
  ('sub_factor_pc -> sub_factor_pc_2 sub_factor','sub_factor_pc',2,'p_sub_factor_pc','parser.py',976),
  ('sub_factor_pc -> empty','sub_factor_pc',1,'p_sub_factor_pc','parser.py',977),
  ('sub_factor_pc_2 -> POWER empty','sub_factor_pc_2',2,'p_sub_factor_pc_2','parser.py',980),
  ('factor -> factor_exp','factor',1,'p_factor','parser.py',988),
  ('factor -> factor_cte','factor',1,'p_factor','parser.py',989),
  ('factor -> variable','factor',1,'p_factor','parser.py',990),
  ('factor -> call_function','factor',1,'p_factor','parser.py',991),
  ('factor_exp -> false_button exp release_false_button','factor_exp',3,'p_factor_exp','parser.py',998),
  ('false_button -> LPAREN','false_button',1,'p_false_button','parser.py',1003),
  ('release_false_button -> RPAREN','release_false_button',1,'p_release_false_button','parser.py',1009),
  ('factor_cte -> CTE_FLOAT','factor_cte',1,'p_factor_cte','parser.py',1016),
  ('factor_cte -> CTE_INT','factor_cte',1,'p_factor_cte','parser.py',1017),
  ('factor_cte -> CTE_CHAR','factor_cte',1,'p_factor_cte','parser.py',1018),
]
