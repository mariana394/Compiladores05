
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS ASSIGN CHAR COLON COMMA CTE_CHAR CTE_FLOAT CTE_INT DATAFRAME DATE DIVIDE DO DUMMI_REGRESSION ELSE END EQUAL EXPLORATION FINANCIAL_STATE FLOAT FOR FROM FUNCTION GORE GTHAN ID IF IMPORT INT LBRACKET LORE LPAREN LSQBRACKET LTHAN MAIN MINUS MODEL_PREDICT MODULE MULTIPLY NOTEQUAL OR PLUS POWER PRINT PROGRAM RBRACKET READ RETURN RPAREN RSQBRACKET SEASON_ANALYSIS SEMICOLON TO TREND_PREDICTION VAR VOID WHILEprogram : PROGRAM ID goto_main program_libraries program_vars program_function program_main end goto_main : SEMICOLONend : END empty : id_saver : ID empty int_const_saver : CTE_INT \n                       | emptyrelease_exp : emptyresources : emptyprogram_libraries : from_library import_library \n                         | emptyfrom_library : FROM ID\n                    | emptyimport_library : IMPORT ID AS ID  program_librariesvar_type : var_c_type\n                | var_s_typeprogram_vars : VAR var_type  \n                    | emptys_type : INT \n              | FLOAT\n              | CHARc_type : DATAFRAME\n              | DATEvar_multiple : var_type\n                    | emptyvar_c_type : c_type id_saver add_c_var var_c_type2 SEMICOLON var_multiplevar_c_type2 : COMMA id_saver add_c_var var_c_type2\n                   | emptyadd_c_var : emptyvar_s_type : s_type id_saver var_s_array add_s_var var_s_type2 SEMICOLON var_multiplevar_s_type2 : COMMA id_saver var_s_array add_s_var var_s_type2\n                   | emptyadd_s_var : emptyvar_s_array : LSQBRACKET var_s_dimesions RSQBRACKET var_s_matrix \n                   | emptyvar_s_matrix : LSQBRACKET var_s_dimesions RSQBRACKET\n                    | emptyvar_s_dimesions : CTE_INT emptyvariable : id_saver variable_arrayvariable_array : LSQBRACKET exp RSQBRACKET variable_matrix\n                      | emptyvariable_matrix : LSQBRACKET exp RSQBRACKET\n                       | emptyprogram_function : FUNCTION resources f_type id_saver func_creator  LPAREN param RPAREN add_func_glob program_vars inner_body return end_function program_function\n                        | emptyf_type : INT \n              | FLOAT\n              | CHAR\n              | VOIDfunc_creator : emptyadd_func_glob : LBRACKETend_function : RBRACKETparam : s_type id_saver add_params param2param2 : COMMA s_type id_saver add_params param2\n              | emptyadd_params : emptyreturn : return_np exp return_quad SEMICOLON\n              | empty_path_returnreturn_np : RETURNreturn_quad : emptyempty_path_return : emptyprogram_main :  main_id LBRACKET program_vars inner_body RBRACKETmain_id : MAIN resources body : LBRACKET inner_body RBRACKETinner_body :  statement inner_body\n                  | emptyassign : variable keep_assign specialf_assign end_assignspecialf_assign : exp\n                       | special_function\n                       | readkeep_assign : ASSIGN emptyend_assign : SEMICOLON emptycondition : IF LPAREN exp RPAREN condition_GOTOF body condition2 SEMICOLON end_conditioncondition2 : ELSE condition_GOTO body\n                 | emptycondition_GOTOF : emptycondition_GOTO : emptyend_condition : emptyprint : PRINT LPAREN print_many RPAREN SEMICOLON end_print_npprint_type : expprint_many : print_type print_many2 print_many2 : COMMA print_many_np print_many\n                   | emptyprint_many_np : emptyend_print_np : emptyread : READ LPAREN variable RPAREN read_npread_np : emptycycle : for\n             | whilewhile : DO seed body WHILE LPAREN exp RPAREN SEMICOLON gotoVseed : emptygotoV : emptyfor : FOR LPAREN for_control keep_assign exp for_np1 for_end body for_np2for_control : id_saverfor_np1 :  TOfor_end : int_const_saver RPARENfor_np2 : SEMICOLONcall_function : function_saver function_flag call_params check_not_void check_not_void : RPARENcall_void_function : function_saver function_flag call_params RPAREN check_voidcheck_void : SEMICOLONfunction_saver : ID emptyfunction_flag : LPARENcall_params : exp exp_many\n                   | emptyexp_many : COMMA exp exp_many\n                | emptystatement : assign\n                 | condition\n                 | print\n                 | cycle\n                 | call_void_functionspecial_function : exploration\n                        | financial_state\n                        | dummi_regression\n                        | season_analysis\n                        | trend_prediction\n                        | model_predictexploration : EXPLORATION LPAREN variable explore_var explor_cte RPARENexplore_var : COMMA variable\n                   | emptyexplor_cte : COMMA int_const_saver\n                  | emptyfinancial_state : FINANCIAL_STATE LPAREN variable COMMA variable COMMA variable COMMA variable RPARENseason_analysis : SEASON_ANALYSIS LPAREN variable RPARENtrend_prediction : TREND_PREDICTION LPAREN variable COMMA int_const_saver COMMA int_const_saver COMMA int_const_saver RPARENdummi_regression : DUMMI_REGRESSION LPAREN variable COMMA variable dr_array dr_int RPARENdr_array : COMMA LSQBRACKET CTE_CHAR dr_array_mp RSQBRACKET\n                | emptydr_array_mp : COMMA CTE_CHAR dr_array_mp\n                   | emptydr_int : COMMA int_const_saver\n              | emptymodel_predict : MODEL_PREDICT LPAREN variable COMMA variable COMMA RPARENexp : t_exp release_exp exp_orexp_or : exp_keep_or  exp\n              | emptyexp_keep_or : ORt_exp : expression release_exp t_exp_andt_exp_and : keep_and t_exp\n                 | emptykeep_and : AND expression : m_exp release_exp expression_compexpression_comp :  expression_comp_2  m_exp release_exp\n                       |  emptyexpression_comp_2 : GTHAN\n                         | EQUAL\n                         | NOTEQUAL\n                         | LTHAN\n                         | GORE\n                         | LORE\n                         m_exp : term release_exp m_exp_srm_exp_sr : m_exp_sr_2 m_exp\n                | emptym_exp_sr_2 : PLUS\n                  | MINUSterm : sub_factor release_exp term_pcterm_pc : term_pc_2 term\n               | emptyterm_pc_2 : MULTIPLY\n                 | DIVIDE\n                 | MODULEsub_factor : factor release_exp sub_factor_pcsub_factor_pc : sub_factor_pc_2 sub_factor\n                     | emptysub_factor_pc_2 : POWER emptyfactor : factor_exp\n              | factor_cte\n              | variable\n              | call_functionfactor_exp : false_button exp release_false_buttonfalse_button : LPARENrelease_false_button : RPARENfactor_cte : CTE_FLOAT\n                  | CTE_INT\n                  | CTE_CHAR'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,39,40,],[0,-1,-3,]),'ID':([2,9,12,14,19,20,21,22,23,24,25,26,27,28,38,41,43,44,45,46,47,55,58,66,68,69,70,71,72,76,77,85,88,94,95,96,97,98,99,101,103,108,109,110,112,130,145,151,163,165,167,170,171,174,176,177,178,179,180,181,187,192,196,199,206,208,210,213,215,223,225,226,227,228,229,230,232,234,235,237,239,240,241,243,245,251,252,253,254,255,257,261,263,264,272,274,275,278,283,287,288,295,320,323,329,334,336,338,348,349,351,352,353,354,359,],[3,15,-18,29,-17,-15,-16,36,36,-22,-23,-19,-20,-21,54,-4,36,-46,-47,-48,-49,82,36,82,-108,-109,-110,-111,-112,-88,-89,-4,36,150,-4,150,150,150,-103,150,36,-26,-24,-25,-4,-172,150,-71,82,36,-30,-67,-4,36,36,36,36,36,36,36,150,-4,150,150,-72,150,-138,150,-142,150,-146,-147,-148,-149,-150,-151,150,-155,-156,150,-160,-161,-162,150,-4,-4,150,-84,-100,-101,150,150,-4,-51,36,36,36,36,-166,-79,-85,82,36,36,-4,-4,150,-59,-73,-78,-93,-97,-90,-92,36,]),'SEMICOLON':([3,35,36,37,48,49,50,51,53,57,59,60,61,79,86,87,89,90,100,102,111,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,131,138,139,140,141,142,143,144,146,147,148,150,166,168,172,173,175,182,183,184,185,188,190,194,198,204,205,207,209,212,214,222,224,231,233,236,238,242,244,246,247,258,259,262,267,268,269,270,276,279,280,281,282,284,285,286,299,300,311,312,314,315,318,321,332,347,350,357,362,365,366,374,377,],[5,-4,-4,-4,-4,-29,-5,-4,-35,85,-28,-4,-33,-4,-4,112,-32,-4,-39,-41,-4,-4,-34,-37,-169,171,-68,-69,-70,-4,-113,-114,-115,-116,-117,-118,-4,-4,-4,-4,-4,-167,-168,-170,-174,-175,-176,-4,-27,-4,-4,-8,-4,-4,-4,-4,-4,-5,251,255,-4,-4,-36,-135,-137,-139,-141,-143,-145,-152,-154,-157,-159,-163,-165,-171,-173,-40,-43,-64,-31,-136,-4,-140,-125,-4,-153,-158,-164,-98,-99,-4,-86,-87,-144,329,-75,-42,334,-119,352,-134,-74,-4,-127,373,-60,-124,-126,]),'FROM':([4,5,54,],[9,-2,9,]),'VAR':([4,5,6,8,13,41,54,64,263,264,],[-4,-2,11,-11,-10,11,-4,-14,11,-51,]),'FUNCTION':([4,5,6,8,10,12,13,19,20,21,54,64,85,108,109,110,112,167,355,356,],[-4,-2,-4,-11,17,-18,-10,-17,-15,-16,-4,-14,-4,-26,-24,-25,-4,-30,17,-52,]),'MAIN':([4,5,6,8,10,12,13,16,18,19,20,21,54,64,85,108,109,110,112,167,355,356,364,],[-4,-2,-4,-11,-4,-18,-10,32,-45,-17,-15,-16,-4,-14,-4,-26,-24,-25,-4,-30,-4,-52,-44,]),'IMPORT':([4,5,7,8,15,54,],[-4,-2,14,-13,-12,-4,]),'DATAFRAME':([11,85,112,],[24,24,24,]),'DATE':([11,85,112,],[25,25,25,]),'INT':([11,17,33,34,85,107,112,297,],[26,-4,44,-9,26,26,26,26,]),'FLOAT':([11,17,33,34,85,107,112,297,],[27,-4,45,-9,27,27,27,27,]),'CHAR':([11,17,33,34,85,107,112,297,],[28,-4,46,-9,28,28,28,28,]),'IF':([12,19,20,21,41,55,66,68,69,70,71,72,76,77,85,108,109,110,112,163,167,170,171,206,251,254,255,263,264,287,288,295,329,334,348,349,351,352,353,354,],[-18,-17,-15,-16,-4,74,74,-108,-109,-110,-111,-112,-88,-89,-4,-26,-24,-25,-4,74,-30,-67,-4,-72,-4,-100,-101,-4,-51,-79,-85,74,-4,-4,-73,-78,-93,-97,-90,-92,]),'PRINT':([12,19,20,21,41,55,66,68,69,70,71,72,76,77,85,108,109,110,112,163,167,170,171,206,251,254,255,263,264,287,288,295,329,334,348,349,351,352,353,354,],[-18,-17,-15,-16,-4,75,75,-108,-109,-110,-111,-112,-88,-89,-4,-26,-24,-25,-4,75,-30,-67,-4,-72,-4,-100,-101,-4,-51,-79,-85,75,-4,-4,-73,-78,-93,-97,-90,-92,]),'FOR':([12,19,20,21,41,55,66,68,69,70,71,72,76,77,85,108,109,110,112,163,167,170,171,206,251,254,255,263,264,287,288,295,329,334,348,349,351,352,353,354,],[-18,-17,-15,-16,-4,80,80,-108,-109,-110,-111,-112,-88,-89,-4,-26,-24,-25,-4,80,-30,-67,-4,-72,-4,-100,-101,-4,-51,-79,-85,80,-4,-4,-73,-78,-93,-97,-90,-92,]),'DO':([12,19,20,21,41,55,66,68,69,70,71,72,76,77,85,108,109,110,112,163,167,170,171,206,251,254,255,263,264,287,288,295,329,334,348,349,351,352,353,354,],[-18,-17,-15,-16,-4,81,81,-108,-109,-110,-111,-112,-88,-89,-4,-26,-24,-25,-4,81,-30,-67,-4,-72,-4,-100,-101,-4,-51,-79,-85,81,-4,-4,-73,-78,-93,-97,-90,-92,]),'RBRACKET':([12,19,20,21,41,55,65,66,67,68,69,70,71,72,76,77,85,93,108,109,110,112,163,167,170,171,201,206,251,254,255,263,264,287,288,295,319,329,334,335,337,339,348,349,351,352,353,354,373,],[-18,-17,-15,-16,-4,-4,92,-4,-66,-108,-109,-110,-111,-112,-88,-89,-4,-65,-26,-24,-25,-4,-4,-30,-67,-4,262,-72,-4,-100,-101,-4,-51,-79,-85,-4,-4,-4,-4,356,-58,-61,-73,-78,-93,-97,-90,-92,-57,]),'RETURN':([12,19,20,21,66,67,68,69,70,71,72,76,77,85,93,108,109,110,112,167,170,171,206,251,254,255,263,264,287,288,295,319,329,334,348,349,351,352,353,354,],[-18,-17,-15,-16,-4,-66,-108,-109,-110,-111,-112,-88,-89,-4,-65,-26,-24,-25,-4,-30,-67,-4,-72,-4,-100,-101,-4,-51,-79,-85,-4,338,-4,-4,-73,-78,-93,-97,-90,-92,]),'VOID':([17,33,34,],[-4,47,-9,]),'AS':([29,],[38,]),'END':([30,92,],[40,-62,]),'LBRACKET':([31,32,34,42,81,104,105,189,202,249,250,313,316,330,331,333,],[41,-4,-9,-63,-4,163,-91,-4,264,163,-76,-4,163,163,-77,-96,]),'COMMA':([35,36,37,48,49,50,51,53,60,61,79,86,90,100,102,111,113,115,116,117,122,131,138,139,140,141,142,143,144,146,147,148,150,154,155,157,168,172,173,175,182,183,184,185,188,198,203,204,205,207,209,212,214,216,217,218,220,221,222,224,231,233,236,238,242,244,246,247,256,258,259,265,266,268,270,271,273,277,279,280,281,282,284,285,304,305,306,307,308,309,310,311,315,325,326,327,340,341,346,358,360,375,376,],[-4,-4,-4,58,-29,-5,-4,-35,88,-33,-4,-4,-4,-39,-41,58,-4,-34,-37,-169,-4,-4,-4,-4,-4,-4,-167,-168,-170,-174,-175,-176,-4,192,-80,196,-4,-4,-8,-4,-4,-4,-4,-4,-5,-4,-4,88,-36,-135,-137,-139,-141,272,274,275,277,278,-143,-145,-152,-154,-157,-159,-163,-165,-171,-173,196,-40,-43,297,-56,-136,-140,302,-121,-4,-4,-153,-158,-164,-98,-99,-120,323,324,327,-6,-7,328,-144,-42,343,-129,-4,-4,359,363,297,369,369,-128,]),'LSQBRACKET':([36,37,50,79,82,90,106,113,150,188,198,324,],[-4,52,-5,101,-4,114,-5,52,-4,-5,257,342,]),'LPAREN':([36,50,56,74,75,78,80,82,83,84,94,95,96,97,98,99,101,106,129,130,132,133,134,135,136,137,145,149,150,151,187,188,192,196,199,200,208,210,213,215,223,225,226,227,228,229,230,232,234,235,237,239,240,241,243,245,252,253,257,261,283,336,338,],[-4,-5,-4,96,97,99,103,-4,107,-50,130,-4,130,130,130,-103,130,-102,174,-172,176,177,178,179,180,181,130,99,-4,-71,130,-102,-4,130,130,261,130,-138,130,-142,130,-146,-147,-148,-149,-150,-151,130,-155,-156,130,-160,-161,-162,130,-4,130,-84,130,130,-166,130,-59,]),'ASSIGN':([36,50,73,79,82,100,102,106,160,161,198,258,259,315,],[-4,-5,95,-4,-4,-39,-41,-5,95,-94,-4,-40,-43,-42,]),'RPAREN':([36,50,79,98,99,100,102,117,122,131,138,139,140,141,142,143,144,146,147,148,150,152,153,154,155,156,157,158,164,172,173,175,182,183,184,185,186,187,188,191,193,195,197,198,203,207,209,211,212,214,216,219,222,224,231,233,236,238,242,244,246,247,248,256,258,259,265,266,268,270,271,273,279,280,281,282,284,285,289,290,292,293,294,296,298,301,302,303,304,306,308,309,311,315,317,322,325,326,328,340,343,344,345,358,361,363,367,368,372,376,],[-4,-5,-4,-4,-103,-39,-41,-169,-4,-4,-4,-4,-4,-4,-167,-168,-170,-174,-175,-176,-4,189,190,-4,-80,194,-4,-105,202,-4,-8,-4,-4,-4,-4,-4,247,-4,-5,-81,-83,-104,-107,-4,-4,-135,-137,269,-139,-141,-4,276,-143,-145,-152,-154,-157,-159,-163,-165,-171,-173,285,-4,-40,-43,-4,-56,-136,-140,-4,-121,-4,-153,-158,-164,-98,-99,-82,-106,-4,-95,318,-53,-55,321,-4,-123,-120,-4,-6,-7,-144,-42,333,-122,-4,-129,347,-4,-4,362,-133,-4,-132,-4,-54,374,377,-128,]),'CTE_INT':([52,94,95,96,97,98,99,101,114,130,145,151,187,192,196,199,208,210,213,215,223,225,226,227,228,229,230,232,234,235,237,239,240,241,243,245,252,253,257,261,277,283,292,293,302,327,336,338,343,363,],[63,147,-4,147,147,147,-103,147,63,-172,147,-71,147,-4,147,147,147,-138,147,-142,147,-146,-147,-148,-149,-150,-151,147,-155,-156,147,-160,-161,-162,147,-4,147,-84,147,147,308,-166,308,-95,308,308,147,-59,308,308,]),'RSQBRACKET':([62,63,79,91,100,102,117,122,131,138,139,140,141,142,143,144,146,147,148,150,159,169,172,173,175,182,183,184,185,188,198,207,209,212,214,222,224,231,233,236,238,242,244,246,247,258,259,268,270,279,280,281,282,284,285,291,311,315,360,370,371,375,378,],[90,-4,-4,-38,-39,-41,-169,-4,-4,-4,-4,-4,-4,-167,-168,-170,-174,-175,-176,-4,198,205,-4,-8,-4,-4,-4,-4,-4,-5,-4,-135,-137,-139,-141,-143,-145,-152,-154,-157,-159,-163,-165,-171,-173,-40,-43,-136,-140,-4,-153,-158,-164,-98,-99,315,-144,-42,-4,376,-131,-4,-130,]),'POWER':([79,100,102,117,141,142,143,144,146,147,148,150,173,185,188,198,246,247,258,259,284,285,315,],[-4,-39,-41,-169,-4,-167,-168,-170,-174,-175,-176,-4,-8,245,-5,-4,-171,-173,-40,-43,-98,-99,-42,]),'MULTIPLY':([79,100,102,117,140,141,142,143,144,146,147,148,150,173,184,185,188,198,242,244,246,247,258,259,282,284,285,315,],[-4,-39,-41,-169,-4,-4,-167,-168,-170,-174,-175,-176,-4,-8,239,-4,-5,-4,-163,-165,-171,-173,-40,-43,-164,-98,-99,-42,]),'DIVIDE':([79,100,102,117,140,141,142,143,144,146,147,148,150,173,184,185,188,198,242,244,246,247,258,259,282,284,285,315,],[-4,-39,-41,-169,-4,-4,-167,-168,-170,-174,-175,-176,-4,-8,240,-4,-5,-4,-163,-165,-171,-173,-40,-43,-164,-98,-99,-42,]),'MODULE':([79,100,102,117,140,141,142,143,144,146,147,148,150,173,184,185,188,198,242,244,246,247,258,259,282,284,285,315,],[-4,-39,-41,-169,-4,-4,-167,-168,-170,-174,-175,-176,-4,-8,241,-4,-5,-4,-163,-165,-171,-173,-40,-43,-164,-98,-99,-42,]),'PLUS':([79,100,102,117,139,140,141,142,143,144,146,147,148,150,173,183,184,185,188,198,236,238,242,244,246,247,258,259,281,282,284,285,315,],[-4,-39,-41,-169,-4,-4,-4,-167,-168,-170,-174,-175,-176,-4,-8,234,-4,-4,-5,-4,-157,-159,-163,-165,-171,-173,-40,-43,-158,-164,-98,-99,-42,]),'MINUS':([79,100,102,117,139,140,141,142,143,144,146,147,148,150,173,183,184,185,188,198,236,238,242,244,246,247,258,259,281,282,284,285,315,],[-4,-39,-41,-169,-4,-4,-4,-167,-168,-170,-174,-175,-176,-4,-8,235,-4,-4,-5,-4,-157,-159,-163,-165,-171,-173,-40,-43,-158,-164,-98,-99,-42,]),'GTHAN':([79,100,102,117,138,139,140,141,142,143,144,146,147,148,150,173,182,183,184,185,188,198,231,233,236,238,242,244,246,247,258,259,280,281,282,284,285,315,],[-4,-39,-41,-169,-4,-4,-4,-4,-167,-168,-170,-174,-175,-176,-4,-8,225,-4,-4,-4,-5,-4,-152,-154,-157,-159,-163,-165,-171,-173,-40,-43,-153,-158,-164,-98,-99,-42,]),'EQUAL':([79,100,102,117,138,139,140,141,142,143,144,146,147,148,150,173,182,183,184,185,188,198,231,233,236,238,242,244,246,247,258,259,280,281,282,284,285,315,],[-4,-39,-41,-169,-4,-4,-4,-4,-167,-168,-170,-174,-175,-176,-4,-8,226,-4,-4,-4,-5,-4,-152,-154,-157,-159,-163,-165,-171,-173,-40,-43,-153,-158,-164,-98,-99,-42,]),'NOTEQUAL':([79,100,102,117,138,139,140,141,142,143,144,146,147,148,150,173,182,183,184,185,188,198,231,233,236,238,242,244,246,247,258,259,280,281,282,284,285,315,],[-4,-39,-41,-169,-4,-4,-4,-4,-167,-168,-170,-174,-175,-176,-4,-8,227,-4,-4,-4,-5,-4,-152,-154,-157,-159,-163,-165,-171,-173,-40,-43,-153,-158,-164,-98,-99,-42,]),'LTHAN':([79,100,102,117,138,139,140,141,142,143,144,146,147,148,150,173,182,183,184,185,188,198,231,233,236,238,242,244,246,247,258,259,280,281,282,284,285,315,],[-4,-39,-41,-169,-4,-4,-4,-4,-167,-168,-170,-174,-175,-176,-4,-8,228,-4,-4,-4,-5,-4,-152,-154,-157,-159,-163,-165,-171,-173,-40,-43,-153,-158,-164,-98,-99,-42,]),'GORE':([79,100,102,117,138,139,140,141,142,143,144,146,147,148,150,173,182,183,184,185,188,198,231,233,236,238,242,244,246,247,258,259,280,281,282,284,285,315,],[-4,-39,-41,-169,-4,-4,-4,-4,-167,-168,-170,-174,-175,-176,-4,-8,229,-4,-4,-4,-5,-4,-152,-154,-157,-159,-163,-165,-171,-173,-40,-43,-153,-158,-164,-98,-99,-42,]),'LORE':([79,100,102,117,138,139,140,141,142,143,144,146,147,148,150,173,182,183,184,185,188,198,231,233,236,238,242,244,246,247,258,259,280,281,282,284,285,315,],[-4,-39,-41,-169,-4,-4,-4,-4,-167,-168,-170,-174,-175,-176,-4,-8,230,-4,-4,-4,-5,-4,-152,-154,-157,-159,-163,-165,-171,-173,-40,-43,-153,-158,-164,-98,-99,-42,]),'AND':([79,100,102,117,131,138,139,140,141,142,143,144,146,147,148,150,173,175,182,183,184,185,188,198,222,224,231,233,236,238,242,244,246,247,258,259,279,280,281,282,284,285,311,315,],[-4,-39,-41,-169,-4,-4,-4,-4,-4,-167,-168,-170,-174,-175,-176,-4,-8,215,-4,-4,-4,-4,-5,-4,-143,-145,-152,-154,-157,-159,-163,-165,-171,-173,-40,-43,-4,-153,-158,-164,-98,-99,-144,-42,]),'OR':([79,100,102,117,122,131,138,139,140,141,142,143,144,146,147,148,150,172,173,175,182,183,184,185,188,198,212,214,222,224,231,233,236,238,242,244,246,247,258,259,270,279,280,281,282,284,285,311,315,],[-4,-39,-41,-169,-4,-4,-4,-4,-4,-4,-167,-168,-170,-174,-175,-176,-4,210,-8,-4,-4,-4,-4,-4,-5,-4,-139,-141,-143,-145,-152,-154,-157,-159,-163,-165,-171,-173,-40,-43,-140,-4,-153,-158,-164,-98,-99,-144,-42,]),'TO':([79,100,102,117,122,131,138,139,140,141,142,143,144,146,147,148,150,172,173,175,182,183,184,185,188,198,207,209,212,214,222,224,231,233,236,238,242,244,246,247,258,259,260,268,270,279,280,281,282,284,285,311,315,],[-4,-39,-41,-169,-4,-4,-4,-4,-4,-4,-167,-168,-170,-174,-175,-176,-4,-4,-8,-4,-4,-4,-4,-4,-5,-4,-135,-137,-139,-141,-143,-145,-152,-154,-157,-159,-163,-165,-171,-173,-40,-43,293,-136,-140,-4,-153,-158,-164,-98,-99,-144,-42,]),'READ':([94,95,151,],[129,-4,-71,]),'EXPLORATION':([94,95,151,],[132,-4,-71,]),'FINANCIAL_STATE':([94,95,151,],[133,-4,-71,]),'DUMMI_REGRESSION':([94,95,151,],[134,-4,-71,]),'SEASON_ANALYSIS':([94,95,151,],[135,-4,-71,]),'TREND_PREDICTION':([94,95,151,],[136,-4,-71,]),'MODEL_PREDICT':([94,95,151,],[137,-4,-71,]),'CTE_FLOAT':([94,95,96,97,98,99,101,130,145,151,187,192,196,199,208,210,213,215,223,225,226,227,228,229,230,232,234,235,237,239,240,241,243,245,252,253,257,261,283,336,338,],[146,-4,146,146,146,-103,146,-172,146,-71,146,-4,146,146,146,-138,146,-142,146,-146,-147,-148,-149,-150,-151,146,-155,-156,146,-160,-161,-162,146,-4,146,-84,146,146,-166,146,-59,]),'CTE_CHAR':([94,95,96,97,98,99,101,130,145,151,187,192,196,199,208,210,213,215,223,225,226,227,228,229,230,232,234,235,237,239,240,241,243,245,252,253,257,261,283,336,338,342,369,],[148,-4,148,148,148,-103,148,-172,148,-71,148,-4,148,148,148,-138,148,-142,148,-146,-147,-148,-149,-150,-151,148,-155,-156,148,-160,-161,-162,148,-4,148,-84,148,148,-166,148,-59,360,375,]),'WHILE':([162,262,],[200,-64,]),'ELSE':([262,286,],[-64,313,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'goto_main':([3,],[4,]),'program_libraries':([4,54,],[6,64,]),'from_library':([4,54,],[7,7,]),'empty':([4,6,10,17,32,35,36,37,41,48,51,54,55,56,60,63,66,79,81,82,85,86,90,95,98,111,112,113,122,131,138,139,140,141,150,154,157,163,168,171,172,175,182,183,184,185,187,189,192,198,203,204,216,245,251,256,263,265,269,271,277,279,286,292,295,302,306,313,319,325,327,329,334,340,343,355,357,358,360,363,375,],[8,12,18,34,34,49,50,53,12,59,61,8,67,84,89,91,67,102,105,106,110,49,116,151,158,59,110,53,173,173,173,173,173,173,188,193,197,67,61,206,209,214,224,233,238,244,158,250,253,259,266,89,273,283,288,197,12,298,300,303,309,173,314,309,67,309,326,331,339,345,309,349,354,266,309,18,366,298,371,309,371,]),'program_vars':([6,41,263,],[10,55,295,]),'import_library':([7,],[13,]),'program_function':([10,355,],[16,364,]),'var_type':([11,85,112,],[19,109,109,]),'var_c_type':([11,85,112,],[20,20,20,]),'var_s_type':([11,85,112,],[21,21,21,]),'c_type':([11,85,112,],[22,22,22,]),'s_type':([11,85,107,112,297,],[23,23,165,23,320,]),'program_main':([16,],[30,]),'main_id':([16,],[31,]),'resources':([17,32,],[33,42,]),'id_saver':([22,23,43,55,58,66,88,94,96,97,98,101,103,145,163,165,174,176,177,178,179,180,181,187,196,199,208,213,223,232,237,243,252,257,261,272,274,275,278,295,320,323,336,359,],[35,37,56,79,86,79,113,79,79,79,79,79,161,79,79,203,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,340,79,79,79,]),'end':([30,],[39,]),'f_type':([33,],[43,]),'add_c_var':([35,86,],[48,111,]),'var_s_array':([37,113,],[51,168,]),'var_c_type2':([48,111,],[57,166,]),'add_s_var':([51,168,],[60,204,]),'var_s_dimesions':([52,114,],[62,169,]),'inner_body':([55,66,163,295,],[65,93,201,319,]),'statement':([55,66,163,295,],[66,66,66,66,]),'assign':([55,66,163,295,],[68,68,68,68,]),'condition':([55,66,163,295,],[69,69,69,69,]),'print':([55,66,163,295,],[70,70,70,70,]),'cycle':([55,66,163,295,],[71,71,71,71,]),'call_void_function':([55,66,163,295,],[72,72,72,72,]),'variable':([55,66,94,96,97,98,101,145,163,174,176,177,178,179,180,181,187,196,199,208,213,223,232,237,243,252,257,261,272,274,275,278,295,323,336,359,],[73,73,117,117,117,117,117,117,73,211,216,217,218,219,220,221,117,117,117,117,117,117,117,117,117,117,117,117,304,305,306,310,73,341,117,368,]),'for':([55,66,163,295,],[76,76,76,76,]),'while':([55,66,163,295,],[77,77,77,77,]),'function_saver':([55,66,94,96,97,98,101,145,163,187,196,199,208,213,223,232,237,243,252,257,261,295,336,],[78,78,149,149,149,149,149,149,78,149,149,149,149,149,149,149,149,149,149,149,149,78,149,]),'func_creator':([56,],[83,]),'var_s_type2':([60,204,],[87,267,]),'keep_assign':([73,160,],[94,199,]),'function_flag':([78,149,],[98,187,]),'variable_array':([79,],[100,]),'seed':([81,],[104,]),'var_multiple':([85,112,],[108,167,]),'var_s_matrix':([90,],[115,]),'specialf_assign':([94,],[118,]),'exp':([94,96,97,98,101,145,187,196,199,208,252,257,261,336,],[119,152,155,157,159,186,157,256,260,268,155,291,294,357,]),'special_function':([94,],[120,]),'read':([94,],[121,]),'t_exp':([94,96,97,98,101,145,187,196,199,208,213,252,257,261,336,],[122,122,122,122,122,122,122,122,122,122,270,122,122,122,122,]),'exploration':([94,],[123,]),'financial_state':([94,],[124,]),'dummi_regression':([94,],[125,]),'season_analysis':([94,],[126,]),'trend_prediction':([94,],[127,]),'model_predict':([94,],[128,]),'expression':([94,96,97,98,101,145,187,196,199,208,213,252,257,261,336,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'m_exp':([94,96,97,98,101,145,187,196,199,208,213,223,232,252,257,261,336,],[138,138,138,138,138,138,138,138,138,138,138,279,280,138,138,138,138,]),'term':([94,96,97,98,101,145,187,196,199,208,213,223,232,237,252,257,261,336,],[139,139,139,139,139,139,139,139,139,139,139,139,139,281,139,139,139,139,]),'sub_factor':([94,96,97,98,101,145,187,196,199,208,213,223,232,237,243,252,257,261,336,],[140,140,140,140,140,140,140,140,140,140,140,140,140,140,282,140,140,140,140,]),'factor':([94,96,97,98,101,145,187,196,199,208,213,223,232,237,243,252,257,261,336,],[141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,]),'factor_exp':([94,96,97,98,101,145,187,196,199,208,213,223,232,237,243,252,257,261,336,],[142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,]),'factor_cte':([94,96,97,98,101,145,187,196,199,208,213,223,232,237,243,252,257,261,336,],[143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,]),'call_function':([94,96,97,98,101,145,187,196,199,208,213,223,232,237,243,252,257,261,336,],[144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,]),'false_button':([94,96,97,98,101,145,187,196,199,208,213,223,232,237,243,252,257,261,336,],[145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,]),'print_many':([97,252,],[153,289,]),'print_type':([97,252,],[154,154,]),'call_params':([98,187,],[156,248,]),'for_control':([103,],[160,]),'body':([104,249,316,330,],[162,286,332,350,]),'param':([107,],[164,]),'end_assign':([118,],[170,]),'release_exp':([122,131,138,139,140,141,279,],[172,175,182,183,184,185,311,]),'print_many2':([154,],[191,]),'exp_many':([157,256,],[195,290,]),'exp_or':([172,],[207,]),'exp_keep_or':([172,],[208,]),'t_exp_and':([175,],[212,]),'keep_and':([175,],[213,]),'expression_comp':([182,],[222,]),'expression_comp_2':([182,],[223,]),'m_exp_sr':([183,],[231,]),'m_exp_sr_2':([183,],[232,]),'term_pc':([184,],[236,]),'term_pc_2':([184,],[237,]),'sub_factor_pc':([185,],[242,]),'sub_factor_pc_2':([185,],[243,]),'release_false_button':([186,],[246,]),'condition_GOTOF':([189,],[249,]),'print_many_np':([192,],[252,]),'check_void':([194,],[254,]),'variable_matrix':([198,],[258,]),'add_func_glob':([202,],[263,]),'add_params':([203,340,],[265,358,]),'explore_var':([216,],[271,]),'check_not_void':([248,],[284,]),'end_print_np':([251,],[287,]),'for_np1':([260,],[292,]),'param2':([265,358,],[296,367,]),'read_np':([269,],[299,]),'explor_cte':([271,],[301,]),'int_const_saver':([277,292,302,327,343,363,],[307,317,322,346,361,372,]),'condition2':([286,],[312,]),'for_end':([292,],[316,]),'dr_array':([306,],[325,]),'condition_GOTO':([313,],[330,]),'return':([319,],[335,]),'return_np':([319,],[336,]),'empty_path_return':([319,],[337,]),'dr_int':([325,],[344,]),'end_condition':([329,],[348,]),'for_np2':([332,],[351,]),'gotoV':([334,],[353,]),'end_function':([335,],[355,]),'return_quad':([357,],[365,]),'dr_array_mp':([360,375,],[370,378,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID goto_main program_libraries program_vars program_function program_main end','program',8,'p_program','parser.py',36),
  ('goto_main -> SEMICOLON','goto_main',1,'p_goto_main','parser.py',40),
  ('end -> END','end',1,'p_end','parser.py',44),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',55),
  ('id_saver -> ID empty','id_saver',2,'p_id_saver','parser.py',62),
  ('int_const_saver -> CTE_INT','int_const_saver',1,'p_int_const_saver','parser.py',70),
  ('int_const_saver -> empty','int_const_saver',1,'p_int_const_saver','parser.py',71),
  ('release_exp -> empty','release_exp',1,'p_release_exp','parser.py',79),
  ('resources -> empty','resources',1,'p_resources','parser.py',85),
  ('program_libraries -> from_library import_library','program_libraries',2,'p_program_libraries','parser.py',102),
  ('program_libraries -> empty','program_libraries',1,'p_program_libraries','parser.py',103),
  ('from_library -> FROM ID','from_library',2,'p_from_library','parser.py',106),
  ('from_library -> empty','from_library',1,'p_from_library','parser.py',107),
  ('import_library -> IMPORT ID AS ID program_libraries','import_library',5,'p_import_library','parser.py',110),
  ('var_type -> var_c_type','var_type',1,'p_var_type','parser.py',115),
  ('var_type -> var_s_type','var_type',1,'p_var_type','parser.py',116),
  ('program_vars -> VAR var_type','program_vars',2,'p_program_vars','parser.py',119),
  ('program_vars -> empty','program_vars',1,'p_program_vars','parser.py',120),
  ('s_type -> INT','s_type',1,'p_s_type','parser.py',130),
  ('s_type -> FLOAT','s_type',1,'p_s_type','parser.py',131),
  ('s_type -> CHAR','s_type',1,'p_s_type','parser.py',132),
  ('c_type -> DATAFRAME','c_type',1,'p_c_type','parser.py',139),
  ('c_type -> DATE','c_type',1,'p_c_type','parser.py',140),
  ('var_multiple -> var_type','var_multiple',1,'p_var_multiple','parser.py',147),
  ('var_multiple -> empty','var_multiple',1,'p_var_multiple','parser.py',148),
  ('var_c_type -> c_type id_saver add_c_var var_c_type2 SEMICOLON var_multiple','var_c_type',6,'p_var_c_type','parser.py',151),
  ('var_c_type2 -> COMMA id_saver add_c_var var_c_type2','var_c_type2',4,'p_var_c_type2','parser.py',154),
  ('var_c_type2 -> empty','var_c_type2',1,'p_var_c_type2','parser.py',155),
  ('add_c_var -> empty','add_c_var',1,'p_add_c_var','parser.py',158),
  ('var_s_type -> s_type id_saver var_s_array add_s_var var_s_type2 SEMICOLON var_multiple','var_s_type',7,'p_var_s_type','parser.py',164),
  ('var_s_type2 -> COMMA id_saver var_s_array add_s_var var_s_type2','var_s_type2',5,'p_var_s_type2','parser.py',167),
  ('var_s_type2 -> empty','var_s_type2',1,'p_var_s_type2','parser.py',168),
  ('add_s_var -> empty','add_s_var',1,'p_add_s_var','parser.py',172),
  ('var_s_array -> LSQBRACKET var_s_dimesions RSQBRACKET var_s_matrix','var_s_array',4,'p_var_s_array','parser.py',180),
  ('var_s_array -> empty','var_s_array',1,'p_var_s_array','parser.py',181),
  ('var_s_matrix -> LSQBRACKET var_s_dimesions RSQBRACKET','var_s_matrix',3,'p_var_s_matrix','parser.py',184),
  ('var_s_matrix -> empty','var_s_matrix',1,'p_var_s_matrix','parser.py',185),
  ('var_s_dimesions -> CTE_INT empty','var_s_dimesions',2,'p_var_s_dimesions','parser.py',189),
  ('variable -> id_saver variable_array','variable',2,'p_variable','parser.py',206),
  ('variable_array -> LSQBRACKET exp RSQBRACKET variable_matrix','variable_array',4,'p_variable_array','parser.py',222),
  ('variable_array -> empty','variable_array',1,'p_variable_array','parser.py',223),
  ('variable_matrix -> LSQBRACKET exp RSQBRACKET','variable_matrix',3,'p_variable_matrix','parser.py',229),
  ('variable_matrix -> empty','variable_matrix',1,'p_variable_matrix','parser.py',230),
  ('program_function -> FUNCTION resources f_type id_saver func_creator LPAREN param RPAREN add_func_glob program_vars inner_body return end_function program_function','program_function',14,'p_program_function','parser.py',236),
  ('program_function -> empty','program_function',1,'p_program_function','parser.py',237),
  ('f_type -> INT','f_type',1,'p_f_type','parser.py',242),
  ('f_type -> FLOAT','f_type',1,'p_f_type','parser.py',243),
  ('f_type -> CHAR','f_type',1,'p_f_type','parser.py',244),
  ('f_type -> VOID','f_type',1,'p_f_type','parser.py',245),
  ('func_creator -> empty','func_creator',1,'p_func_creator','parser.py',257),
  ('add_func_glob -> LBRACKET','add_func_glob',1,'p_add_func_glob','parser.py',264),
  ('end_function -> RBRACKET','end_function',1,'p_end_function','parser.py',277),
  ('param -> s_type id_saver add_params param2','param',4,'p_param','parser.py',283),
  ('param2 -> COMMA s_type id_saver add_params param2','param2',5,'p_param2','parser.py',286),
  ('param2 -> empty','param2',1,'p_param2','parser.py',287),
  ('add_params -> empty','add_params',1,'p_add_params','parser.py',291),
  ('return -> return_np exp return_quad SEMICOLON','return',4,'p_return','parser.py',298),
  ('return -> empty_path_return','return',1,'p_return','parser.py',299),
  ('return_np -> RETURN','return_np',1,'p_return_np','parser.py',302),
  ('return_quad -> empty','return_quad',1,'p_return_quad','parser.py',311),
  ('empty_path_return -> empty','empty_path_return',1,'p_empty_path_return','parser.py',317),
  ('program_main -> main_id LBRACKET program_vars inner_body RBRACKET','program_main',5,'p_program_main','parser.py',328),
  ('main_id -> MAIN resources','main_id',2,'p_main_id','parser.py',331),
  ('body -> LBRACKET inner_body RBRACKET','body',3,'p_body','parser.py',341),
  ('inner_body -> statement inner_body','inner_body',2,'p_inner_body','parser.py',345),
  ('inner_body -> empty','inner_body',1,'p_inner_body','parser.py',346),
  ('assign -> variable keep_assign specialf_assign end_assign','assign',4,'p_assign','parser.py',351),
  ('specialf_assign -> exp','specialf_assign',1,'p_specialf_assign','parser.py',357),
  ('specialf_assign -> special_function','specialf_assign',1,'p_specialf_assign','parser.py',358),
  ('specialf_assign -> read','specialf_assign',1,'p_specialf_assign','parser.py',359),
  ('keep_assign -> ASSIGN empty','keep_assign',2,'p_keep_assign','parser.py',363),
  ('end_assign -> SEMICOLON empty','end_assign',2,'p_end_assign','parser.py',379),
  ('condition -> IF LPAREN exp RPAREN condition_GOTOF body condition2 SEMICOLON end_condition','condition',9,'p_condition','parser.py',387),
  ('condition2 -> ELSE condition_GOTO body','condition2',3,'p_condition2','parser.py',390),
  ('condition2 -> empty','condition2',1,'p_condition2','parser.py',391),
  ('condition_GOTOF -> empty','condition_GOTOF',1,'p_condition_GOTOF','parser.py',395),
  ('condition_GOTO -> empty','condition_GOTO',1,'p_condition_GOTO','parser.py',402),
  ('end_condition -> empty','end_condition',1,'p_end_condition','parser.py',407),
  ('print -> PRINT LPAREN print_many RPAREN SEMICOLON end_print_np','print',6,'p_print','parser.py',416),
  ('print_type -> exp','print_type',1,'p_print_type','parser.py',419),
  ('print_many -> print_type print_many2','print_many',2,'p_print_many','parser.py',422),
  ('print_many2 -> COMMA print_many_np print_many','print_many2',3,'p_print_many2','parser.py',425),
  ('print_many2 -> empty','print_many2',1,'p_print_many2','parser.py',426),
  ('print_many_np -> empty','print_many_np',1,'p_print_many_np','parser.py',429),
  ('end_print_np -> empty','end_print_np',1,'p_end_print_np','parser.py',433),
  ('read -> READ LPAREN variable RPAREN read_np','read',5,'p_read','parser.py',439),
  ('read_np -> empty','read_np',1,'p_read_np','parser.py',442),
  ('cycle -> for','cycle',1,'p_cycle','parser.py',446),
  ('cycle -> while','cycle',1,'p_cycle','parser.py',447),
  ('while -> DO seed body WHILE LPAREN exp RPAREN SEMICOLON gotoV','while',9,'p_while','parser.py',451),
  ('seed -> empty','seed',1,'p_seed','parser.py',455),
  ('gotoV -> empty','gotoV',1,'p_gotoV','parser.py',460),
  ('for -> FOR LPAREN for_control keep_assign exp for_np1 for_end body for_np2','for',9,'p_for','parser.py',466),
  ('for_control -> id_saver','for_control',1,'p_for_control','parser.py',469),
  ('for_np1 -> TO','for_np1',1,'p_for_np1','parser.py',478),
  ('for_end -> int_const_saver RPAREN','for_end',2,'p_for_end','parser.py',483),
  ('for_np2 -> SEMICOLON','for_np2',1,'p_for_np2','parser.py',500),
  ('call_function -> function_saver function_flag call_params check_not_void','call_function',4,'p_call_function','parser.py',546),
  ('check_not_void -> RPAREN','check_not_void',1,'p_check_not_void','parser.py',551),
  ('call_void_function -> function_saver function_flag call_params RPAREN check_void','call_void_function',5,'p_call_void_function','parser.py',562),
  ('check_void -> SEMICOLON','check_void',1,'p_check_void','parser.py',565),
  ('function_saver -> ID empty','function_saver',2,'p_function_saver','parser.py',575),
  ('function_flag -> LPAREN','function_flag',1,'p_function_flag','parser.py',586),
  ('call_params -> exp exp_many','call_params',2,'p_call_params','parser.py',597),
  ('call_params -> empty','call_params',1,'p_call_params','parser.py',598),
  ('exp_many -> COMMA exp exp_many','exp_many',3,'p_exp_many','parser.py',603),
  ('exp_many -> empty','exp_many',1,'p_exp_many','parser.py',604),
  ('statement -> assign','statement',1,'p_statement','parser.py',608),
  ('statement -> condition','statement',1,'p_statement','parser.py',609),
  ('statement -> print','statement',1,'p_statement','parser.py',610),
  ('statement -> cycle','statement',1,'p_statement','parser.py',611),
  ('statement -> call_void_function','statement',1,'p_statement','parser.py',612),
  ('special_function -> exploration','special_function',1,'p_special_function','parser.py',616),
  ('special_function -> financial_state','special_function',1,'p_special_function','parser.py',617),
  ('special_function -> dummi_regression','special_function',1,'p_special_function','parser.py',618),
  ('special_function -> season_analysis','special_function',1,'p_special_function','parser.py',619),
  ('special_function -> trend_prediction','special_function',1,'p_special_function','parser.py',620),
  ('special_function -> model_predict','special_function',1,'p_special_function','parser.py',621),
  ('exploration -> EXPLORATION LPAREN variable explore_var explor_cte RPAREN','exploration',6,'p_exploration','parser.py',627),
  ('explore_var -> COMMA variable','explore_var',2,'p_explore_var','parser.py',630),
  ('explore_var -> empty','explore_var',1,'p_explore_var','parser.py',631),
  ('explor_cte -> COMMA int_const_saver','explor_cte',2,'p_explor_cte','parser.py',634),
  ('explor_cte -> empty','explor_cte',1,'p_explor_cte','parser.py',635),
  ('financial_state -> FINANCIAL_STATE LPAREN variable COMMA variable COMMA variable COMMA variable RPAREN','financial_state',10,'p_financial_state','parser.py',639),
  ('season_analysis -> SEASON_ANALYSIS LPAREN variable RPAREN','season_analysis',4,'p_season_analysis','parser.py',643),
  ('trend_prediction -> TREND_PREDICTION LPAREN variable COMMA int_const_saver COMMA int_const_saver COMMA int_const_saver RPAREN','trend_prediction',10,'p_trend_prediction','parser.py',649),
  ('dummi_regression -> DUMMI_REGRESSION LPAREN variable COMMA variable dr_array dr_int RPAREN','dummi_regression',8,'p_dummi_regression','parser.py',653),
  ('dr_array -> COMMA LSQBRACKET CTE_CHAR dr_array_mp RSQBRACKET','dr_array',5,'p_dr_array','parser.py',656),
  ('dr_array -> empty','dr_array',1,'p_dr_array','parser.py',657),
  ('dr_array_mp -> COMMA CTE_CHAR dr_array_mp','dr_array_mp',3,'p_dr_array_mp','parser.py',660),
  ('dr_array_mp -> empty','dr_array_mp',1,'p_dr_array_mp','parser.py',661),
  ('dr_int -> COMMA int_const_saver','dr_int',2,'p_dr_int','parser.py',664),
  ('dr_int -> empty','dr_int',1,'p_dr_int','parser.py',665),
  ('model_predict -> MODEL_PREDICT LPAREN variable COMMA variable COMMA RPAREN','model_predict',7,'p_model_predict','parser.py',669),
  ('exp -> t_exp release_exp exp_or','exp',3,'p_exp','parser.py',674),
  ('exp_or -> exp_keep_or exp','exp_or',2,'p_exp_or','parser.py',678),
  ('exp_or -> empty','exp_or',1,'p_exp_or','parser.py',679),
  ('exp_keep_or -> OR','exp_keep_or',1,'p_exp_keep_or','parser.py',682),
  ('t_exp -> expression release_exp t_exp_and','t_exp',3,'p_t_exp','parser.py',691),
  ('t_exp_and -> keep_and t_exp','t_exp_and',2,'p_t_exp_and','parser.py',696),
  ('t_exp_and -> empty','t_exp_and',1,'p_t_exp_and','parser.py',697),
  ('keep_and -> AND','keep_and',1,'p_keep_and','parser.py',700),
  ('expression -> m_exp release_exp expression_comp','expression',3,'p_expression','parser.py',709),
  ('expression_comp -> expression_comp_2 m_exp release_exp','expression_comp',3,'p_expression_comp','parser.py',715),
  ('expression_comp -> empty','expression_comp',1,'p_expression_comp','parser.py',716),
  ('expression_comp_2 -> GTHAN','expression_comp_2',1,'p_expression_comp_2','parser.py',721),
  ('expression_comp_2 -> EQUAL','expression_comp_2',1,'p_expression_comp_2','parser.py',722),
  ('expression_comp_2 -> NOTEQUAL','expression_comp_2',1,'p_expression_comp_2','parser.py',723),
  ('expression_comp_2 -> LTHAN','expression_comp_2',1,'p_expression_comp_2','parser.py',724),
  ('expression_comp_2 -> GORE','expression_comp_2',1,'p_expression_comp_2','parser.py',725),
  ('expression_comp_2 -> LORE','expression_comp_2',1,'p_expression_comp_2','parser.py',726),
  ('m_exp -> term release_exp m_exp_sr','m_exp',3,'p_m_exp','parser.py',736),
  ('m_exp_sr -> m_exp_sr_2 m_exp','m_exp_sr',2,'p_m_exp_sr','parser.py',743),
  ('m_exp_sr -> empty','m_exp_sr',1,'p_m_exp_sr','parser.py',744),
  ('m_exp_sr_2 -> PLUS','m_exp_sr_2',1,'p_m_exp_sr_2','parser.py',747),
  ('m_exp_sr_2 -> MINUS','m_exp_sr_2',1,'p_m_exp_sr_2','parser.py',748),
  ('term -> sub_factor release_exp term_pc','term',3,'p_term','parser.py',756),
  ('term_pc -> term_pc_2 term','term_pc',2,'p_term_pc','parser.py',762),
  ('term_pc -> empty','term_pc',1,'p_term_pc','parser.py',763),
  ('term_pc_2 -> MULTIPLY','term_pc_2',1,'p_term_pc_2','parser.py',766),
  ('term_pc_2 -> DIVIDE','term_pc_2',1,'p_term_pc_2','parser.py',767),
  ('term_pc_2 -> MODULE','term_pc_2',1,'p_term_pc_2','parser.py',768),
  ('sub_factor -> factor release_exp sub_factor_pc','sub_factor',3,'p_sub_factor','parser.py',774),
  ('sub_factor_pc -> sub_factor_pc_2 sub_factor','sub_factor_pc',2,'p_sub_factor_pc','parser.py',780),
  ('sub_factor_pc -> empty','sub_factor_pc',1,'p_sub_factor_pc','parser.py',781),
  ('sub_factor_pc_2 -> POWER empty','sub_factor_pc_2',2,'p_sub_factor_pc_2','parser.py',784),
  ('factor -> factor_exp','factor',1,'p_factor','parser.py',792),
  ('factor -> factor_cte','factor',1,'p_factor','parser.py',793),
  ('factor -> variable','factor',1,'p_factor','parser.py',794),
  ('factor -> call_function','factor',1,'p_factor','parser.py',795),
  ('factor_exp -> false_button exp release_false_button','factor_exp',3,'p_factor_exp','parser.py',802),
  ('false_button -> LPAREN','false_button',1,'p_false_button','parser.py',807),
  ('release_false_button -> RPAREN','release_false_button',1,'p_release_false_button','parser.py',813),
  ('factor_cte -> CTE_FLOAT','factor_cte',1,'p_factor_cte','parser.py',820),
  ('factor_cte -> CTE_INT','factor_cte',1,'p_factor_cte','parser.py',821),
  ('factor_cte -> CTE_CHAR','factor_cte',1,'p_factor_cte','parser.py',822),
]
